{"ast":null,"code":"import { BubbleMenuPlugin } from '@tiptap/extension-bubble-menu';\nimport React, { useState, useRef, useEffect, createContext, useContext } from 'react';\nimport ReactDOM, { flushSync } from 'react-dom';\nimport { Editor as Editor$1, NodeView } from '@tiptap/core';\nexport * from '@tiptap/core';\nimport { FloatingMenuPlugin } from '@tiptap/extension-floating-menu';\nconst Portals = ({\n  renderers\n}) => {\n  return React.createElement(React.Fragment, null, Object.entries(renderers).map(([key, renderer]) => {\n    return ReactDOM.createPortal(renderer.reactElement, renderer.element, key);\n  }));\n};\nclass PureEditorContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.editorContentRef = React.createRef();\n    this.initialized = false;\n    this.state = {\n      renderers: {}\n    };\n  }\n  componentDidMount() {\n    this.init();\n  }\n  componentDidUpdate() {\n    this.init();\n  }\n  init() {\n    const {\n      editor\n    } = this.props;\n    if (editor && editor.options.element) {\n      if (editor.contentComponent) {\n        return;\n      }\n      const element = this.editorContentRef.current;\n      element.append(...editor.options.element.childNodes);\n      editor.setOptions({\n        element\n      });\n      editor.contentComponent = this;\n      editor.createNodeViews();\n      this.initialized = true;\n    }\n  }\n  maybeFlushSync(fn) {\n    // Avoid calling flushSync until the editor is initialized.\n    // Initialization happens during the componentDidMount or componentDidUpdate\n    // lifecycle methods, and React doesn't allow calling flushSync from inside\n    // a lifecycle method.\n    if (this.initialized) {\n      flushSync(fn);\n    } else {\n      fn();\n    }\n  }\n  setRenderer(id, renderer) {\n    this.maybeFlushSync(() => {\n      this.setState(({\n        renderers\n      }) => ({\n        renderers: {\n          ...renderers,\n          [id]: renderer\n        }\n      }));\n    });\n  }\n  removeRenderer(id) {\n    this.maybeFlushSync(() => {\n      this.setState(({\n        renderers\n      }) => {\n        const nextRenderers = {\n          ...renderers\n        };\n        delete nextRenderers[id];\n        return {\n          renderers: nextRenderers\n        };\n      });\n    });\n  }\n  componentWillUnmount() {\n    const {\n      editor\n    } = this.props;\n    if (!editor) {\n      return;\n    }\n    this.initialized = false;\n    if (!editor.isDestroyed) {\n      editor.view.setProps({\n        nodeViews: {}\n      });\n    }\n    editor.contentComponent = null;\n    if (!editor.options.element.firstChild) {\n      return;\n    }\n    const newElement = document.createElement('div');\n    newElement.append(...editor.options.element.childNodes);\n    editor.setOptions({\n      element: newElement\n    });\n  }\n  render() {\n    const {\n      editor,\n      ...rest\n    } = this.props;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      ref: this.editorContentRef,\n      ...rest\n    }), React.createElement(Portals, {\n      renderers: this.state.renderers\n    }));\n  }\n}\n// EditorContent should be re-created whenever the Editor instance changes\nconst EditorContentWithKey = props => {\n  const key = React.useMemo(() => {\n    return Math.floor(Math.random() * 0xFFFFFFFF).toString();\n  }, [props.editor]);\n  // Can't use JSX here because it conflicts with the type definition of Vue's JSX, so use createElement\n  return React.createElement(PureEditorContent, {\n    key,\n    ...props\n  });\n};\nconst EditorContent = React.memo(EditorContentWithKey);\nclass Editor extends Editor$1 {\n  constructor() {\n    super(...arguments);\n    this.contentComponent = null;\n  }\n}\nfunction useForceUpdate() {\n  const [, setValue] = useState(0);\n  return () => setValue(value => value + 1);\n}\nconst useEditor = (options = {}, deps = []) => {\n  const [editor, setEditor] = useState(null);\n  const forceUpdate = useForceUpdate();\n  const {\n    onBeforeCreate,\n    onBlur,\n    onCreate,\n    onDestroy,\n    onFocus,\n    onSelectionUpdate,\n    onTransaction,\n    onUpdate\n  } = options;\n  const onBeforeCreateRef = useRef(onBeforeCreate);\n  const onBlurRef = useRef(onBlur);\n  const onCreateRef = useRef(onCreate);\n  const onDestroyRef = useRef(onDestroy);\n  const onFocusRef = useRef(onFocus);\n  const onSelectionUpdateRef = useRef(onSelectionUpdate);\n  const onTransactionRef = useRef(onTransaction);\n  const onUpdateRef = useRef(onUpdate);\n  // This effect will handle updating the editor instance\n  // when the event handlers change.\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n    if (onBeforeCreate) {\n      editor.off('beforeCreate', onBeforeCreateRef.current);\n      editor.on('beforeCreate', onBeforeCreate);\n      onBeforeCreateRef.current = onBeforeCreate;\n    }\n    if (onBlur) {\n      editor.off('blur', onBlurRef.current);\n      editor.on('blur', onBlur);\n      onBlurRef.current = onBlur;\n    }\n    if (onCreate) {\n      editor.off('create', onCreateRef.current);\n      editor.on('create', onCreate);\n      onCreateRef.current = onCreate;\n    }\n    if (onDestroy) {\n      editor.off('destroy', onDestroyRef.current);\n      editor.on('destroy', onDestroy);\n      onDestroyRef.current = onDestroy;\n    }\n    if (onFocus) {\n      editor.off('focus', onFocusRef.current);\n      editor.on('focus', onFocus);\n      onFocusRef.current = onFocus;\n    }\n    if (onSelectionUpdate) {\n      editor.off('selectionUpdate', onSelectionUpdateRef.current);\n      editor.on('selectionUpdate', onSelectionUpdate);\n      onSelectionUpdateRef.current = onSelectionUpdate;\n    }\n    if (onTransaction) {\n      editor.off('transaction', onTransactionRef.current);\n      editor.on('transaction', onTransaction);\n      onTransactionRef.current = onTransaction;\n    }\n    if (onUpdate) {\n      editor.off('update', onUpdateRef.current);\n      editor.on('update', onUpdate);\n      onUpdateRef.current = onUpdate;\n    }\n  }, [onBeforeCreate, onBlur, onCreate, onDestroy, onFocus, onSelectionUpdate, onTransaction, onUpdate, editor]);\n  useEffect(() => {\n    let isMounted = true;\n    const instance = new Editor(options);\n    setEditor(instance);\n    instance.on('transaction', () => {\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          if (isMounted) {\n            forceUpdate();\n          }\n        });\n      });\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, deps);\n  useEffect(() => {\n    return () => {\n      editor === null || editor === void 0 ? void 0 : editor.destroy();\n    };\n  }, [editor]);\n  return editor;\n};\nconst EditorContext = createContext({\n  editor: null\n});\nconst EditorConsumer = EditorContext.Consumer;\nconst useCurrentEditor = () => useContext(EditorContext);\nconst EditorProvider = ({\n  children,\n  slotAfter,\n  slotBefore,\n  ...editorOptions\n}) => {\n  const editor = useEditor(editorOptions);\n  if (!editor) {\n    return null;\n  }\n  return React.createElement(EditorContext.Provider, {\n    value: {\n      editor\n    }\n  }, slotBefore, React.createElement(EditorConsumer, null, ({\n    editor: currentEditor\n  }) => React.createElement(EditorContent, {\n    editor: currentEditor\n  })), children, slotAfter);\n};\nconst BubbleMenu = props => {\n  const [element, setElement] = useState(null);\n  const {\n    editor: currentEditor\n  } = useCurrentEditor();\n  useEffect(() => {\n    var _a;\n    if (!element) {\n      return;\n    }\n    if (((_a = props.editor) === null || _a === void 0 ? void 0 : _a.isDestroyed) || (currentEditor === null || currentEditor === void 0 ? void 0 : currentEditor.isDestroyed)) {\n      return;\n    }\n    const {\n      pluginKey = 'bubbleMenu',\n      editor,\n      tippyOptions = {},\n      updateDelay,\n      shouldShow = null\n    } = props;\n    const menuEditor = editor || currentEditor;\n    if (!menuEditor) {\n      console.warn('BubbleMenu component is not rendered inside of an editor component or does not have editor prop.');\n      return;\n    }\n    const plugin = BubbleMenuPlugin({\n      updateDelay,\n      editor: menuEditor,\n      element,\n      pluginKey,\n      shouldShow,\n      tippyOptions\n    });\n    menuEditor.registerPlugin(plugin);\n    return () => menuEditor.unregisterPlugin(pluginKey);\n  }, [props.editor, currentEditor, element]);\n  return React.createElement(\"div\", {\n    ref: setElement,\n    className: props.className,\n    style: {\n      visibility: 'hidden'\n    }\n  }, props.children);\n};\nconst FloatingMenu = props => {\n  const [element, setElement] = useState(null);\n  const {\n    editor: currentEditor\n  } = useCurrentEditor();\n  useEffect(() => {\n    var _a;\n    if (!element) {\n      return;\n    }\n    if (((_a = props.editor) === null || _a === void 0 ? void 0 : _a.isDestroyed) || (currentEditor === null || currentEditor === void 0 ? void 0 : currentEditor.isDestroyed)) {\n      return;\n    }\n    const {\n      pluginKey = 'floatingMenu',\n      editor,\n      tippyOptions = {},\n      shouldShow = null\n    } = props;\n    const menuEditor = editor || currentEditor;\n    if (!menuEditor) {\n      console.warn('FloatingMenu component is not rendered inside of an editor component or does not have editor prop.');\n      return;\n    }\n    const plugin = FloatingMenuPlugin({\n      pluginKey,\n      editor: menuEditor,\n      element,\n      tippyOptions,\n      shouldShow\n    });\n    menuEditor.registerPlugin(plugin);\n    return () => menuEditor.unregisterPlugin(pluginKey);\n  }, [props.editor, currentEditor, element]);\n  return React.createElement(\"div\", {\n    ref: setElement,\n    className: props.className,\n    style: {\n      visibility: 'hidden'\n    }\n  }, props.children);\n};\nconst ReactNodeViewContext = createContext({\n  onDragStart: undefined\n});\nconst useReactNodeView = () => useContext(ReactNodeViewContext);\nconst NodeViewContent = props => {\n  const Tag = props.as || 'div';\n  const {\n    nodeViewContentRef\n  } = useReactNodeView();\n  return React.createElement(Tag, {\n    ...props,\n    ref: nodeViewContentRef,\n    \"data-node-view-content\": \"\",\n    style: {\n      whiteSpace: 'pre-wrap',\n      ...props.style\n    }\n  });\n};\nconst NodeViewWrapper = React.forwardRef((props, ref) => {\n  const {\n    onDragStart\n  } = useReactNodeView();\n  const Tag = props.as || 'div';\n  return React.createElement(Tag, {\n    ...props,\n    ref: ref,\n    \"data-node-view-wrapper\": \"\",\n    onDragStart: onDragStart,\n    style: {\n      whiteSpace: 'normal',\n      ...props.style\n    }\n  });\n});\nfunction isClassComponent(Component) {\n  return !!(typeof Component === 'function' && Component.prototype && Component.prototype.isReactComponent);\n}\nfunction isForwardRefComponent(Component) {\n  var _a;\n  return !!(typeof Component === 'object' && ((_a = Component.$$typeof) === null || _a === void 0 ? void 0 : _a.toString()) === 'Symbol(react.forward_ref)');\n}\nclass ReactRenderer {\n  constructor(component, {\n    editor,\n    props = {},\n    as = 'div',\n    className = '',\n    attrs\n  }) {\n    this.ref = null;\n    this.id = Math.floor(Math.random() * 0xFFFFFFFF).toString();\n    this.component = component;\n    this.editor = editor;\n    this.props = props;\n    this.element = document.createElement(as);\n    this.element.classList.add('react-renderer');\n    if (className) {\n      this.element.classList.add(...className.split(' '));\n    }\n    if (attrs) {\n      Object.keys(attrs).forEach(key => {\n        this.element.setAttribute(key, attrs[key]);\n      });\n    }\n    this.render();\n  }\n  render() {\n    var _a, _b;\n    const Component = this.component;\n    const props = this.props;\n    if (isClassComponent(Component) || isForwardRefComponent(Component)) {\n      props.ref = ref => {\n        this.ref = ref;\n      };\n    }\n    this.reactElement = React.createElement(Component, {\n      ...props\n    });\n    (_b = (_a = this.editor) === null || _a === void 0 ? void 0 : _a.contentComponent) === null || _b === void 0 ? void 0 : _b.setRenderer(this.id, this);\n  }\n  updateProps(props = {}) {\n    this.props = {\n      ...this.props,\n      ...props\n    };\n    this.render();\n  }\n  destroy() {\n    var _a, _b;\n    (_b = (_a = this.editor) === null || _a === void 0 ? void 0 : _a.contentComponent) === null || _b === void 0 ? void 0 : _b.removeRenderer(this.id);\n  }\n}\nclass ReactNodeView extends NodeView {\n  mount() {\n    const props = {\n      editor: this.editor,\n      node: this.node,\n      decorations: this.decorations,\n      selected: false,\n      extension: this.extension,\n      getPos: () => this.getPos(),\n      updateAttributes: (attributes = {}) => this.updateAttributes(attributes),\n      deleteNode: () => this.deleteNode()\n    };\n    if (!this.component.displayName) {\n      const capitalizeFirstChar = string => {\n        return string.charAt(0).toUpperCase() + string.substring(1);\n      };\n      this.component.displayName = capitalizeFirstChar(this.extension.name);\n    }\n    const ReactNodeViewProvider = componentProps => {\n      const Component = this.component;\n      const onDragStart = this.onDragStart.bind(this);\n      const nodeViewContentRef = element => {\n        if (element && this.contentDOMElement && element.firstChild !== this.contentDOMElement) {\n          element.appendChild(this.contentDOMElement);\n        }\n      };\n      return React.createElement(React.Fragment, null, React.createElement(ReactNodeViewContext.Provider, {\n        value: {\n          onDragStart,\n          nodeViewContentRef\n        }\n      }, React.createElement(Component, {\n        ...componentProps\n      })));\n    };\n    ReactNodeViewProvider.displayName = 'ReactNodeView';\n    this.contentDOMElement = this.node.isLeaf ? null : document.createElement(this.node.isInline ? 'span' : 'div');\n    if (this.contentDOMElement) {\n      // For some reason the whiteSpace prop is not inherited properly in Chrome and Safari\n      // With this fix it seems to work fine\n      // See: https://github.com/ueberdosis/tiptap/issues/1197\n      this.contentDOMElement.style.whiteSpace = 'inherit';\n    }\n    let as = this.node.isInline ? 'span' : 'div';\n    if (this.options.as) {\n      as = this.options.as;\n    }\n    const {\n      className = ''\n    } = this.options;\n    this.handleSelectionUpdate = this.handleSelectionUpdate.bind(this);\n    this.editor.on('selectionUpdate', this.handleSelectionUpdate);\n    this.renderer = new ReactRenderer(ReactNodeViewProvider, {\n      editor: this.editor,\n      props,\n      as,\n      className: `node-${this.node.type.name} ${className}`.trim(),\n      attrs: this.options.attrs\n    });\n  }\n  get dom() {\n    var _a;\n    if (this.renderer.element.firstElementChild && !((_a = this.renderer.element.firstElementChild) === null || _a === void 0 ? void 0 : _a.hasAttribute('data-node-view-wrapper'))) {\n      throw Error('Please use the NodeViewWrapper component for your node view.');\n    }\n    return this.renderer.element;\n  }\n  get contentDOM() {\n    if (this.node.isLeaf) {\n      return null;\n    }\n    return this.contentDOMElement;\n  }\n  handleSelectionUpdate() {\n    const {\n      from,\n      to\n    } = this.editor.state.selection;\n    if (from <= this.getPos() && to >= this.getPos() + this.node.nodeSize) {\n      if (this.renderer.props.selected) {\n        return;\n      }\n      this.selectNode();\n    } else {\n      if (!this.renderer.props.selected) {\n        return;\n      }\n      this.deselectNode();\n    }\n  }\n  update(node, decorations) {\n    const updateProps = props => {\n      this.renderer.updateProps(props);\n    };\n    if (node.type !== this.node.type) {\n      return false;\n    }\n    if (typeof this.options.update === 'function') {\n      const oldNode = this.node;\n      const oldDecorations = this.decorations;\n      this.node = node;\n      this.decorations = decorations;\n      return this.options.update({\n        oldNode,\n        oldDecorations,\n        newNode: node,\n        newDecorations: decorations,\n        updateProps: () => updateProps({\n          node,\n          decorations\n        })\n      });\n    }\n    if (node === this.node && this.decorations === decorations) {\n      return true;\n    }\n    this.node = node;\n    this.decorations = decorations;\n    updateProps({\n      node,\n      decorations\n    });\n    return true;\n  }\n  selectNode() {\n    this.renderer.updateProps({\n      selected: true\n    });\n    this.renderer.element.classList.add('ProseMirror-selectednode');\n  }\n  deselectNode() {\n    this.renderer.updateProps({\n      selected: false\n    });\n    this.renderer.element.classList.remove('ProseMirror-selectednode');\n  }\n  destroy() {\n    this.renderer.destroy();\n    this.editor.off('selectionUpdate', this.handleSelectionUpdate);\n    this.contentDOMElement = null;\n  }\n}\nfunction ReactNodeViewRenderer(component, options) {\n  return props => {\n    // try to get the parent component\n    // this is important for vue devtools to show the component hierarchy correctly\n    // maybe it’s `undefined` because <editor-content> isn’t rendered yet\n    if (!props.editor.contentComponent) {\n      return {};\n    }\n    return new ReactNodeView(component, props, options);\n  };\n}\nexport { BubbleMenu, Editor, EditorConsumer, EditorContent, EditorContext, EditorProvider, FloatingMenu, NodeViewContent, NodeViewWrapper, PureEditorContent, ReactNodeViewRenderer, ReactRenderer, useCurrentEditor, useEditor };","map":{"version":3,"names":["Portals","renderers","React","createElement","Fragment","Object","entries","map","key","renderer","ReactDOM","createPortal","reactElement","element","PureEditorContent","Component","constructor","props","editorContentRef","createRef","initialized","state","componentDidMount","init","componentDidUpdate","editor","options","contentComponent","current","append","childNodes","setOptions","createNodeViews","maybeFlushSync","fn","flushSync","setRenderer","id","setState","removeRenderer","nextRenderers","componentWillUnmount","isDestroyed","view","setProps","nodeViews","firstChild","newElement","document","render","rest","ref","EditorContentWithKey","useMemo","Math","floor","random","toString","EditorContent","memo","Editor","Editor$1","useForceUpdate","setValue","useState","value","useEditor","deps","setEditor","forceUpdate","onBeforeCreate","onBlur","onCreate","onDestroy","onFocus","onSelectionUpdate","onTransaction","onUpdate","onBeforeCreateRef","useRef","onBlurRef","onCreateRef","onDestroyRef","onFocusRef","onSelectionUpdateRef","onTransactionRef","onUpdateRef","useEffect","off","on","isMounted","instance","requestAnimationFrame","destroy","EditorContext","createContext","EditorConsumer","Consumer","useCurrentEditor","useContext","EditorProvider","children","slotAfter","slotBefore","editorOptions","Provider","currentEditor","BubbleMenu","setElement","_a","pluginKey","tippyOptions","updateDelay","shouldShow","menuEditor","console","warn","plugin","BubbleMenuPlugin","registerPlugin","unregisterPlugin","className","style","visibility","FloatingMenu","FloatingMenuPlugin","ReactNodeViewContext","onDragStart","undefined","useReactNodeView","NodeViewContent","Tag","as","nodeViewContentRef","whiteSpace","NodeViewWrapper","forwardRef","isClassComponent","prototype","isReactComponent","isForwardRefComponent","$$typeof","ReactRenderer","component","attrs","classList","add","split","keys","forEach","setAttribute","_b","updateProps","ReactNodeView","NodeView","mount","node","decorations","selected","extension","getPos","updateAttributes","attributes","deleteNode","displayName","capitalizeFirstChar","string","charAt","toUpperCase","substring","name","ReactNodeViewProvider","componentProps","bind","contentDOMElement","appendChild","isLeaf","isInline","handleSelectionUpdate","type","trim","dom","firstElementChild","hasAttribute","Error","contentDOM","from","to","selection","nodeSize","selectNode","deselectNode","update","oldNode","oldDecorations","newNode","newDecorations","remove","ReactNodeViewRenderer"],"sources":["/home/vinayak/Projects/websocket/ui/websocket_ui/node_modules/@tiptap/react/src/EditorContent.tsx","/home/vinayak/Projects/websocket/ui/websocket_ui/node_modules/@tiptap/react/src/Editor.ts","/home/vinayak/Projects/websocket/ui/websocket_ui/node_modules/@tiptap/react/src/useEditor.ts","/home/vinayak/Projects/websocket/ui/websocket_ui/node_modules/@tiptap/react/src/Context.tsx","/home/vinayak/Projects/websocket/ui/websocket_ui/node_modules/@tiptap/react/src/BubbleMenu.tsx","/home/vinayak/Projects/websocket/ui/websocket_ui/node_modules/@tiptap/react/src/FloatingMenu.tsx","/home/vinayak/Projects/websocket/ui/websocket_ui/node_modules/@tiptap/react/src/useReactNodeView.ts","/home/vinayak/Projects/websocket/ui/websocket_ui/node_modules/@tiptap/react/src/NodeViewContent.tsx","/home/vinayak/Projects/websocket/ui/websocket_ui/node_modules/@tiptap/react/src/NodeViewWrapper.tsx","/home/vinayak/Projects/websocket/ui/websocket_ui/node_modules/@tiptap/react/src/ReactRenderer.tsx","/home/vinayak/Projects/websocket/ui/websocket_ui/node_modules/@tiptap/react/src/ReactNodeViewRenderer.tsx"],"sourcesContent":["import React, { HTMLProps } from 'react'\nimport ReactDOM, { flushSync } from 'react-dom'\n\nimport { Editor } from './Editor.js'\nimport { ReactRenderer } from './ReactRenderer.js'\n\nconst Portals: React.FC<{ renderers: Record<string, ReactRenderer> }> = ({ renderers }) => {\n  return (\n    <>\n      {Object.entries(renderers).map(([key, renderer]) => {\n        return ReactDOM.createPortal(renderer.reactElement, renderer.element, key)\n      })}\n    </>\n  )\n}\n\nexport interface EditorContentProps extends HTMLProps<HTMLDivElement> {\n  editor: Editor | null;\n}\n\nexport interface EditorContentState {\n  renderers: Record<string, ReactRenderer>;\n}\n\nexport class PureEditorContent extends React.Component<EditorContentProps, EditorContentState> {\n  editorContentRef: React.RefObject<any>\n\n  initialized: boolean\n\n  constructor(props: EditorContentProps) {\n    super(props)\n    this.editorContentRef = React.createRef()\n    this.initialized = false\n\n    this.state = {\n      renderers: {},\n    }\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  componentDidUpdate() {\n    this.init()\n  }\n\n  init() {\n    const { editor } = this.props\n\n    if (editor && editor.options.element) {\n      if (editor.contentComponent) {\n        return\n      }\n\n      const element = this.editorContentRef.current\n\n      element.append(...editor.options.element.childNodes)\n\n      editor.setOptions({\n        element,\n      })\n\n      editor.contentComponent = this\n\n      editor.createNodeViews()\n\n      this.initialized = true\n    }\n  }\n\n  maybeFlushSync(fn: () => void) {\n    // Avoid calling flushSync until the editor is initialized.\n    // Initialization happens during the componentDidMount or componentDidUpdate\n    // lifecycle methods, and React doesn't allow calling flushSync from inside\n    // a lifecycle method.\n    if (this.initialized) {\n      flushSync(fn)\n    } else {\n      fn()\n    }\n  }\n\n  setRenderer(id: string, renderer: ReactRenderer) {\n    this.maybeFlushSync(() => {\n      this.setState(({ renderers }) => ({\n        renderers: {\n          ...renderers,\n          [id]: renderer,\n        },\n      }))\n    })\n  }\n\n  removeRenderer(id: string) {\n    this.maybeFlushSync(() => {\n      this.setState(({ renderers }) => {\n        const nextRenderers = { ...renderers }\n\n        delete nextRenderers[id]\n\n        return { renderers: nextRenderers }\n      })\n    })\n  }\n\n  componentWillUnmount() {\n    const { editor } = this.props\n\n    if (!editor) {\n      return\n    }\n\n    this.initialized = false\n\n    if (!editor.isDestroyed) {\n      editor.view.setProps({\n        nodeViews: {},\n      })\n    }\n\n    editor.contentComponent = null\n\n    if (!editor.options.element.firstChild) {\n      return\n    }\n\n    const newElement = document.createElement('div')\n\n    newElement.append(...editor.options.element.childNodes)\n\n    editor.setOptions({\n      element: newElement,\n    })\n  }\n\n  render() {\n    const { editor, ...rest } = this.props\n\n    return (\n      <>\n        <div ref={this.editorContentRef} {...rest} />\n        {/* @ts-ignore */}\n        <Portals renderers={this.state.renderers} />\n      </>\n    )\n  }\n}\n\n// EditorContent should be re-created whenever the Editor instance changes\nconst EditorContentWithKey = (props: EditorContentProps) => {\n  const key = React.useMemo(() => {\n    return Math.floor(Math.random() * 0xFFFFFFFF).toString()\n  }, [props.editor])\n\n  // Can't use JSX here because it conflicts with the type definition of Vue's JSX, so use createElement\n  return React.createElement(PureEditorContent, { key, ...props })\n}\n\nexport const EditorContent = React.memo(EditorContentWithKey)\n","import { Editor as CoreEditor } from '@tiptap/core'\nimport React from 'react'\n\nimport { EditorContentProps, EditorContentState } from './EditorContent.js'\nimport { ReactRenderer } from './ReactRenderer.js'\n\ntype ContentComponent = React.Component<EditorContentProps, EditorContentState> & {\n  setRenderer(id: string, renderer: ReactRenderer): void;\n  removeRenderer(id: string): void;\n}\n\nexport class Editor extends CoreEditor {\n  public contentComponent: ContentComponent | null = null\n}\n","import { EditorOptions } from '@tiptap/core'\nimport {\n  DependencyList,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\n\nimport { Editor } from './Editor.js'\n\nfunction useForceUpdate() {\n  const [, setValue] = useState(0)\n\n  return () => setValue(value => value + 1)\n}\n\nexport const useEditor = (options: Partial<EditorOptions> = {}, deps: DependencyList = []) => {\n  const [editor, setEditor] = useState<Editor | null>(null)\n\n  const forceUpdate = useForceUpdate()\n\n  const {\n    onBeforeCreate,\n    onBlur,\n    onCreate,\n    onDestroy,\n    onFocus,\n    onSelectionUpdate,\n    onTransaction,\n    onUpdate,\n  } = options\n\n  const onBeforeCreateRef = useRef(onBeforeCreate)\n  const onBlurRef = useRef(onBlur)\n  const onCreateRef = useRef(onCreate)\n  const onDestroyRef = useRef(onDestroy)\n  const onFocusRef = useRef(onFocus)\n  const onSelectionUpdateRef = useRef(onSelectionUpdate)\n  const onTransactionRef = useRef(onTransaction)\n  const onUpdateRef = useRef(onUpdate)\n\n  // This effect will handle updating the editor instance\n  // when the event handlers change.\n  useEffect(() => {\n    if (!editor) {\n      return\n    }\n\n    if (onBeforeCreate) {\n      editor.off('beforeCreate', onBeforeCreateRef.current)\n      editor.on('beforeCreate', onBeforeCreate)\n      onBeforeCreateRef.current = onBeforeCreate\n    }\n\n    if (onBlur) {\n      editor.off('blur', onBlurRef.current)\n      editor.on('blur', onBlur)\n      onBlurRef.current = onBlur\n    }\n\n    if (onCreate) {\n      editor.off('create', onCreateRef.current)\n      editor.on('create', onCreate)\n      onCreateRef.current = onCreate\n    }\n\n    if (onDestroy) {\n      editor.off('destroy', onDestroyRef.current)\n      editor.on('destroy', onDestroy)\n      onDestroyRef.current = onDestroy\n    }\n\n    if (onFocus) {\n      editor.off('focus', onFocusRef.current)\n      editor.on('focus', onFocus)\n      onFocusRef.current = onFocus\n    }\n\n    if (onSelectionUpdate) {\n      editor.off('selectionUpdate', onSelectionUpdateRef.current)\n      editor.on('selectionUpdate', onSelectionUpdate)\n      onSelectionUpdateRef.current = onSelectionUpdate\n    }\n\n    if (onTransaction) {\n      editor.off('transaction', onTransactionRef.current)\n      editor.on('transaction', onTransaction)\n      onTransactionRef.current = onTransaction\n    }\n\n    if (onUpdate) {\n      editor.off('update', onUpdateRef.current)\n      editor.on('update', onUpdate)\n      onUpdateRef.current = onUpdate\n    }\n  }, [onBeforeCreate, onBlur, onCreate, onDestroy, onFocus, onSelectionUpdate, onTransaction, onUpdate, editor])\n\n  useEffect(() => {\n    let isMounted = true\n\n    const instance = new Editor(options)\n\n    setEditor(instance)\n\n    instance.on('transaction', () => {\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          if (isMounted) {\n            forceUpdate()\n          }\n        })\n      })\n    })\n\n    return () => {\n      isMounted = false\n    }\n  }, deps)\n\n  useEffect(() => {\n    return () => {\n      editor?.destroy()\n    }\n  }, [editor])\n\n  return editor\n}\n","import { EditorOptions } from '@tiptap/core'\nimport React, { createContext, ReactNode, useContext } from 'react'\n\nimport { Editor } from './Editor.js'\nimport { EditorContent } from './EditorContent.js'\nimport { useEditor } from './useEditor.js'\n\nexport type EditorContextValue = {\n  editor: Editor | null;\n}\n\nexport const EditorContext = createContext<EditorContextValue>({\n  editor: null,\n})\n\nexport const EditorConsumer = EditorContext.Consumer\n\nexport const useCurrentEditor = () => useContext(EditorContext)\n\nexport type EditorProviderProps = {\n  children: ReactNode;\n  slotBefore?: ReactNode;\n  slotAfter?: ReactNode;\n} & Partial<EditorOptions>\n\nexport const EditorProvider = ({\n  children, slotAfter, slotBefore, ...editorOptions\n}: EditorProviderProps) => {\n  const editor = useEditor(editorOptions)\n\n  if (!editor) {\n    return null\n  }\n\n  return (\n    <EditorContext.Provider value={{ editor }}>\n      {slotBefore}\n      <EditorConsumer>\n        {({ editor: currentEditor }) => (\n          <EditorContent editor={currentEditor} />\n        )}\n      </EditorConsumer>\n      {children}\n      {slotAfter}\n    </EditorContext.Provider>\n  )\n}\n","import { BubbleMenuPlugin, BubbleMenuPluginProps } from '@tiptap/extension-bubble-menu'\nimport React, { useEffect, useState } from 'react'\n\nimport { useCurrentEditor } from './Context.js'\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\n\nexport type BubbleMenuProps = Omit<Optional<BubbleMenuPluginProps, 'pluginKey' | 'editor'>, 'element'> & {\n  className?: string;\n  children: React.ReactNode;\n  updateDelay?: number;\n};\n\nexport const BubbleMenu = (props: BubbleMenuProps) => {\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n  const { editor: currentEditor } = useCurrentEditor()\n\n  useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    if (props.editor?.isDestroyed || currentEditor?.isDestroyed) {\n      return\n    }\n\n    const {\n      pluginKey = 'bubbleMenu', editor, tippyOptions = {}, updateDelay, shouldShow = null,\n    } = props\n\n    const menuEditor = editor || currentEditor\n\n    if (!menuEditor) {\n      console.warn('BubbleMenu component is not rendered inside of an editor component or does not have editor prop.')\n      return\n    }\n\n    const plugin = BubbleMenuPlugin({\n      updateDelay,\n      editor: menuEditor,\n      element,\n      pluginKey,\n      shouldShow,\n      tippyOptions,\n    })\n\n    menuEditor.registerPlugin(plugin)\n    return () => menuEditor.unregisterPlugin(pluginKey)\n  }, [props.editor, currentEditor, element])\n\n  return (\n    <div ref={setElement} className={props.className} style={{ visibility: 'hidden' }}>\n      {props.children}\n    </div>\n  )\n}\n","import { FloatingMenuPlugin, FloatingMenuPluginProps } from '@tiptap/extension-floating-menu'\nimport React, {\n  useEffect, useState,\n} from 'react'\n\nimport { useCurrentEditor } from './Context.js'\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>\n\nexport type FloatingMenuProps = Omit<Optional<FloatingMenuPluginProps, 'pluginKey' | 'editor'>, 'element'> & {\n  className?: string,\n  children: React.ReactNode\n}\n\nexport const FloatingMenu = (props: FloatingMenuProps) => {\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n  const { editor: currentEditor } = useCurrentEditor()\n\n  useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    if (props.editor?.isDestroyed || currentEditor?.isDestroyed) {\n      return\n    }\n\n    const {\n      pluginKey = 'floatingMenu',\n      editor,\n      tippyOptions = {},\n      shouldShow = null,\n    } = props\n\n    const menuEditor = editor || currentEditor\n\n    if (!menuEditor) {\n      console.warn('FloatingMenu component is not rendered inside of an editor component or does not have editor prop.')\n      return\n    }\n\n    const plugin = FloatingMenuPlugin({\n      pluginKey,\n      editor: menuEditor,\n      element,\n      tippyOptions,\n      shouldShow,\n    })\n\n    menuEditor.registerPlugin(plugin)\n    return () => menuEditor.unregisterPlugin(pluginKey)\n  }, [\n    props.editor,\n    currentEditor,\n    element,\n  ])\n\n  return (\n    <div ref={setElement} className={props.className} style={{ visibility: 'hidden' }}>\n      {props.children}\n    </div>\n  )\n}\n","import { createContext, useContext } from 'react'\n\nexport interface ReactNodeViewContextProps {\n  onDragStart: (event: DragEvent) => void,\n  nodeViewContentRef: (element: HTMLElement | null) => void,\n}\n\nexport const ReactNodeViewContext = createContext<Partial<ReactNodeViewContextProps>>({\n  onDragStart: undefined,\n})\n\nexport const useReactNodeView = () => useContext(ReactNodeViewContext)\n","import React from 'react'\n\nimport { useReactNodeView } from './useReactNodeView.js'\n\nexport interface NodeViewContentProps {\n  [key: string]: any,\n  as?: React.ElementType,\n}\n\nexport const NodeViewContent: React.FC<NodeViewContentProps> = props => {\n  const Tag = props.as || 'div'\n  const { nodeViewContentRef } = useReactNodeView()\n\n  return (\n    <Tag\n      {...props}\n      ref={nodeViewContentRef}\n      data-node-view-content=\"\"\n      style={{\n        whiteSpace: 'pre-wrap',\n        ...props.style,\n      }}\n    />\n  )\n}\n","import React from 'react'\n\nimport { useReactNodeView } from './useReactNodeView.js'\n\nexport interface NodeViewWrapperProps {\n  [key: string]: any,\n  as?: React.ElementType,\n}\n\nexport const NodeViewWrapper: React.FC<NodeViewWrapperProps> = React.forwardRef((props, ref) => {\n  const { onDragStart } = useReactNodeView()\n  const Tag = props.as || 'div'\n\n  return (\n    <Tag\n      {...props}\n      ref={ref}\n      data-node-view-wrapper=\"\"\n      onDragStart={onDragStart}\n      style={{\n        whiteSpace: 'normal',\n        ...props.style,\n      }}\n    />\n  )\n})\n","import { Editor } from '@tiptap/core'\nimport React from 'react'\n\nimport { Editor as ExtendedEditor } from './Editor.js'\n\nfunction isClassComponent(Component: any) {\n  return !!(\n    typeof Component === 'function'\n    && Component.prototype\n    && Component.prototype.isReactComponent\n  )\n}\n\nfunction isForwardRefComponent(Component: any) {\n  return !!(\n    typeof Component === 'object'\n    && Component.$$typeof?.toString() === 'Symbol(react.forward_ref)'\n  )\n}\n\nexport interface ReactRendererOptions {\n  editor: Editor,\n  props?: Record<string, any>,\n  as?: string,\n  className?: string,\n  attrs?: Record<string, string>,\n}\n\ntype ComponentType<R, P> =\n  React.ComponentClass<P> |\n  React.FunctionComponent<P> |\n  React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<R>>;\n\nexport class ReactRenderer<R = unknown, P = unknown> {\n  id: string\n\n  editor: ExtendedEditor\n\n  component: any\n\n  element: Element\n\n  props: Record<string, any>\n\n  reactElement: React.ReactNode\n\n  ref: R | null = null\n\n  constructor(component: ComponentType<R, P>, {\n    editor,\n    props = {},\n    as = 'div',\n    className = '',\n    attrs,\n  }: ReactRendererOptions) {\n    this.id = Math.floor(Math.random() * 0xFFFFFFFF).toString()\n    this.component = component\n    this.editor = editor as ExtendedEditor\n    this.props = props\n    this.element = document.createElement(as)\n    this.element.classList.add('react-renderer')\n\n    if (className) {\n      this.element.classList.add(...className.split(' '))\n    }\n\n    if (attrs) {\n      Object.keys(attrs).forEach(key => {\n        this.element.setAttribute(key, attrs[key])\n      })\n    }\n\n    this.render()\n  }\n\n  render(): void {\n    const Component = this.component\n    const props = this.props\n\n    if (isClassComponent(Component) || isForwardRefComponent(Component)) {\n      props.ref = (ref: R) => {\n        this.ref = ref\n      }\n    }\n\n    this.reactElement = <Component {...props } />\n\n    this.editor?.contentComponent?.setRenderer(this.id, this)\n  }\n\n  updateProps(props: Record<string, any> = {}): void {\n    this.props = {\n      ...this.props,\n      ...props,\n    }\n\n    this.render()\n  }\n\n  destroy(): void {\n    this.editor?.contentComponent?.removeRenderer(this.id)\n  }\n}\n","import {\n  DecorationWithType,\n  NodeView,\n  NodeViewProps,\n  NodeViewRenderer,\n  NodeViewRendererOptions,\n  NodeViewRendererProps,\n} from '@tiptap/core'\nimport { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { Decoration, NodeView as ProseMirrorNodeView } from '@tiptap/pm/view'\nimport React from 'react'\n\nimport { Editor } from './Editor.js'\nimport { ReactRenderer } from './ReactRenderer.js'\nimport { ReactNodeViewContext, ReactNodeViewContextProps } from './useReactNodeView.js'\n\nexport interface ReactNodeViewRendererOptions extends NodeViewRendererOptions {\n  update:\n    | ((props: {\n        oldNode: ProseMirrorNode\n        oldDecorations: Decoration[]\n        newNode: ProseMirrorNode\n        newDecorations: Decoration[]\n        updateProps: () => void\n      }) => boolean)\n    | null\n  as?: string\n  className?: string\n  attrs?: Record<string, string>\n}\n\nclass ReactNodeView extends NodeView<\n  React.FunctionComponent,\n  Editor,\n  ReactNodeViewRendererOptions\n> {\n  renderer!: ReactRenderer\n\n  contentDOMElement!: HTMLElement | null\n\n  mount() {\n    const props: NodeViewProps = {\n      editor: this.editor,\n      node: this.node,\n      decorations: this.decorations,\n      selected: false,\n      extension: this.extension,\n      getPos: () => this.getPos(),\n      updateAttributes: (attributes = {}) => this.updateAttributes(attributes),\n      deleteNode: () => this.deleteNode(),\n    }\n\n    if (!(this.component as any).displayName) {\n      const capitalizeFirstChar = (string: string): string => {\n        return string.charAt(0).toUpperCase() + string.substring(1)\n      }\n\n      this.component.displayName = capitalizeFirstChar(this.extension.name)\n    }\n\n    const ReactNodeViewProvider: React.FunctionComponent = componentProps => {\n      const Component = this.component\n      const onDragStart = this.onDragStart.bind(this)\n      const nodeViewContentRef: ReactNodeViewContextProps['nodeViewContentRef'] = element => {\n        if (element && this.contentDOMElement && element.firstChild !== this.contentDOMElement) {\n          element.appendChild(this.contentDOMElement)\n        }\n      }\n\n      return (\n        <>\n          {/* @ts-ignore */}\n          <ReactNodeViewContext.Provider value={{ onDragStart, nodeViewContentRef }}>\n            {/* @ts-ignore */}\n            <Component {...componentProps} />\n          </ReactNodeViewContext.Provider>\n        </>\n      )\n    }\n\n    ReactNodeViewProvider.displayName = 'ReactNodeView'\n\n    this.contentDOMElement = this.node.isLeaf\n      ? null\n      : document.createElement(this.node.isInline ? 'span' : 'div')\n\n    if (this.contentDOMElement) {\n      // For some reason the whiteSpace prop is not inherited properly in Chrome and Safari\n      // With this fix it seems to work fine\n      // See: https://github.com/ueberdosis/tiptap/issues/1197\n      this.contentDOMElement.style.whiteSpace = 'inherit'\n    }\n\n    let as = this.node.isInline ? 'span' : 'div'\n\n    if (this.options.as) {\n      as = this.options.as\n    }\n\n    const { className = '' } = this.options\n\n    this.handleSelectionUpdate = this.handleSelectionUpdate.bind(this)\n    this.editor.on('selectionUpdate', this.handleSelectionUpdate)\n\n    this.renderer = new ReactRenderer(ReactNodeViewProvider, {\n      editor: this.editor,\n      props,\n      as,\n      className: `node-${this.node.type.name} ${className}`.trim(),\n      attrs: this.options.attrs,\n    })\n  }\n\n  get dom() {\n    if (\n      this.renderer.element.firstElementChild\n      && !this.renderer.element.firstElementChild?.hasAttribute('data-node-view-wrapper')\n    ) {\n      throw Error('Please use the NodeViewWrapper component for your node view.')\n    }\n\n    return this.renderer.element as HTMLElement\n  }\n\n  get contentDOM() {\n    if (this.node.isLeaf) {\n      return null\n    }\n\n    return this.contentDOMElement\n  }\n\n  handleSelectionUpdate() {\n    const { from, to } = this.editor.state.selection\n\n    if (from <= this.getPos() && to >= this.getPos() + this.node.nodeSize) {\n      if (this.renderer.props.selected) {\n        return\n      }\n\n      this.selectNode()\n    } else {\n      if (!this.renderer.props.selected) {\n        return\n      }\n\n      this.deselectNode()\n    }\n  }\n\n  update(node: ProseMirrorNode, decorations: DecorationWithType[]) {\n    const updateProps = (props?: Record<string, any>) => {\n      this.renderer.updateProps(props)\n    }\n\n    if (node.type !== this.node.type) {\n      return false\n    }\n\n    if (typeof this.options.update === 'function') {\n      const oldNode = this.node\n      const oldDecorations = this.decorations\n\n      this.node = node\n      this.decorations = decorations\n\n      return this.options.update({\n        oldNode,\n        oldDecorations,\n        newNode: node,\n        newDecorations: decorations,\n        updateProps: () => updateProps({ node, decorations }),\n      })\n    }\n\n    if (node === this.node && this.decorations === decorations) {\n      return true\n    }\n\n    this.node = node\n    this.decorations = decorations\n\n    updateProps({ node, decorations })\n\n    return true\n  }\n\n  selectNode() {\n    this.renderer.updateProps({\n      selected: true,\n    })\n    this.renderer.element.classList.add('ProseMirror-selectednode')\n  }\n\n  deselectNode() {\n    this.renderer.updateProps({\n      selected: false,\n    })\n    this.renderer.element.classList.remove('ProseMirror-selectednode')\n  }\n\n  destroy() {\n    this.renderer.destroy()\n    this.editor.off('selectionUpdate', this.handleSelectionUpdate)\n    this.contentDOMElement = null\n  }\n}\n\nexport function ReactNodeViewRenderer(\n  component: any,\n  options?: Partial<ReactNodeViewRendererOptions>,\n): NodeViewRenderer {\n  return (props: NodeViewRendererProps) => {\n    // try to get the parent component\n    // this is important for vue devtools to show the component hierarchy correctly\n    // maybe it’s `undefined` because <editor-content> isn’t rendered yet\n    if (!(props.editor as Editor).contentComponent) {\n      return {}\n    }\n\n    return new ReactNodeView(component, props, options) as unknown as ProseMirrorNodeView\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}