{"ast":null,"code":"import { TextSelection, NodeSelection, AllSelection, Selection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, Slice, DOMParser } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\nconst domIndex = function (node) {\n  for (var index = 0;; index++) {\n    node = node.previousSibling;\n    if (!node) return index;\n  }\n};\nconst parentNode = function (node) {\n  let parent = node.assignedSlot || node.parentNode;\n  return parent && parent.nodeType == 11 ? parent.host : parent;\n};\nlet reusedRange = null;\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nconst textRange = function (node, from, to) {\n  let range = reusedRange || (reusedRange = document.createRange());\n  range.setEnd(node, to == null ? node.nodeValue.length : to);\n  range.setStart(node, from || 0);\n  return range;\n};\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nconst isEquivalentPosition = function (node, off, targetNode, targetOff) {\n  return targetNode && (scanFor(node, off, targetNode, targetOff, -1) || scanFor(node, off, targetNode, targetOff, 1));\n};\nconst atomElements = /^(img|br|input|textarea|hr)$/i;\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n  for (;;) {\n    if (node == targetNode && off == targetOff) return true;\n    if (off == (dir < 0 ? 0 : nodeSize(node))) {\n      let parent = node.parentNode;\n      if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) || node.contentEditable == \"false\") return false;\n      off = domIndex(node) + (dir < 0 ? 0 : 1);\n      node = parent;\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n      if (node.contentEditable == \"false\") return false;\n      off = dir < 0 ? nodeSize(node) : 0;\n    } else {\n      return false;\n    }\n  }\n}\nfunction nodeSize(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isOnEdge(node, offset, parent) {\n  for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n    if (node == parent) return true;\n    let index = domIndex(node);\n    node = node.parentNode;\n    if (!node) return false;\n    atStart = atStart && index == 0;\n    atEnd = atEnd && index == nodeSize(node);\n  }\n}\nfunction hasBlockDesc(dom) {\n  let desc;\n  for (let cur = dom; cur; cur = cur.parentNode) if (desc = cur.pmViewDesc) break;\n  return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom);\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nconst selectionCollapsed = function (domSel) {\n  return domSel.focusNode && isEquivalentPosition(domSel.focusNode, domSel.focusOffset, domSel.anchorNode, domSel.anchorOffset);\n};\nfunction keyEvent(keyCode, key) {\n  let event = document.createEvent(\"Event\");\n  event.initEvent(\"keydown\", true, true);\n  event.keyCode = keyCode;\n  event.key = event.code = key;\n  return event;\n}\nfunction deepActiveElement(doc) {\n  let elt = doc.activeElement;\n  while (elt && elt.shadowRoot) elt = elt.shadowRoot.activeElement;\n  return elt;\n}\nfunction caretFromPoint(doc, x, y) {\n  if (doc.caretPositionFromPoint) {\n    try {\n      // Firefox throws for this call in hard-to-predict circumstances (#994)\n      let pos = doc.caretPositionFromPoint(x, y);\n      if (pos) return {\n        node: pos.offsetNode,\n        offset: pos.offset\n      };\n    } catch (_) {}\n  }\n  if (doc.caretRangeFromPoint) {\n    let range = doc.caretRangeFromPoint(x, y);\n    if (range) return {\n      node: range.startContainer,\n      offset: range.startOffset\n    };\n  }\n}\nconst nav = typeof navigator != \"undefined\" ? navigator : null;\nconst doc = typeof document != \"undefined\" ? document : null;\nconst agent = nav && nav.userAgent || \"\";\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst ie_version = ie_upto10 ? document.documentMode : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0;\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\ngecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1];\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nconst chrome = !!_chrome;\nconst chrome_version = _chrome ? +_chrome[1] : 0;\nconst safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n// Is true for both iOS and iPadOS for convenience\nconst ios = safari && (/Mobile\\/\\w+/.test(agent) || !!nav && nav.maxTouchPoints > 2);\nconst mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nconst windows = nav ? /Win/.test(nav.platform) : false;\nconst android = /Android \\d/.test(agent);\nconst webkit = !!doc && \"webkitFontSmoothing\" in doc.documentElement.style;\nconst webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;\nfunction windowRect(doc) {\n  return {\n    left: 0,\n    right: doc.documentElement.clientWidth,\n    top: 0,\n    bottom: doc.documentElement.clientHeight\n  };\n}\nfunction getSide(value, side) {\n  return typeof value == \"number\" ? value : value[side];\n}\nfunction clientRect(node) {\n  let rect = node.getBoundingClientRect();\n  // Adjust for elements with style \"transform: scale()\"\n  let scaleX = rect.width / node.offsetWidth || 1;\n  let scaleY = rect.height / node.offsetHeight || 1;\n  // Make sure scrollbar width isn't included in the rectangle\n  return {\n    left: rect.left,\n    right: rect.left + node.clientWidth * scaleX,\n    top: rect.top,\n    bottom: rect.top + node.clientHeight * scaleY\n  };\n}\nfunction scrollRectIntoView(view, rect, startDOM) {\n  let scrollThreshold = view.someProp(\"scrollThreshold\") || 0,\n    scrollMargin = view.someProp(\"scrollMargin\") || 5;\n  let doc = view.dom.ownerDocument;\n  for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n    if (!parent) break;\n    if (parent.nodeType != 1) continue;\n    let elt = parent;\n    let atTop = elt == doc.body;\n    let bounding = atTop ? windowRect(doc) : clientRect(elt);\n    let moveX = 0,\n      moveY = 0;\n    if (rect.top < bounding.top + getSide(scrollThreshold, \"top\")) moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"));else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\")) moveY = rect.bottom - rect.top > bounding.bottom - bounding.top ? rect.top + getSide(scrollMargin, \"top\") - bounding.top : rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\");\n    if (rect.left < bounding.left + getSide(scrollThreshold, \"left\")) moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"));else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\")) moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\");\n    if (moveX || moveY) {\n      if (atTop) {\n        doc.defaultView.scrollBy(moveX, moveY);\n      } else {\n        let startX = elt.scrollLeft,\n          startY = elt.scrollTop;\n        if (moveY) elt.scrollTop += moveY;\n        if (moveX) elt.scrollLeft += moveX;\n        let dX = elt.scrollLeft - startX,\n          dY = elt.scrollTop - startY;\n        rect = {\n          left: rect.left - dX,\n          top: rect.top - dY,\n          right: rect.right - dX,\n          bottom: rect.bottom - dY\n        };\n      }\n    }\n    if (atTop || /^(fixed|sticky)$/.test(getComputedStyle(parent).position)) break;\n  }\n}\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n  let rect = view.dom.getBoundingClientRect(),\n    startY = Math.max(0, rect.top);\n  let refDOM, refTop;\n  for (let x = (rect.left + rect.right) / 2, y = startY + 1; y < Math.min(innerHeight, rect.bottom); y += 5) {\n    let dom = view.root.elementFromPoint(x, y);\n    if (!dom || dom == view.dom || !view.dom.contains(dom)) continue;\n    let localRect = dom.getBoundingClientRect();\n    if (localRect.top >= startY - 20) {\n      refDOM = dom;\n      refTop = localRect.top;\n      break;\n    }\n  }\n  return {\n    refDOM: refDOM,\n    refTop: refTop,\n    stack: scrollStack(view.dom)\n  };\n}\nfunction scrollStack(dom) {\n  let stack = [],\n    doc = dom.ownerDocument;\n  for (let cur = dom; cur; cur = parentNode(cur)) {\n    stack.push({\n      dom: cur,\n      top: cur.scrollTop,\n      left: cur.scrollLeft\n    });\n    if (dom == doc) break;\n  }\n  return stack;\n}\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos({\n  refDOM,\n  refTop,\n  stack\n}) {\n  let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n  restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\nfunction restoreScrollStack(stack, dTop) {\n  for (let i = 0; i < stack.length; i++) {\n    let {\n      dom,\n      top,\n      left\n    } = stack[i];\n    if (dom.scrollTop != top + dTop) dom.scrollTop = top + dTop;\n    if (dom.scrollLeft != left) dom.scrollLeft = left;\n  }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n  if (dom.setActive) return dom.setActive(); // in IE\n  if (preventScrollSupported) return dom.focus(preventScrollSupported);\n  let stored = scrollStack(dom);\n  dom.focus(preventScrollSupported == null ? {\n    get preventScroll() {\n      preventScrollSupported = {\n        preventScroll: true\n      };\n      return true;\n    }\n  } : undefined);\n  if (!preventScrollSupported) {\n    preventScrollSupported = false;\n    restoreScrollStack(stored, 0);\n  }\n}\nfunction findOffsetInNode(node, coords) {\n  let closest,\n    dxClosest = 2e8,\n    coordsClosest,\n    offset = 0;\n  let rowBot = coords.top,\n    rowTop = coords.top;\n  let firstBelow, coordsBelow;\n  for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n    let rects;\n    if (child.nodeType == 1) rects = child.getClientRects();else if (child.nodeType == 3) rects = textRange(child).getClientRects();else continue;\n    for (let i = 0; i < rects.length; i++) {\n      let rect = rects[i];\n      if (rect.top <= rowBot && rect.bottom >= rowTop) {\n        rowBot = Math.max(rect.bottom, rowBot);\n        rowTop = Math.min(rect.top, rowTop);\n        let dx = rect.left > coords.left ? rect.left - coords.left : rect.right < coords.left ? coords.left - rect.right : 0;\n        if (dx < dxClosest) {\n          closest = child;\n          dxClosest = dx;\n          coordsClosest = dx && closest.nodeType == 3 ? {\n            left: rect.right < coords.left ? rect.right : rect.left,\n            top: coords.top\n          } : coords;\n          if (child.nodeType == 1 && dx) offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0);\n          continue;\n        }\n      } else if (rect.top > coords.top && !firstBelow && rect.left <= coords.left && rect.right >= coords.left) {\n        firstBelow = child;\n        coordsBelow = {\n          left: Math.max(rect.left, Math.min(rect.right, coords.left)),\n          top: rect.top\n        };\n      }\n      if (!closest && (coords.left >= rect.right && coords.top >= rect.top || coords.left >= rect.left && coords.top >= rect.bottom)) offset = childIndex + 1;\n    }\n  }\n  if (!closest && firstBelow) {\n    closest = firstBelow;\n    coordsClosest = coordsBelow;\n    dxClosest = 0;\n  }\n  if (closest && closest.nodeType == 3) return findOffsetInText(closest, coordsClosest);\n  if (!closest || dxClosest && closest.nodeType == 1) return {\n    node,\n    offset\n  };\n  return findOffsetInNode(closest, coordsClosest);\n}\nfunction findOffsetInText(node, coords) {\n  let len = node.nodeValue.length;\n  let range = document.createRange();\n  for (let i = 0; i < len; i++) {\n    range.setEnd(node, i + 1);\n    range.setStart(node, i);\n    let rect = singleRect(range, 1);\n    if (rect.top == rect.bottom) continue;\n    if (inRect(coords, rect)) return {\n      node,\n      offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)\n    };\n  }\n  return {\n    node,\n    offset: 0\n  };\n}\nfunction inRect(coords, rect) {\n  return coords.left >= rect.left - 1 && coords.left <= rect.right + 1 && coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1;\n}\nfunction targetKludge(dom, coords) {\n  let parent = dom.parentNode;\n  if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left) return parent;\n  return dom;\n}\nfunction posFromElement(view, elt, coords) {\n  let {\n      node,\n      offset\n    } = findOffsetInNode(elt, coords),\n    bias = -1;\n  if (node.nodeType == 1 && !node.firstChild) {\n    let rect = node.getBoundingClientRect();\n    bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n  }\n  return view.docView.posFromDOM(node, offset, bias);\n}\nfunction posFromCaret(view, node, offset, coords) {\n  // Browser (in caretPosition/RangeFromPoint) will agressively\n  // normalize towards nearby inline nodes. Since we are interested in\n  // positions between block nodes too, we first walk up the hierarchy\n  // of nodes to see if there are block nodes that the coordinates\n  // fall outside of. If so, we take the position before/after that\n  // block. If not, we call `posFromDOM` on the raw node/offset.\n  let outsideBlock = -1;\n  for (let cur = node, sawBlock = false;;) {\n    if (cur == view.dom) break;\n    let desc = view.docView.nearestDesc(cur, true);\n    if (!desc) return null;\n    if (desc.dom.nodeType == 1 && (desc.node.isBlock && desc.parent && !sawBlock || !desc.contentDOM)) {\n      let rect = desc.dom.getBoundingClientRect();\n      if (desc.node.isBlock && desc.parent && !sawBlock) {\n        sawBlock = true;\n        if (rect.left > coords.left || rect.top > coords.top) outsideBlock = desc.posBefore;else if (rect.right < coords.left || rect.bottom < coords.top) outsideBlock = desc.posAfter;\n      }\n      if (!desc.contentDOM && outsideBlock < 0 && !desc.node.isText) {\n        // If we are inside a leaf, return the side of the leaf closer to the coords\n        let before = desc.node.isBlock ? coords.top < (rect.top + rect.bottom) / 2 : coords.left < (rect.left + rect.right) / 2;\n        return before ? desc.posBefore : desc.posAfter;\n      }\n    }\n    cur = desc.dom.parentNode;\n  }\n  return outsideBlock > -1 ? outsideBlock : view.docView.posFromDOM(node, offset, -1);\n}\nfunction elementFromPoint(element, coords, box) {\n  let len = element.childNodes.length;\n  if (len && box.top < box.bottom) {\n    for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n      let child = element.childNodes[i];\n      if (child.nodeType == 1) {\n        let rects = child.getClientRects();\n        for (let j = 0; j < rects.length; j++) {\n          let rect = rects[j];\n          if (inRect(coords, rect)) return elementFromPoint(child, coords, rect);\n        }\n      }\n      if ((i = (i + 1) % len) == startI) break;\n    }\n  }\n  return element;\n}\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n  let doc = view.dom.ownerDocument,\n    node,\n    offset = 0;\n  let caret = caretFromPoint(doc, coords.left, coords.top);\n  if (caret) ({\n    node,\n    offset\n  } = caret);\n  let elt = (view.root.elementFromPoint ? view.root : doc).elementFromPoint(coords.left, coords.top);\n  let pos;\n  if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n    let box = view.dom.getBoundingClientRect();\n    if (!inRect(coords, box)) return null;\n    elt = elementFromPoint(view.dom, coords, box);\n    if (!elt) return null;\n  }\n  // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n  if (safari) {\n    for (let p = elt; node && p; p = parentNode(p)) if (p.draggable) node = undefined;\n  }\n  elt = targetKludge(elt, coords);\n  if (node) {\n    if (gecko && node.nodeType == 1) {\n      // Firefox will sometimes return offsets into <input> nodes, which\n      // have no actual children, from caretPositionFromPoint (#953)\n      offset = Math.min(offset, node.childNodes.length);\n      // It'll also move the returned position before image nodes,\n      // even if those are behind it.\n      if (offset < node.childNodes.length) {\n        let next = node.childNodes[offset],\n          box;\n        if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left && box.bottom > coords.top) offset++;\n      }\n    }\n    let prev;\n    // When clicking above the right side of an uneditable node, Chrome will report a cursor position after that node.\n    if (webkit && offset && node.nodeType == 1 && (prev = node.childNodes[offset - 1]).nodeType == 1 && prev.contentEditable == \"false\" && prev.getBoundingClientRect().top >= coords.top) offset--;\n    // Suspiciously specific kludge to work around caret*FromPoint\n    // never returning a position at the end of the document\n    if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 && coords.top > node.lastChild.getBoundingClientRect().bottom) pos = view.state.doc.content.size;\n    // Ignore positions directly after a BR, since caret*FromPoint\n    // 'round up' positions that would be more accurately placed\n    // before the BR node.\n    else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\") pos = posFromCaret(view, node, offset, coords);\n  }\n  if (pos == null) pos = posFromElement(view, elt, coords);\n  let desc = view.docView.nearestDesc(elt, true);\n  return {\n    pos,\n    inside: desc ? desc.posAtStart - desc.border : -1\n  };\n}\nfunction nonZero(rect) {\n  return rect.top < rect.bottom || rect.left < rect.right;\n}\nfunction singleRect(target, bias) {\n  let rects = target.getClientRects();\n  if (rects.length) {\n    let first = rects[bias < 0 ? 0 : rects.length - 1];\n    if (nonZero(first)) return first;\n  }\n  return Array.prototype.find.call(rects, nonZero) || target.getBoundingClientRect();\n}\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n  let {\n    node,\n    offset,\n    atom\n  } = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n  let supportEmptyRange = webkit || gecko;\n  if (node.nodeType == 3) {\n    // These browsers support querying empty text ranges. Prefer that in\n    // bidi context or when at the end of a node.\n    if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n      let rect = singleRect(textRange(node, offset, offset), side);\n      // Firefox returns bad results (the position before the space)\n      // when querying a position directly after line-broken\n      // whitespace. Detect this situation and and kludge around it\n      if (gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n        let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n        if (rectBefore.top == rect.top) {\n          let rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n          if (rectAfter.top != rect.top) return flattenV(rectAfter, rectAfter.left < rectBefore.left);\n        }\n      }\n      return rect;\n    } else {\n      let from = offset,\n        to = offset,\n        takeSide = side < 0 ? 1 : -1;\n      if (side < 0 && !offset) {\n        to++;\n        takeSide = -1;\n      } else if (side >= 0 && offset == node.nodeValue.length) {\n        from--;\n        takeSide = 1;\n      } else if (side < 0) {\n        from--;\n      } else {\n        to++;\n      }\n      return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0);\n    }\n  }\n  let $dom = view.state.doc.resolve(pos - (atom || 0));\n  // Return a horizontal line in block context\n  if (!$dom.parent.inlineContent) {\n    if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n      let before = node.childNodes[offset - 1];\n      if (before.nodeType == 1) return flattenH(before.getBoundingClientRect(), false);\n    }\n    if (atom == null && offset < nodeSize(node)) {\n      let after = node.childNodes[offset];\n      if (after.nodeType == 1) return flattenH(after.getBoundingClientRect(), true);\n    }\n    return flattenH(node.getBoundingClientRect(), side >= 0);\n  }\n  // Inline, not in text node (this is not Bidi-safe)\n  if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n    let before = node.childNodes[offset - 1];\n    let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n    // BR nodes tend to only return the rectangle before them.\n    // Only use them if they are the last element in their parent\n    : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null;\n    if (target) return flattenV(singleRect(target, 1), false);\n  }\n  if (atom == null && offset < nodeSize(node)) {\n    let after = node.childNodes[offset];\n    while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords) after = after.nextSibling;\n    let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, supportEmptyRange ? 0 : 1) : after.nodeType == 1 ? after : null;\n    if (target) return flattenV(singleRect(target, -1), true);\n  }\n  // All else failed, just try to get a rectangle for the target node\n  return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0);\n}\nfunction flattenV(rect, left) {\n  if (rect.width == 0) return rect;\n  let x = left ? rect.left : rect.right;\n  return {\n    top: rect.top,\n    bottom: rect.bottom,\n    left: x,\n    right: x\n  };\n}\nfunction flattenH(rect, top) {\n  if (rect.height == 0) return rect;\n  let y = top ? rect.top : rect.bottom;\n  return {\n    top: y,\n    bottom: y,\n    left: rect.left,\n    right: rect.right\n  };\n}\nfunction withFlushedState(view, state, f) {\n  let viewState = view.state,\n    active = view.root.activeElement;\n  if (viewState != state) view.updateState(state);\n  if (active != view.dom) view.focus();\n  try {\n    return f();\n  } finally {\n    if (viewState != state) view.updateState(viewState);\n    if (active != view.dom && active) active.focus();\n  }\n}\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n  let sel = state.selection;\n  let $pos = dir == \"up\" ? sel.$from : sel.$to;\n  return withFlushedState(view, state, () => {\n    let {\n      node: dom\n    } = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n    for (;;) {\n      let nearest = view.docView.nearestDesc(dom, true);\n      if (!nearest) break;\n      if (nearest.node.isBlock) {\n        dom = nearest.contentDOM || nearest.dom;\n        break;\n      }\n      dom = nearest.dom.parentNode;\n    }\n    let coords = coordsAtPos(view, $pos.pos, 1);\n    for (let child = dom.firstChild; child; child = child.nextSibling) {\n      let boxes;\n      if (child.nodeType == 1) boxes = child.getClientRects();else if (child.nodeType == 3) boxes = textRange(child, 0, child.nodeValue.length).getClientRects();else continue;\n      for (let i = 0; i < boxes.length; i++) {\n        let box = boxes[i];\n        if (box.bottom > box.top + 1 && (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2 : box.bottom - coords.bottom > (coords.bottom - box.top) * 2)) return false;\n      }\n    }\n    return true;\n  });\n}\nconst maybeRTL = /[\\u0590-\\u08ac]/;\nfunction endOfTextblockHorizontal(view, state, dir) {\n  let {\n    $head\n  } = state.selection;\n  if (!$head.parent.isTextblock) return false;\n  let offset = $head.parentOffset,\n    atStart = !offset,\n    atEnd = offset == $head.parent.content.size;\n  let sel = view.domSelection();\n  // If the textblock is all LTR, or the browser doesn't support\n  // Selection.modify (Edge), fall back to a primitive approach\n  if (!maybeRTL.test($head.parent.textContent) || !sel.modify) return dir == \"left\" || dir == \"backward\" ? atStart : atEnd;\n  return withFlushedState(view, state, () => {\n    // This is a huge hack, but appears to be the best we can\n    // currently do: use `Selection.modify` to move the selection by\n    // one character, and see if that moves the cursor out of the\n    // textblock (or doesn't move it at all, when at the start/end of\n    // the document).\n    let {\n      focusNode: oldNode,\n      focusOffset: oldOff,\n      anchorNode,\n      anchorOffset\n    } = view.domSelectionRange();\n    let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n    ;\n    sel.modify(\"move\", dir, \"character\");\n    let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n    let {\n      focusNode: newNode,\n      focusOffset: newOff\n    } = view.domSelectionRange();\n    let result = newNode && !parentDOM.contains(newNode.nodeType == 1 ? newNode : newNode.parentNode) || oldNode == newNode && oldOff == newOff;\n    // Restore the previous selection\n    try {\n      sel.collapse(anchorNode, anchorOffset);\n      if (oldNode && (oldNode != anchorNode || oldOff != anchorOffset) && sel.extend) sel.extend(oldNode, oldOff);\n    } catch (_) {}\n    if (oldBidiLevel != null) sel.caretBidiLevel = oldBidiLevel;\n    return result;\n  });\n}\nlet cachedState = null;\nlet cachedDir = null;\nlet cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n  if (cachedState == state && cachedDir == dir) return cachedResult;\n  cachedState = state;\n  cachedDir = dir;\n  return cachedResult = dir == \"up\" || dir == \"down\" ? endOfTextblockVertical(view, state, dir) : endOfTextblockHorizontal(view, state, dir);\n}\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\nconst NOT_DIRTY = 0,\n  CHILD_DIRTY = 1,\n  CONTENT_DIRTY = 2,\n  NODE_DIRTY = 3;\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n  constructor(parent, children, dom,\n  // This is the node that holds the child views. It may be null for\n  // descs that don't have children.\n  contentDOM) {\n    this.parent = parent;\n    this.children = children;\n    this.dom = dom;\n    this.contentDOM = contentDOM;\n    this.dirty = NOT_DIRTY;\n    // An expando property on the DOM node provides a link back to its\n    // description.\n    dom.pmViewDesc = this;\n  }\n  // Used to check whether a given description corresponds to a\n  // widget/mark/node.\n  matchesWidget(widget) {\n    return false;\n  }\n  matchesMark(mark) {\n    return false;\n  }\n  matchesNode(node, outerDeco, innerDeco) {\n    return false;\n  }\n  matchesHack(nodeName) {\n    return false;\n  }\n  // When parsing in-editor content (in domchange.js), we allow\n  // descriptions to determine the parse rules that should be used to\n  // parse them.\n  parseRule() {\n    return null;\n  }\n  // Used by the editor's event handler to ignore events that come\n  // from certain descs.\n  stopEvent(event) {\n    return false;\n  }\n  // The size of the content represented by this desc.\n  get size() {\n    let size = 0;\n    for (let i = 0; i < this.children.length; i++) size += this.children[i].size;\n    return size;\n  }\n  // For block nodes, this represents the space taken up by their\n  // start/end tokens.\n  get border() {\n    return 0;\n  }\n  destroy() {\n    this.parent = undefined;\n    if (this.dom.pmViewDesc == this) this.dom.pmViewDesc = undefined;\n    for (let i = 0; i < this.children.length; i++) this.children[i].destroy();\n  }\n  posBeforeChild(child) {\n    for (let i = 0, pos = this.posAtStart;; i++) {\n      let cur = this.children[i];\n      if (cur == child) return pos;\n      pos += cur.size;\n    }\n  }\n  get posBefore() {\n    return this.parent.posBeforeChild(this);\n  }\n  get posAtStart() {\n    return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;\n  }\n  get posAfter() {\n    return this.posBefore + this.size;\n  }\n  get posAtEnd() {\n    return this.posAtStart + this.size - 2 * this.border;\n  }\n  localPosFromDOM(dom, offset, bias) {\n    // If the DOM position is in the content, use the child desc after\n    // it to figure out a position.\n    if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n      if (bias < 0) {\n        let domBefore, desc;\n        if (dom == this.contentDOM) {\n          domBefore = dom.childNodes[offset - 1];\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode;\n          domBefore = dom.previousSibling;\n        }\n        while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this)) domBefore = domBefore.previousSibling;\n        return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart;\n      } else {\n        let domAfter, desc;\n        if (dom == this.contentDOM) {\n          domAfter = dom.childNodes[offset];\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode;\n          domAfter = dom.nextSibling;\n        }\n        while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this)) domAfter = domAfter.nextSibling;\n        return domAfter ? this.posBeforeChild(desc) : this.posAtEnd;\n      }\n    }\n    // Otherwise, use various heuristics, falling back on the bias\n    // parameter, to determine whether to return the position at the\n    // start or at the end of this view desc.\n    let atEnd;\n    if (dom == this.dom && this.contentDOM) {\n      atEnd = offset > domIndex(this.contentDOM);\n    } else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n      atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n    } else if (this.dom.firstChild) {\n      if (offset == 0) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) {\n          atEnd = false;\n          break;\n        }\n        if (search.previousSibling) break;\n      }\n      if (atEnd == null && offset == dom.childNodes.length) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) {\n          atEnd = true;\n          break;\n        }\n        if (search.nextSibling) break;\n      }\n    }\n    return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart;\n  }\n  nearestDesc(dom, onlyNodes = false) {\n    for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n      let desc = this.getDesc(cur),\n        nodeDOM;\n      if (desc && (!onlyNodes || desc.node)) {\n        // If dom is outside of this desc's nodeDOM, don't count it.\n        if (first && (nodeDOM = desc.nodeDOM) && !(nodeDOM.nodeType == 1 ? nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : nodeDOM == dom)) first = false;else return desc;\n      }\n    }\n  }\n  getDesc(dom) {\n    let desc = dom.pmViewDesc;\n    for (let cur = desc; cur; cur = cur.parent) if (cur == this) return desc;\n  }\n  posFromDOM(dom, offset, bias) {\n    for (let scan = dom; scan; scan = scan.parentNode) {\n      let desc = this.getDesc(scan);\n      if (desc) return desc.localPosFromDOM(dom, offset, bias);\n    }\n    return -1;\n  }\n  // Find the desc for the node after the given pos, if any. (When a\n  // parent node overrode rendering, there might not be one.)\n  descAt(pos) {\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i],\n        end = offset + child.size;\n      if (offset == pos && end != offset) {\n        while (!child.border && child.children.length) child = child.children[0];\n        return child;\n      }\n      if (pos < end) return child.descAt(pos - offset - child.border);\n      offset = end;\n    }\n  }\n  domFromPos(pos, side) {\n    if (!this.contentDOM) return {\n      node: this.dom,\n      offset: 0,\n      atom: pos + 1\n    };\n    // First find the position in the child array\n    let i = 0,\n      offset = 0;\n    for (let curPos = 0; i < this.children.length; i++) {\n      let child = this.children[i],\n        end = curPos + child.size;\n      if (end > pos || child instanceof TrailingHackViewDesc) {\n        offset = pos - curPos;\n        break;\n      }\n      curPos = end;\n    }\n    // If this points into the middle of a child, call through\n    if (offset) return this.children[i].domFromPos(offset - this.children[i].border, side);\n    // Go back if there were any zero-length widgets with side >= 0 before this point\n    for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.side >= 0; i--) {}\n    // Scan towards the first useable node\n    if (side <= 0) {\n      let prev,\n        enter = true;\n      for (;; i--, enter = false) {\n        prev = i ? this.children[i - 1] : null;\n        if (!prev || prev.dom.parentNode == this.contentDOM) break;\n      }\n      if (prev && side && enter && !prev.border && !prev.domAtom) return prev.domFromPos(prev.size, side);\n      return {\n        node: this.contentDOM,\n        offset: prev ? domIndex(prev.dom) + 1 : 0\n      };\n    } else {\n      let next,\n        enter = true;\n      for (;; i++, enter = false) {\n        next = i < this.children.length ? this.children[i] : null;\n        if (!next || next.dom.parentNode == this.contentDOM) break;\n      }\n      if (next && enter && !next.border && !next.domAtom) return next.domFromPos(0, side);\n      return {\n        node: this.contentDOM,\n        offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length\n      };\n    }\n  }\n  // Used to find a DOM range in a single parent for a given changed\n  // range.\n  parseRange(from, to, base = 0) {\n    if (this.children.length == 0) return {\n      node: this.contentDOM,\n      from,\n      to,\n      fromOffset: 0,\n      toOffset: this.contentDOM.childNodes.length\n    };\n    let fromOffset = -1,\n      toOffset = -1;\n    for (let offset = base, i = 0;; i++) {\n      let child = this.children[i],\n        end = offset + child.size;\n      if (fromOffset == -1 && from <= end) {\n        let childBase = offset + child.border;\n        // FIXME maybe descend mark views to parse a narrower range?\n        if (from >= childBase && to <= end - child.border && child.node && child.contentDOM && this.contentDOM.contains(child.contentDOM)) return child.parseRange(from, to, childBase);\n        from = offset;\n        for (let j = i; j > 0; j--) {\n          let prev = this.children[j - 1];\n          if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n            fromOffset = domIndex(prev.dom) + 1;\n            break;\n          }\n          from -= prev.size;\n        }\n        if (fromOffset == -1) fromOffset = 0;\n      }\n      if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n        to = end;\n        for (let j = i + 1; j < this.children.length; j++) {\n          let next = this.children[j];\n          if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n            toOffset = domIndex(next.dom);\n            break;\n          }\n          to += next.size;\n        }\n        if (toOffset == -1) toOffset = this.contentDOM.childNodes.length;\n        break;\n      }\n      offset = end;\n    }\n    return {\n      node: this.contentDOM,\n      from,\n      to,\n      fromOffset,\n      toOffset\n    };\n  }\n  emptyChildAt(side) {\n    if (this.border || !this.contentDOM || !this.children.length) return false;\n    let child = this.children[side < 0 ? 0 : this.children.length - 1];\n    return child.size == 0 || child.emptyChildAt(side);\n  }\n  domAfterPos(pos) {\n    let {\n      node,\n      offset\n    } = this.domFromPos(pos, 0);\n    if (node.nodeType != 1 || offset == node.childNodes.length) throw new RangeError(\"No node after pos \" + pos);\n    return node.childNodes[offset];\n  }\n  // View descs are responsible for setting any selection that falls\n  // entirely inside of them, so that custom implementations can do\n  // custom things with the selection. Note that this falls apart when\n  // a selection starts in such a node and ends in another, in which\n  // case we just use whatever domFromPos produces as a best effort.\n  setSelection(anchor, head, root, force = false) {\n    // If the selection falls entirely in a child, give it to that child\n    let from = Math.min(anchor, head),\n      to = Math.max(anchor, head);\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i],\n        end = offset + child.size;\n      if (from > offset && to < end) return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force);\n      offset = end;\n    }\n    let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n    let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n    let domSel = root.getSelection();\n    let brKludge = false;\n    // On Firefox, using Selection.collapse to put the cursor after a\n    // BR node for some reason doesn't always work (#1073). On Safari,\n    // the cursor sometimes inexplicable visually lags behind its\n    // reported position in such situations (#1092).\n    if ((gecko || safari) && anchor == head) {\n      let {\n        node,\n        offset\n      } = anchorDOM;\n      if (node.nodeType == 3) {\n        brKludge = !!(offset && node.nodeValue[offset - 1] == \"\\n\");\n        // Issue #1128\n        if (brKludge && offset == node.nodeValue.length) {\n          for (let scan = node, after; scan; scan = scan.parentNode) {\n            if (after = scan.nextSibling) {\n              if (after.nodeName == \"BR\") anchorDOM = headDOM = {\n                node: after.parentNode,\n                offset: domIndex(after) + 1\n              };\n              break;\n            }\n            let desc = scan.pmViewDesc;\n            if (desc && desc.node && desc.node.isBlock) break;\n          }\n        }\n      } else {\n        let prev = node.childNodes[offset - 1];\n        brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n      }\n    }\n    // Firefox can act strangely when the selection is in front of an\n    // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n    if (gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n      let after = domSel.focusNode.childNodes[domSel.focusOffset];\n      if (after && after.contentEditable == \"false\") force = true;\n    }\n    if (!(force || brKludge && safari) && isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) && isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset)) return;\n    // Selection.extend can be used to create an 'inverted' selection\n    // (one where the focus is before the anchor), but not all\n    // browsers support it yet.\n    let domSelExtended = false;\n    if ((domSel.extend || anchor == head) && !brKludge) {\n      domSel.collapse(anchorDOM.node, anchorDOM.offset);\n      try {\n        if (anchor != head) domSel.extend(headDOM.node, headDOM.offset);\n        domSelExtended = true;\n      } catch (_) {\n        // In some cases with Chrome the selection is empty after calling\n        // collapse, even when it should be valid. This appears to be a bug, but\n        // it is difficult to isolate. If this happens fallback to the old path\n        // without using extend.\n        // Similarly, this could crash on Safari if the editor is hidden, and\n        // there was no selection.\n      }\n    }\n    if (!domSelExtended) {\n      if (anchor > head) {\n        let tmp = anchorDOM;\n        anchorDOM = headDOM;\n        headDOM = tmp;\n      }\n      let range = document.createRange();\n      range.setEnd(headDOM.node, headDOM.offset);\n      range.setStart(anchorDOM.node, anchorDOM.offset);\n      domSel.removeAllRanges();\n      domSel.addRange(range);\n    }\n  }\n  ignoreMutation(mutation) {\n    return !this.contentDOM && mutation.type != \"selection\";\n  }\n  get contentLost() {\n    return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);\n  }\n  // Remove a subtree of the element tree that has been touched\n  // by a DOM change, so that the next update will redraw it.\n  markDirty(from, to) {\n    for (let offset = 0, i = 0; i < this.children.length; i++) {\n      let child = this.children[i],\n        end = offset + child.size;\n      if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n        let startInside = offset + child.border,\n          endInside = end - child.border;\n        if (from >= startInside && to <= endInside) {\n          this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n          if (from == startInside && to == endInside && (child.contentLost || child.dom.parentNode != this.contentDOM)) child.dirty = NODE_DIRTY;else child.markDirty(from - startInside, to - startInside);\n          return;\n        } else {\n          child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length ? CONTENT_DIRTY : NODE_DIRTY;\n        }\n      }\n      offset = end;\n    }\n    this.dirty = CONTENT_DIRTY;\n  }\n  markParentsDirty() {\n    let level = 1;\n    for (let node = this.parent; node; node = node.parent, level++) {\n      let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n      if (node.dirty < dirty) node.dirty = dirty;\n    }\n  }\n  get domAtom() {\n    return false;\n  }\n  get ignoreForCoords() {\n    return false;\n  }\n}\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n  constructor(parent, widget, view, pos) {\n    let self,\n      dom = widget.type.toDOM;\n    if (typeof dom == \"function\") dom = dom(view, () => {\n      if (!self) return pos;\n      if (self.parent) return self.parent.posBeforeChild(self);\n    });\n    if (!widget.type.spec.raw) {\n      if (dom.nodeType != 1) {\n        let wrap = document.createElement(\"span\");\n        wrap.appendChild(dom);\n        dom = wrap;\n      }\n      dom.contentEditable = \"false\";\n      dom.classList.add(\"ProseMirror-widget\");\n    }\n    super(parent, [], dom, null);\n    this.widget = widget;\n    this.widget = widget;\n    self = this;\n  }\n  matchesWidget(widget) {\n    return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type);\n  }\n  parseRule() {\n    return {\n      ignore: true\n    };\n  }\n  stopEvent(event) {\n    let stop = this.widget.spec.stopEvent;\n    return stop ? stop(event) : false;\n  }\n  ignoreMutation(mutation) {\n    return mutation.type != \"selection\" || this.widget.spec.ignoreSelection;\n  }\n  destroy() {\n    this.widget.type.destroy(this.dom);\n    super.destroy();\n  }\n  get domAtom() {\n    return true;\n  }\n  get side() {\n    return this.widget.type.side;\n  }\n}\nclass CompositionViewDesc extends ViewDesc {\n  constructor(parent, dom, textDOM, text) {\n    super(parent, [], dom, null);\n    this.textDOM = textDOM;\n    this.text = text;\n  }\n  get size() {\n    return this.text.length;\n  }\n  localPosFromDOM(dom, offset) {\n    if (dom != this.textDOM) return this.posAtStart + (offset ? this.size : 0);\n    return this.posAtStart + offset;\n  }\n  domFromPos(pos) {\n    return {\n      node: this.textDOM,\n      offset: pos\n    };\n  }\n  ignoreMutation(mut) {\n    return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue;\n  }\n}\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n  constructor(parent, mark, dom, contentDOM) {\n    super(parent, [], dom, contentDOM);\n    this.mark = mark;\n  }\n  static create(parent, mark, inline, view) {\n    let custom = view.nodeViews[mark.type.name];\n    let spec = custom && custom(mark, view, inline);\n    if (!spec || !spec.dom) spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline));\n    return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom);\n  }\n  parseRule() {\n    if (this.dirty & NODE_DIRTY || this.mark.type.spec.reparseInView) return null;\n    return {\n      mark: this.mark.type.name,\n      attrs: this.mark.attrs,\n      contentElement: this.contentDOM\n    };\n  }\n  matchesMark(mark) {\n    return this.dirty != NODE_DIRTY && this.mark.eq(mark);\n  }\n  markDirty(from, to) {\n    super.markDirty(from, to);\n    // Move dirty info to nearest node view\n    if (this.dirty != NOT_DIRTY) {\n      let parent = this.parent;\n      while (!parent.node) parent = parent.parent;\n      if (parent.dirty < this.dirty) parent.dirty = this.dirty;\n      this.dirty = NOT_DIRTY;\n    }\n  }\n  slice(from, to, view) {\n    let copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n    let nodes = this.children,\n      size = this.size;\n    if (to < size) nodes = replaceNodes(nodes, to, size, view);\n    if (from > 0) nodes = replaceNodes(nodes, 0, from, view);\n    for (let i = 0; i < nodes.length; i++) nodes[i].parent = copy;\n    copy.children = nodes;\n    return copy;\n  }\n}\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n    super(parent, [], dom, contentDOM);\n    this.node = node;\n    this.outerDeco = outerDeco;\n    this.innerDeco = innerDeco;\n    this.nodeDOM = nodeDOM;\n  }\n  // By default, a node is rendered using the `toDOM` method from the\n  // node type spec. But client code can use the `nodeViews` spec to\n  // supply a custom node view, which can influence various aspects of\n  // the way the node works.\n  //\n  // (Using subclassing for this was intentionally decided against,\n  // since it'd require exposing a whole slew of finicky\n  // implementation details to the user code that they probably will\n  // never need.)\n  static create(parent, node, outerDeco, innerDeco, view, pos) {\n    let custom = view.nodeViews[node.type.name],\n      descObj;\n    let spec = custom && custom(node, view, () => {\n      // (This is a function that allows the custom view to find its\n      // own position)\n      if (!descObj) return pos;\n      if (descObj.parent) return descObj.parent.posBeforeChild(descObj);\n    }, outerDeco, innerDeco);\n    let dom = spec && spec.dom,\n      contentDOM = spec && spec.contentDOM;\n    if (node.isText) {\n      if (!dom) dom = document.createTextNode(node.text);else if (dom.nodeType != 3) throw new RangeError(\"Text must be rendered as a DOM text node\");\n    } else if (!dom) {\n      ({\n        dom,\n        contentDOM\n      } = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)));\n    }\n    if (!contentDOM && !node.isText && dom.nodeName != \"BR\") {\n      // Chrome gets confused by <br contenteditable=false>\n      if (!dom.hasAttribute(\"contenteditable\")) dom.contentEditable = \"false\";\n      if (node.type.spec.draggable) dom.draggable = true;\n    }\n    let nodeDOM = dom;\n    dom = applyOuterDeco(dom, outerDeco, node);\n    if (spec) return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, spec, view, pos + 1);else if (node.isText) return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view);else return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, view, pos + 1);\n  }\n  parseRule() {\n    // Experimental kludge to allow opt-in re-parsing of nodes\n    if (this.node.type.spec.reparseInView) return null;\n    // FIXME the assumption that this can always return the current\n    // attrs means that if the user somehow manages to change the\n    // attrs in the dom, that won't be picked up. Not entirely sure\n    // whether this is a problem\n    let rule = {\n      node: this.node.type.name,\n      attrs: this.node.attrs\n    };\n    if (this.node.type.whitespace == \"pre\") rule.preserveWhitespace = \"full\";\n    if (!this.contentDOM) {\n      rule.getContent = () => this.node.content;\n    } else if (!this.contentLost) {\n      rule.contentElement = this.contentDOM;\n    } else {\n      // Chrome likes to randomly recreate parent nodes when\n      // backspacing things. When that happens, this tries to find the\n      // new parent.\n      for (let i = this.children.length - 1; i >= 0; i--) {\n        let child = this.children[i];\n        if (this.dom.contains(child.dom.parentNode)) {\n          rule.contentElement = child.dom.parentNode;\n          break;\n        }\n      }\n      if (!rule.contentElement) rule.getContent = () => Fragment.empty;\n    }\n    return rule;\n  }\n  matchesNode(node, outerDeco, innerDeco) {\n    return this.dirty == NOT_DIRTY && node.eq(this.node) && sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco);\n  }\n  get size() {\n    return this.node.nodeSize;\n  }\n  get border() {\n    return this.node.isLeaf ? 0 : 1;\n  }\n  // Syncs `this.children` to match `this.node.content` and the local\n  // decorations, possibly introducing nesting for marks. Then, in a\n  // separate step, syncs the DOM inside `this.contentDOM` to\n  // `this.children`.\n  updateChildren(view, pos) {\n    let inline = this.node.inlineContent,\n      off = pos;\n    let composition = view.composing ? this.localCompositionInfo(view, pos) : null;\n    let localComposition = composition && composition.pos > -1 ? composition : null;\n    let compositionInChild = composition && composition.pos < 0;\n    let updater = new ViewTreeUpdater(this, localComposition && localComposition.node, view);\n    iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n      if (widget.spec.marks) updater.syncToMarks(widget.spec.marks, inline, view);else if (widget.type.side >= 0 && !insideNode) updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view);\n      // If the next node is a desc matching this widget, reuse it,\n      // otherwise insert the widget as a new view desc.\n      updater.placeWidget(widget, view, off);\n    }, (child, outerDeco, innerDeco, i) => {\n      // Make sure the wrapping mark descs match the node's marks.\n      updater.syncToMarks(child.marks, inline, view);\n      // Try several strategies for drawing this node\n      let compIndex;\n      if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ;else if (compositionInChild && view.state.selection.from > off && view.state.selection.to < off + child.nodeSize && (compIndex = updater.findIndexWithChild(composition.node)) > -1 && updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ;else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i, off)) ;else {\n        // Add it as a new view\n        updater.addNode(child, outerDeco, innerDeco, view, off);\n      }\n      off += child.nodeSize;\n    });\n    // Drop all remaining descs after the current position.\n    updater.syncToMarks([], inline, view);\n    if (this.node.isTextblock) updater.addTextblockHacks();\n    updater.destroyRest();\n    // Sync the DOM if anything changed\n    if (updater.changed || this.dirty == CONTENT_DIRTY) {\n      // May have to protect focused DOM from being changed if a composition is active\n      if (localComposition) this.protectLocalComposition(view, localComposition);\n      renderDescs(this.contentDOM, this.children, view);\n      if (ios) iosHacks(this.dom);\n    }\n  }\n  localCompositionInfo(view, pos) {\n    // Only do something if both the selection and a focused text node\n    // are inside of this node\n    let {\n      from,\n      to\n    } = view.state.selection;\n    if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size) return null;\n    let sel = view.domSelectionRange();\n    let textNode = nearbyTextNode(sel.focusNode, sel.focusOffset);\n    if (!textNode || !this.dom.contains(textNode.parentNode)) return null;\n    if (this.node.inlineContent) {\n      // Find the text in the focused node in the node, stop if it's not\n      // there (may have been modified through other means, in which\n      // case it should overwritten)\n      let text = textNode.nodeValue;\n      let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n      return textPos < 0 ? null : {\n        node: textNode,\n        pos: textPos,\n        text\n      };\n    } else {\n      return {\n        node: textNode,\n        pos: -1,\n        text: \"\"\n      };\n    }\n  }\n  protectLocalComposition(view, {\n    node,\n    pos,\n    text\n  }) {\n    // The node is already part of a local view desc, leave it there\n    if (this.getDesc(node)) return;\n    // Create a composition view for the orphaned nodes\n    let topNode = node;\n    for (;; topNode = topNode.parentNode) {\n      if (topNode.parentNode == this.contentDOM) break;\n      while (topNode.previousSibling) topNode.parentNode.removeChild(topNode.previousSibling);\n      while (topNode.nextSibling) topNode.parentNode.removeChild(topNode.nextSibling);\n      if (topNode.pmViewDesc) topNode.pmViewDesc = undefined;\n    }\n    let desc = new CompositionViewDesc(this, topNode, node, text);\n    view.input.compositionNodes.push(desc);\n    // Patch up this.children to contain the composition view\n    this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n  }\n  // If this desc must be updated to match the given node decoration,\n  // do so and return true.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY || !node.sameMarkup(this.node)) return false;\n    this.updateInner(node, outerDeco, innerDeco, view);\n    return true;\n  }\n  updateInner(node, outerDeco, innerDeco, view) {\n    this.updateOuterDeco(outerDeco);\n    this.node = node;\n    this.innerDeco = innerDeco;\n    if (this.contentDOM) this.updateChildren(view, this.posAtStart);\n    this.dirty = NOT_DIRTY;\n  }\n  updateOuterDeco(outerDeco) {\n    if (sameOuterDeco(outerDeco, this.outerDeco)) return;\n    let needsWrap = this.nodeDOM.nodeType != 1;\n    let oldDOM = this.dom;\n    this.dom = patchOuterDeco(this.dom, this.nodeDOM, computeOuterDeco(this.outerDeco, this.node, needsWrap), computeOuterDeco(outerDeco, this.node, needsWrap));\n    if (this.dom != oldDOM) {\n      oldDOM.pmViewDesc = undefined;\n      this.dom.pmViewDesc = this;\n    }\n    this.outerDeco = outerDeco;\n  }\n  // Mark this node as being the selected node.\n  selectNode() {\n    if (this.nodeDOM.nodeType == 1) this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n    if (this.contentDOM || !this.node.type.spec.draggable) this.dom.draggable = true;\n  }\n  // Remove selected node marking from this node.\n  deselectNode() {\n    if (this.nodeDOM.nodeType == 1) this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n    if (this.contentDOM || !this.node.type.spec.draggable) this.dom.removeAttribute(\"draggable\");\n  }\n  get domAtom() {\n    return this.node.isAtom;\n  }\n}\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n  applyOuterDeco(dom, outerDeco, doc);\n  let docView = new NodeViewDesc(undefined, doc, outerDeco, innerDeco, dom, dom, dom, view, 0);\n  if (docView.contentDOM) docView.updateChildren(view, 0);\n  return docView;\n}\nclass TextViewDesc extends NodeViewDesc {\n  constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n    super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view, 0);\n  }\n  parseRule() {\n    let skip = this.nodeDOM.parentNode;\n    while (skip && skip != this.dom && !skip.pmIsDeco) skip = skip.parentNode;\n    return {\n      skip: skip || true\n    };\n  }\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY || this.dirty != NOT_DIRTY && !this.inParent() || !node.sameMarkup(this.node)) return false;\n    this.updateOuterDeco(outerDeco);\n    if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n      this.nodeDOM.nodeValue = node.text;\n      if (view.trackWrites == this.nodeDOM) view.trackWrites = null;\n    }\n    this.node = node;\n    this.dirty = NOT_DIRTY;\n    return true;\n  }\n  inParent() {\n    let parentDOM = this.parent.contentDOM;\n    for (let n = this.nodeDOM; n; n = n.parentNode) if (n == parentDOM) return true;\n    return false;\n  }\n  domFromPos(pos) {\n    return {\n      node: this.nodeDOM,\n      offset: pos\n    };\n  }\n  localPosFromDOM(dom, offset, bias) {\n    if (dom == this.nodeDOM) return this.posAtStart + Math.min(offset, this.node.text.length);\n    return super.localPosFromDOM(dom, offset, bias);\n  }\n  ignoreMutation(mutation) {\n    return mutation.type != \"characterData\" && mutation.type != \"selection\";\n  }\n  slice(from, to, view) {\n    let node = this.node.cut(from, to),\n      dom = document.createTextNode(node.text);\n    return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view);\n  }\n  markDirty(from, to) {\n    super.markDirty(from, to);\n    if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length)) this.dirty = NODE_DIRTY;\n  }\n  get domAtom() {\n    return false;\n  }\n}\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n  parseRule() {\n    return {\n      ignore: true\n    };\n  }\n  matchesHack(nodeName) {\n    return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName;\n  }\n  get domAtom() {\n    return true;\n  }\n  get ignoreForCoords() {\n    return this.dom.nodeName == \"IMG\";\n  }\n}\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n    super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n    this.spec = spec;\n  }\n  // A custom `update` method gets to decide whether the update goes\n  // through. If it does, and there's a `contentDOM` node, our logic\n  // updates the children.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY) return false;\n    if (this.spec.update) {\n      let result = this.spec.update(node, outerDeco, innerDeco);\n      if (result) this.updateInner(node, outerDeco, innerDeco, view);\n      return result;\n    } else if (!this.contentDOM && !node.isLeaf) {\n      return false;\n    } else {\n      return super.update(node, outerDeco, innerDeco, view);\n    }\n  }\n  selectNode() {\n    this.spec.selectNode ? this.spec.selectNode() : super.selectNode();\n  }\n  deselectNode() {\n    this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();\n  }\n  setSelection(anchor, head, root, force) {\n    this.spec.setSelection ? this.spec.setSelection(anchor, head, root) : super.setSelection(anchor, head, root, force);\n  }\n  destroy() {\n    if (this.spec.destroy) this.spec.destroy();\n    super.destroy();\n  }\n  stopEvent(event) {\n    return this.spec.stopEvent ? this.spec.stopEvent(event) : false;\n  }\n  ignoreMutation(mutation) {\n    return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n  }\n}\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n  let dom = parentDOM.firstChild,\n    written = false;\n  for (let i = 0; i < descs.length; i++) {\n    let desc = descs[i],\n      childDOM = desc.dom;\n    if (childDOM.parentNode == parentDOM) {\n      while (childDOM != dom) {\n        dom = rm(dom);\n        written = true;\n      }\n      dom = dom.nextSibling;\n    } else {\n      written = true;\n      parentDOM.insertBefore(childDOM, dom);\n    }\n    if (desc instanceof MarkViewDesc) {\n      let pos = dom ? dom.previousSibling : parentDOM.lastChild;\n      renderDescs(desc.contentDOM, desc.children, view);\n      dom = pos ? pos.nextSibling : parentDOM.firstChild;\n    }\n  }\n  while (dom) {\n    dom = rm(dom);\n    written = true;\n  }\n  if (written && view.trackWrites == parentDOM) view.trackWrites = null;\n}\nconst OuterDecoLevel = function (nodeName) {\n  if (nodeName) this.nodeName = nodeName;\n};\nOuterDecoLevel.prototype = Object.create(null);\nconst noDeco = [new OuterDecoLevel()];\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n  if (outerDeco.length == 0) return noDeco;\n  let top = needsWrap ? noDeco[0] : new OuterDecoLevel(),\n    result = [top];\n  for (let i = 0; i < outerDeco.length; i++) {\n    let attrs = outerDeco[i].type.attrs;\n    if (!attrs) continue;\n    if (attrs.nodeName) result.push(top = new OuterDecoLevel(attrs.nodeName));\n    for (let name in attrs) {\n      let val = attrs[name];\n      if (val == null) continue;\n      if (needsWrap && result.length == 1) result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"));\n      if (name == \"class\") top.class = (top.class ? top.class + \" \" : \"\") + val;else if (name == \"style\") top.style = (top.style ? top.style + \";\" : \"\") + val;else if (name != \"nodeName\") top[name] = val;\n    }\n  }\n  return result;\n}\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n  // Shortcut for trivial case\n  if (prevComputed == noDeco && curComputed == noDeco) return nodeDOM;\n  let curDOM = nodeDOM;\n  for (let i = 0; i < curComputed.length; i++) {\n    let deco = curComputed[i],\n      prev = prevComputed[i];\n    if (i) {\n      let parent;\n      if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM && (parent = curDOM.parentNode) && parent.nodeName.toLowerCase() == deco.nodeName) {\n        curDOM = parent;\n      } else {\n        parent = document.createElement(deco.nodeName);\n        parent.pmIsDeco = true;\n        parent.appendChild(curDOM);\n        prev = noDeco[0];\n        curDOM = parent;\n      }\n    }\n    patchAttributes(curDOM, prev || noDeco[0], deco);\n  }\n  return curDOM;\n}\nfunction patchAttributes(dom, prev, cur) {\n  for (let name in prev) if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur)) dom.removeAttribute(name);\n  for (let name in cur) if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name]) dom.setAttribute(name, cur[name]);\n  if (prev.class != cur.class) {\n    let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : [];\n    let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : [];\n    for (let i = 0; i < prevList.length; i++) if (curList.indexOf(prevList[i]) == -1) dom.classList.remove(prevList[i]);\n    for (let i = 0; i < curList.length; i++) if (prevList.indexOf(curList[i]) == -1) dom.classList.add(curList[i]);\n    if (dom.classList.length == 0) dom.removeAttribute(\"class\");\n  }\n  if (prev.style != cur.style) {\n    if (prev.style) {\n      let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g,\n        m;\n      while (m = prop.exec(prev.style)) dom.style.removeProperty(m[1]);\n    }\n    if (cur.style) dom.style.cssText += cur.style;\n  }\n}\nfunction applyOuterDeco(dom, deco, node) {\n  return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1));\n}\nfunction sameOuterDeco(a, b) {\n  if (a.length != b.length) return false;\n  for (let i = 0; i < a.length; i++) if (!a[i].type.eq(b[i].type)) return false;\n  return true;\n}\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n  let next = dom.nextSibling;\n  dom.parentNode.removeChild(dom);\n  return next;\n}\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n  constructor(top, lock, view) {\n    this.lock = lock;\n    this.view = view;\n    // Index into `this.top`'s child array, represents the current\n    // update position.\n    this.index = 0;\n    // When entering a mark, the current top and index are pushed\n    // onto this.\n    this.stack = [];\n    // Tracks whether anything was changed\n    this.changed = false;\n    this.top = top;\n    this.preMatch = preMatch(top.node.content, top);\n  }\n  // Destroy and remove the children between the given indices in\n  // `this.top`.\n  destroyBetween(start, end) {\n    if (start == end) return;\n    for (let i = start; i < end; i++) this.top.children[i].destroy();\n    this.top.children.splice(start, end - start);\n    this.changed = true;\n  }\n  // Destroy all remaining children in `this.top`.\n  destroyRest() {\n    this.destroyBetween(this.index, this.top.children.length);\n  }\n  // Sync the current stack of mark descs with the given array of\n  // marks, reusing existing mark descs when possible.\n  syncToMarks(marks, inline, view) {\n    let keep = 0,\n      depth = this.stack.length >> 1;\n    let maxKeep = Math.min(depth, marks.length);\n    while (keep < maxKeep && (keep == depth - 1 ? this.top : this.stack[keep + 1 << 1]).matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false) keep++;\n    while (keep < depth) {\n      this.destroyRest();\n      this.top.dirty = NOT_DIRTY;\n      this.index = this.stack.pop();\n      this.top = this.stack.pop();\n      depth--;\n    }\n    while (depth < marks.length) {\n      this.stack.push(this.top, this.index + 1);\n      let found = -1;\n      for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n        let next = this.top.children[i];\n        if (next.matchesMark(marks[depth]) && !this.isLocked(next.dom)) {\n          found = i;\n          break;\n        }\n      }\n      if (found > -1) {\n        if (found > this.index) {\n          this.changed = true;\n          this.destroyBetween(this.index, found);\n        }\n        this.top = this.top.children[this.index];\n      } else {\n        let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n        this.top.children.splice(this.index, 0, markDesc);\n        this.top = markDesc;\n        this.changed = true;\n      }\n      this.index = 0;\n      depth++;\n    }\n  }\n  // Try to find a node desc matching the given data. Skip over it and\n  // return true when successful.\n  findNodeMatch(node, outerDeco, innerDeco, index) {\n    let found = -1,\n      targetDesc;\n    if (index >= this.preMatch.index && (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top && targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n      found = this.top.children.indexOf(targetDesc, this.index);\n    } else {\n      for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n        let child = this.top.children[i];\n        if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n          found = i;\n          break;\n        }\n      }\n    }\n    if (found < 0) return false;\n    this.destroyBetween(this.index, found);\n    this.index++;\n    return true;\n  }\n  updateNodeAt(node, outerDeco, innerDeco, index, view) {\n    let child = this.top.children[index];\n    if (child.dirty == NODE_DIRTY && child.dom == child.contentDOM) child.dirty = CONTENT_DIRTY;\n    if (!child.update(node, outerDeco, innerDeco, view)) return false;\n    this.destroyBetween(this.index, index);\n    this.index++;\n    return true;\n  }\n  findIndexWithChild(domNode) {\n    for (;;) {\n      let parent = domNode.parentNode;\n      if (!parent) return -1;\n      if (parent == this.top.contentDOM) {\n        let desc = domNode.pmViewDesc;\n        if (desc) for (let i = this.index; i < this.top.children.length; i++) {\n          if (this.top.children[i] == desc) return i;\n        }\n        return -1;\n      }\n      domNode = parent;\n    }\n  }\n  // Try to update the next node, if any, to the given data. Checks\n  // pre-matches to avoid overwriting nodes that could still be used.\n  updateNextNode(node, outerDeco, innerDeco, view, index, pos) {\n    for (let i = this.index; i < this.top.children.length; i++) {\n      let next = this.top.children[i];\n      if (next instanceof NodeViewDesc) {\n        let preMatch = this.preMatch.matched.get(next);\n        if (preMatch != null && preMatch != index) return false;\n        let nextDOM = next.dom,\n          updated;\n        // Can't update if nextDOM is or contains this.lock, except if\n        // it's a text node whose content already matches the new text\n        // and whose decorations match the new ones.\n        let locked = this.isLocked(nextDOM) && !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text && next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n        if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n          this.destroyBetween(this.index, i);\n          if (next.dom != nextDOM) this.changed = true;\n          this.index++;\n          return true;\n        } else if (!locked && (updated = this.recreateWrapper(next, node, outerDeco, innerDeco, view, pos))) {\n          this.top.children[this.index] = updated;\n          if (updated.contentDOM) {\n            updated.dirty = CONTENT_DIRTY;\n            updated.updateChildren(view, pos + 1);\n            updated.dirty = NOT_DIRTY;\n          }\n          this.changed = true;\n          this.index++;\n          return true;\n        }\n        break;\n      }\n    }\n    return false;\n  }\n  // When a node with content is replaced by a different node with\n  // identical content, move over its children.\n  recreateWrapper(next, node, outerDeco, innerDeco, view, pos) {\n    if (next.dirty || node.isAtom || !next.children.length || !next.node.content.eq(node.content)) return null;\n    let wrapper = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n    if (wrapper.contentDOM) {\n      wrapper.children = next.children;\n      next.children = [];\n      for (let ch of wrapper.children) ch.parent = wrapper;\n    }\n    next.destroy();\n    return wrapper;\n  }\n  // Insert the node as a newly created node desc.\n  addNode(node, outerDeco, innerDeco, view, pos) {\n    let desc = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n    if (desc.contentDOM) desc.updateChildren(view, pos + 1);\n    this.top.children.splice(this.index++, 0, desc);\n    this.changed = true;\n  }\n  placeWidget(widget, view, pos) {\n    let next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n    if (next && next.matchesWidget(widget) && (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n      this.index++;\n    } else {\n      let desc = new WidgetViewDesc(this.top, widget, view, pos);\n      this.top.children.splice(this.index++, 0, desc);\n      this.changed = true;\n    }\n  }\n  // Make sure a textblock looks and behaves correctly in\n  // contentEditable.\n  addTextblockHacks() {\n    let lastChild = this.top.children[this.index - 1],\n      parent = this.top;\n    while (lastChild instanceof MarkViewDesc) {\n      parent = lastChild;\n      lastChild = parent.children[parent.children.length - 1];\n    }\n    if (!lastChild ||\n    // Empty textblock\n    !(lastChild instanceof TextViewDesc) || /\\n$/.test(lastChild.node.text) || this.view.requiresGeckoHackNode && /\\s$/.test(lastChild.node.text)) {\n      // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n      if ((safari || chrome) && lastChild && lastChild.dom.contentEditable == \"false\") this.addHackNode(\"IMG\", parent);\n      this.addHackNode(\"BR\", this.top);\n    }\n  }\n  addHackNode(nodeName, parent) {\n    if (parent == this.top && this.index < parent.children.length && parent.children[this.index].matchesHack(nodeName)) {\n      this.index++;\n    } else {\n      let dom = document.createElement(nodeName);\n      if (nodeName == \"IMG\") {\n        dom.className = \"ProseMirror-separator\";\n        dom.alt = \"\";\n      }\n      if (nodeName == \"BR\") dom.className = \"ProseMirror-trailingBreak\";\n      let hack = new TrailingHackViewDesc(this.top, [], dom, null);\n      if (parent != this.top) parent.children.push(hack);else parent.children.splice(this.index++, 0, hack);\n      this.changed = true;\n    }\n  }\n  isLocked(node) {\n    return this.lock && (node == this.lock || node.nodeType == 1 && node.contains(this.lock.parentNode));\n  }\n}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n  let curDesc = parentDesc,\n    descI = curDesc.children.length;\n  let fI = frag.childCount,\n    matched = new Map(),\n    matches = [];\n  outer: while (fI > 0) {\n    let desc;\n    for (;;) {\n      if (descI) {\n        let next = curDesc.children[descI - 1];\n        if (next instanceof MarkViewDesc) {\n          curDesc = next;\n          descI = next.children.length;\n        } else {\n          desc = next;\n          descI--;\n          break;\n        }\n      } else if (curDesc == parentDesc) {\n        break outer;\n      } else {\n        // FIXME\n        descI = curDesc.parent.children.indexOf(curDesc);\n        curDesc = curDesc.parent;\n      }\n    }\n    let node = desc.node;\n    if (!node) continue;\n    if (node != frag.child(fI - 1)) break;\n    --fI;\n    matched.set(desc, fI);\n    matches.push(desc);\n  }\n  return {\n    index: fI,\n    matched,\n    matches: matches.reverse()\n  };\n}\nfunction compareSide(a, b) {\n  return a.type.side - b.type.side;\n}\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n  let locals = deco.locals(parent),\n    offset = 0;\n  // Simple, cheap variant for when there are no local decorations\n  if (locals.length == 0) {\n    for (let i = 0; i < parent.childCount; i++) {\n      let child = parent.child(i);\n      onNode(child, locals, deco.forChild(offset, child), i);\n      offset += child.nodeSize;\n    }\n    return;\n  }\n  let decoIndex = 0,\n    active = [],\n    restNode = null;\n  for (let parentIndex = 0;;) {\n    let widget, widgets;\n    while (decoIndex < locals.length && locals[decoIndex].to == offset) {\n      let next = locals[decoIndex++];\n      if (next.widget) {\n        if (!widget) widget = next;else (widgets || (widgets = [widget])).push(next);\n      }\n    }\n    if (widget) {\n      if (widgets) {\n        widgets.sort(compareSide);\n        for (let i = 0; i < widgets.length; i++) onWidget(widgets[i], parentIndex, !!restNode);\n      } else {\n        onWidget(widget, parentIndex, !!restNode);\n      }\n    }\n    let child, index;\n    if (restNode) {\n      index = -1;\n      child = restNode;\n      restNode = null;\n    } else if (parentIndex < parent.childCount) {\n      index = parentIndex;\n      child = parent.child(parentIndex++);\n    } else {\n      break;\n    }\n    for (let i = 0; i < active.length; i++) if (active[i].to <= offset) active.splice(i--, 1);\n    while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset) active.push(locals[decoIndex++]);\n    let end = offset + child.nodeSize;\n    if (child.isText) {\n      let cutAt = end;\n      if (decoIndex < locals.length && locals[decoIndex].from < cutAt) cutAt = locals[decoIndex].from;\n      for (let i = 0; i < active.length; i++) if (active[i].to < cutAt) cutAt = active[i].to;\n      if (cutAt < end) {\n        restNode = child.cut(cutAt - offset);\n        child = child.cut(0, cutAt - offset);\n        end = cutAt;\n        index = -1;\n      }\n    } else {\n      while (decoIndex < locals.length && locals[decoIndex].to < end) decoIndex++;\n    }\n    let outerDeco = child.isInline && !child.isLeaf ? active.filter(d => !d.inline) : active.slice();\n    onNode(child, outerDeco, deco.forChild(offset, child), index);\n    offset = end;\n  }\n}\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n  if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n    let oldCSS = dom.style.cssText;\n    dom.style.cssText = oldCSS + \"; list-style: square !important\";\n    window.getComputedStyle(dom).listStyle;\n    dom.style.cssText = oldCSS;\n  }\n}\nfunction nearbyTextNode(node, offset) {\n  for (;;) {\n    if (node.nodeType == 3) return node;\n    if (node.nodeType == 1 && offset > 0) {\n      if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3) return node.childNodes[offset];\n      node = node.childNodes[offset - 1];\n      offset = nodeSize(node);\n    } else if (node.nodeType == 1 && offset < node.childNodes.length) {\n      node = node.childNodes[offset];\n      offset = 0;\n    } else {\n      return null;\n    }\n  }\n}\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n  for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n    let child = frag.child(i++),\n      childStart = pos;\n    pos += child.nodeSize;\n    if (!child.isText) continue;\n    let str = child.text;\n    while (i < frag.childCount) {\n      let next = frag.child(i++);\n      pos += next.nodeSize;\n      if (!next.isText) break;\n      str += next.text;\n    }\n    if (pos >= from) {\n      if (pos >= to && str.slice(to - text.length - childStart, to - childStart) == text) return to - text.length;\n      let found = childStart < to ? str.lastIndexOf(text, to - childStart - 1) : -1;\n      if (found >= 0 && found + text.length + childStart >= from) return childStart + found;\n      if (from == to && str.length >= to + text.length - childStart && str.slice(to - childStart, to - childStart + text.length) == text) return to;\n    }\n  }\n  return -1;\n}\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n  let result = [];\n  for (let i = 0, off = 0; i < nodes.length; i++) {\n    let child = nodes[i],\n      start = off,\n      end = off += child.size;\n    if (start >= to || end <= from) {\n      result.push(child);\n    } else {\n      if (start < from) result.push(child.slice(0, from - start, view));\n      if (replacement) {\n        result.push(replacement);\n        replacement = undefined;\n      }\n      if (end > to) result.push(child.slice(to - start, child.size, view));\n    }\n  }\n  return result;\n}\nfunction selectionFromDOM(view, origin = null) {\n  let domSel = view.domSelectionRange(),\n    doc = view.state.doc;\n  if (!domSel.focusNode) return null;\n  let nearestDesc = view.docView.nearestDesc(domSel.focusNode),\n    inWidget = nearestDesc && nearestDesc.size == 0;\n  let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset, 1);\n  if (head < 0) return null;\n  let $head = doc.resolve(head),\n    $anchor,\n    selection;\n  if (selectionCollapsed(domSel)) {\n    $anchor = $head;\n    while (nearestDesc && !nearestDesc.node) nearestDesc = nearestDesc.parent;\n    let nearestDescNode = nearestDesc.node;\n    if (nearestDesc && nearestDescNode.isAtom && NodeSelection.isSelectable(nearestDescNode) && nearestDesc.parent && !(nearestDescNode.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n      let pos = nearestDesc.posBefore;\n      selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n    }\n  } else {\n    let anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset, 1);\n    if (anchor < 0) return null;\n    $anchor = doc.resolve(anchor);\n  }\n  if (!selection) {\n    let bias = origin == \"pointer\" || view.state.selection.head < $head.pos && !inWidget ? 1 : -1;\n    selection = selectionBetween(view, $anchor, $head, bias);\n  }\n  return selection;\n}\nfunction editorOwnsSelection(view) {\n  return view.editable ? view.hasFocus() : hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom);\n}\nfunction selectionToDOM(view, force = false) {\n  let sel = view.state.selection;\n  syncNodeSelection(view, sel);\n  if (!editorOwnsSelection(view)) return;\n  // The delayed drag selection causes issues with Cell Selections\n  // in Safari. And the drag selection delay is to workarond issues\n  // which only present in Chrome.\n  if (!force && view.input.mouseDown && view.input.mouseDown.allowDefault && chrome) {\n    let domSel = view.domSelectionRange(),\n      curSel = view.domObserver.currentSelection;\n    if (domSel.anchorNode && curSel.anchorNode && isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset, curSel.anchorNode, curSel.anchorOffset)) {\n      view.input.mouseDown.delayedSelectionSync = true;\n      view.domObserver.setCurSelection();\n      return;\n    }\n  }\n  view.domObserver.disconnectSelection();\n  if (view.cursorWrapper) {\n    selectCursorWrapper(view);\n  } else {\n    let {\n        anchor,\n        head\n      } = sel,\n      resetEditableFrom,\n      resetEditableTo;\n    if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n      if (!sel.$from.parent.inlineContent) resetEditableFrom = temporarilyEditableNear(view, sel.from);\n      if (!sel.empty && !sel.$from.parent.inlineContent) resetEditableTo = temporarilyEditableNear(view, sel.to);\n    }\n    view.docView.setSelection(anchor, head, view.root, force);\n    if (brokenSelectBetweenUneditable) {\n      if (resetEditableFrom) resetEditable(resetEditableFrom);\n      if (resetEditableTo) resetEditable(resetEditableTo);\n    }\n    if (sel.visible) {\n      view.dom.classList.remove(\"ProseMirror-hideselection\");\n    } else {\n      view.dom.classList.add(\"ProseMirror-hideselection\");\n      if (\"onselectionchange\" in document) removeClassOnSelectionChange(view);\n    }\n  }\n  view.domObserver.setCurSelection();\n  view.domObserver.connectSelection();\n}\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\nconst brokenSelectBetweenUneditable = safari || chrome && chrome_version < 63;\nfunction temporarilyEditableNear(view, pos) {\n  let {\n    node,\n    offset\n  } = view.docView.domFromPos(pos, 0);\n  let after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n  let before = offset ? node.childNodes[offset - 1] : null;\n  if (safari && after && after.contentEditable == \"false\") return setEditable(after);\n  if ((!after || after.contentEditable == \"false\") && (!before || before.contentEditable == \"false\")) {\n    if (after) return setEditable(after);else if (before) return setEditable(before);\n  }\n}\nfunction setEditable(element) {\n  element.contentEditable = \"true\";\n  if (safari && element.draggable) {\n    element.draggable = false;\n    element.wasDraggable = true;\n  }\n  return element;\n}\nfunction resetEditable(element) {\n  element.contentEditable = \"false\";\n  if (element.wasDraggable) {\n    element.draggable = true;\n    element.wasDraggable = null;\n  }\n}\nfunction removeClassOnSelectionChange(view) {\n  let doc = view.dom.ownerDocument;\n  doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n  let domSel = view.domSelectionRange();\n  let node = domSel.anchorNode,\n    offset = domSel.anchorOffset;\n  doc.addEventListener(\"selectionchange\", view.input.hideSelectionGuard = () => {\n    if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n      doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n      setTimeout(() => {\n        if (!editorOwnsSelection(view) || view.state.selection.visible) view.dom.classList.remove(\"ProseMirror-hideselection\");\n      }, 20);\n    }\n  });\n}\nfunction selectCursorWrapper(view) {\n  let domSel = view.domSelection(),\n    range = document.createRange();\n  let node = view.cursorWrapper.dom,\n    img = node.nodeName == \"IMG\";\n  if (img) range.setEnd(node.parentNode, domIndex(node) + 1);else range.setEnd(node, 0);\n  range.collapse(false);\n  domSel.removeAllRanges();\n  domSel.addRange(range);\n  // Kludge to kill 'control selection' in IE11 when selecting an\n  // invisible cursor wrapper, since that would result in those weird\n  // resize handles and a selection that considers the absolutely\n  // positioned wrapper, rather than the root editable node, the\n  // focused element.\n  if (!img && !view.state.selection.visible && ie && ie_version <= 11) {\n    node.disabled = true;\n    node.disabled = false;\n  }\n}\nfunction syncNodeSelection(view, sel) {\n  if (sel instanceof NodeSelection) {\n    let desc = view.docView.descAt(sel.from);\n    if (desc != view.lastSelectedViewDesc) {\n      clearNodeSelection(view);\n      if (desc) desc.selectNode();\n      view.lastSelectedViewDesc = desc;\n    }\n  } else {\n    clearNodeSelection(view);\n  }\n}\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n  if (view.lastSelectedViewDesc) {\n    if (view.lastSelectedViewDesc.parent) view.lastSelectedViewDesc.deselectNode();\n    view.lastSelectedViewDesc = undefined;\n  }\n}\nfunction selectionBetween(view, $anchor, $head, bias) {\n  return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head)) || TextSelection.between($anchor, $head, bias);\n}\nfunction hasFocusAndSelection(view) {\n  if (view.editable && !view.hasFocus()) return false;\n  return hasSelection(view);\n}\nfunction hasSelection(view) {\n  let sel = view.domSelectionRange();\n  if (!sel.anchorNode) return false;\n  try {\n    // Firefox will raise 'permission denied' errors when accessing\n    // properties of `sel.anchorNode` when it's in a generated CSS\n    // element.\n    return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) && (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode));\n  } catch (_) {\n    return false;\n  }\n}\nfunction anchorInRightPlace(view) {\n  let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n  let domSel = view.domSelectionRange();\n  return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset);\n}\nfunction moveSelectionBlock(state, dir) {\n  let {\n    $anchor,\n    $head\n  } = state.selection;\n  let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n  let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n  return $start && Selection.findFrom($start, dir);\n}\nfunction apply(view, sel) {\n  view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n  return true;\n}\nfunction selectHorizontally(view, dir, mods) {\n  let sel = view.state.selection;\n  if (sel instanceof TextSelection) {\n    if (mods.indexOf(\"s\") > -1) {\n      let {\n          $head\n        } = sel,\n        node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter;\n      if (!node || node.isText || !node.isLeaf) return false;\n      let $newHead = view.state.doc.resolve($head.pos + node.nodeSize * (dir < 0 ? -1 : 1));\n      return apply(view, new TextSelection(sel.$anchor, $newHead));\n    } else if (!sel.empty) {\n      return false;\n    } else if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) {\n      let next = moveSelectionBlock(view.state, dir);\n      if (next && next instanceof NodeSelection) return apply(view, next);\n      return false;\n    } else if (!(mac && mods.indexOf(\"m\") > -1)) {\n      let $head = sel.$head,\n        node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter,\n        desc;\n      if (!node || node.isText) return false;\n      let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n      if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM)) return false;\n      if (NodeSelection.isSelectable(node)) {\n        return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head));\n      } else if (webkit) {\n        // Chrome and Safari will introduce extra pointless cursor\n        // positions around inline uneditable nodes, so we have to\n        // take over and move the cursor past them (#937)\n        return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)));\n      } else {\n        return false;\n      }\n    }\n  } else if (sel instanceof NodeSelection && sel.node.isInline) {\n    return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from));\n  } else {\n    let next = moveSelectionBlock(view.state, dir);\n    if (next) return apply(view, next);\n    return false;\n  }\n}\nfunction nodeLen(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isIgnorable(dom, dir) {\n  let desc = dom.pmViewDesc;\n  return desc && desc.size == 0 && (dir < 0 || dom.nextSibling || dom.nodeName != \"BR\");\n}\nfunction skipIgnoredNodes(view, dir) {\n  return dir < 0 ? skipIgnoredNodesBefore(view) : skipIgnoredNodesAfter(view);\n}\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesBefore(view) {\n  let sel = view.domSelectionRange();\n  let node = sel.focusNode,\n    offset = sel.focusOffset;\n  if (!node) return;\n  let moveNode,\n    moveOffset,\n    force = false;\n  // Gecko will do odd things when the selection is directly in front\n  // of a non-editable node, so in that case, move it into the next\n  // node if possible. Issue prosemirror/prosemirror#832.\n  if (gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset], -1)) force = true;\n  for (;;) {\n    if (offset > 0) {\n      if (node.nodeType != 1) {\n        break;\n      } else {\n        let before = node.childNodes[offset - 1];\n        if (isIgnorable(before, -1)) {\n          moveNode = node;\n          moveOffset = --offset;\n        } else if (before.nodeType == 3) {\n          node = before;\n          offset = node.nodeValue.length;\n        } else break;\n      }\n    } else if (isBlockNode(node)) {\n      break;\n    } else {\n      let prev = node.previousSibling;\n      while (prev && isIgnorable(prev, -1)) {\n        moveNode = node.parentNode;\n        moveOffset = domIndex(prev);\n        prev = prev.previousSibling;\n      }\n      if (!prev) {\n        node = node.parentNode;\n        if (node == view.dom) break;\n        offset = 0;\n      } else {\n        node = prev;\n        offset = nodeLen(node);\n      }\n    }\n  }\n  if (force) setSelFocus(view, node, offset);else if (moveNode) setSelFocus(view, moveNode, moveOffset);\n}\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesAfter(view) {\n  let sel = view.domSelectionRange();\n  let node = sel.focusNode,\n    offset = sel.focusOffset;\n  if (!node) return;\n  let len = nodeLen(node);\n  let moveNode, moveOffset;\n  for (;;) {\n    if (offset < len) {\n      if (node.nodeType != 1) break;\n      let after = node.childNodes[offset];\n      if (isIgnorable(after, 1)) {\n        moveNode = node;\n        moveOffset = ++offset;\n      } else break;\n    } else if (isBlockNode(node)) {\n      break;\n    } else {\n      let next = node.nextSibling;\n      while (next && isIgnorable(next, 1)) {\n        moveNode = next.parentNode;\n        moveOffset = domIndex(next) + 1;\n        next = next.nextSibling;\n      }\n      if (!next) {\n        node = node.parentNode;\n        if (node == view.dom) break;\n        offset = len = 0;\n      } else {\n        node = next;\n        offset = 0;\n        len = nodeLen(node);\n      }\n    }\n  }\n  if (moveNode) setSelFocus(view, moveNode, moveOffset);\n}\nfunction isBlockNode(dom) {\n  let desc = dom.pmViewDesc;\n  return desc && desc.node && desc.node.isBlock;\n}\nfunction textNodeAfter(node, offset) {\n  while (node && offset == node.childNodes.length && !hasBlockDesc(node)) {\n    offset = domIndex(node) + 1;\n    node = node.parentNode;\n  }\n  while (node && offset < node.childNodes.length) {\n    let next = node.childNodes[offset];\n    if (next.nodeType == 3) return next;\n    if (next.nodeType == 1 && next.contentEditable == \"false\") break;\n    node = next;\n    offset = 0;\n  }\n}\nfunction textNodeBefore(node, offset) {\n  while (node && !offset && !hasBlockDesc(node)) {\n    offset = domIndex(node);\n    node = node.parentNode;\n  }\n  while (node && offset) {\n    let next = node.childNodes[offset - 1];\n    if (next.nodeType == 3) return next;\n    if (next.nodeType == 1 && next.contentEditable == \"false\") break;\n    node = next;\n    offset = node.childNodes.length;\n  }\n}\nfunction setSelFocus(view, node, offset) {\n  if (node.nodeType != 3) {\n    let before, after;\n    if (after = textNodeAfter(node, offset)) {\n      node = after;\n      offset = 0;\n    } else if (before = textNodeBefore(node, offset)) {\n      node = before;\n      offset = before.nodeValue.length;\n    }\n  }\n  let sel = view.domSelection();\n  if (selectionCollapsed(sel)) {\n    let range = document.createRange();\n    range.setEnd(node, offset);\n    range.setStart(node, offset);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  } else if (sel.extend) {\n    sel.extend(node, offset);\n  }\n  view.domObserver.setCurSelection();\n  let {\n    state\n  } = view;\n  // If no state update ends up happening, reset the selection.\n  setTimeout(() => {\n    if (view.state == state) selectionToDOM(view);\n  }, 50);\n}\nfunction findDirection(view, pos) {\n  let $pos = view.state.doc.resolve(pos);\n  if (!(chrome || windows) && $pos.parent.inlineContent) {\n    let coords = view.coordsAtPos(pos);\n    if (pos > $pos.start()) {\n      let before = view.coordsAtPos(pos - 1);\n      let mid = (before.top + before.bottom) / 2;\n      if (mid > coords.top && mid < coords.bottom && Math.abs(before.left - coords.left) > 1) return before.left < coords.left ? \"ltr\" : \"rtl\";\n    }\n    if (pos < $pos.end()) {\n      let after = view.coordsAtPos(pos + 1);\n      let mid = (after.top + after.bottom) / 2;\n      if (mid > coords.top && mid < coords.bottom && Math.abs(after.left - coords.left) > 1) return after.left > coords.left ? \"ltr\" : \"rtl\";\n    }\n  }\n  let computed = getComputedStyle(view.dom).direction;\n  return computed == \"rtl\" ? \"rtl\" : \"ltr\";\n}\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n  let sel = view.state.selection;\n  if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1) return false;\n  if (mac && mods.indexOf(\"m\") > -1) return false;\n  let {\n    $from,\n    $to\n  } = sel;\n  if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n    let next = moveSelectionBlock(view.state, dir);\n    if (next && next instanceof NodeSelection) return apply(view, next);\n  }\n  if (!$from.parent.inlineContent) {\n    let side = dir < 0 ? $from : $to;\n    let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n    return beyond ? apply(view, beyond) : false;\n  }\n  return false;\n}\nfunction stopNativeHorizontalDelete(view, dir) {\n  if (!(view.state.selection instanceof TextSelection)) return true;\n  let {\n    $head,\n    $anchor,\n    empty\n  } = view.state.selection;\n  if (!$head.sameParent($anchor)) return true;\n  if (!empty) return false;\n  if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) return true;\n  let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n  if (nextNode && !nextNode.isText) {\n    let tr = view.state.tr;\n    if (dir < 0) tr.delete($head.pos - nextNode.nodeSize, $head.pos);else tr.delete($head.pos, $head.pos + nextNode.nodeSize);\n    view.dispatch(tr);\n    return true;\n  }\n  return false;\n}\nfunction switchEditable(view, node, state) {\n  view.domObserver.stop();\n  node.contentEditable = state;\n  view.domObserver.start();\n}\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n  if (!safari || view.state.selection.$head.parentOffset > 0) return false;\n  let {\n    focusNode,\n    focusOffset\n  } = view.domSelectionRange();\n  if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 && focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n    let child = focusNode.firstChild;\n    switchEditable(view, child, \"true\");\n    setTimeout(() => switchEditable(view, child, \"false\"), 20);\n  }\n  return false;\n}\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\nfunction getMods(event) {\n  let result = \"\";\n  if (event.ctrlKey) result += \"c\";\n  if (event.metaKey) result += \"m\";\n  if (event.altKey) result += \"a\";\n  if (event.shiftKey) result += \"s\";\n  return result;\n}\nfunction captureKeyDown(view, event) {\n  let code = event.keyCode,\n    mods = getMods(event);\n  if (code == 8 || mac && code == 72 && mods == \"c\") {\n    // Backspace, Ctrl-h on Mac\n    return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodes(view, -1);\n  } else if (code == 46 && !event.shiftKey || mac && code == 68 && mods == \"c\") {\n    // Delete, Ctrl-d on Mac\n    return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodes(view, 1);\n  } else if (code == 13 || code == 27) {\n    // Enter, Esc\n    return true;\n  } else if (code == 37 || mac && code == 66 && mods == \"c\") {\n    // Left arrow, Ctrl-b on Mac\n    let dir = code == 37 ? findDirection(view, view.state.selection.from) == \"ltr\" ? -1 : 1 : -1;\n    return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n  } else if (code == 39 || mac && code == 70 && mods == \"c\") {\n    // Right arrow, Ctrl-f on Mac\n    let dir = code == 39 ? findDirection(view, view.state.selection.from) == \"ltr\" ? 1 : -1 : 1;\n    return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n  } else if (code == 38 || mac && code == 80 && mods == \"c\") {\n    // Up arrow, Ctrl-p on Mac\n    return selectVertically(view, -1, mods) || skipIgnoredNodes(view, -1);\n  } else if (code == 40 || mac && code == 78 && mods == \"c\") {\n    // Down arrow, Ctrl-n on Mac\n    return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodes(view, 1);\n  } else if (mods == (mac ? \"m\" : \"c\") && (code == 66 || code == 73 || code == 89 || code == 90)) {\n    // Mod-[biyz]\n    return true;\n  }\n  return false;\n}\nfunction serializeForClipboard(view, slice) {\n  view.someProp(\"transformCopied\", f => {\n    slice = f(slice, view);\n  });\n  let context = [],\n    {\n      content,\n      openStart,\n      openEnd\n    } = slice;\n  while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n    openStart--;\n    openEnd--;\n    let node = content.firstChild;\n    context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n    content = node.content;\n  }\n  let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n  let doc = detachedDoc(),\n    wrap = doc.createElement(\"div\");\n  wrap.appendChild(serializer.serializeFragment(content, {\n    document: doc\n  }));\n  let firstChild = wrap.firstChild,\n    needsWrap,\n    wrappers = 0;\n  while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n    for (let i = needsWrap.length - 1; i >= 0; i--) {\n      let wrapper = doc.createElement(needsWrap[i]);\n      while (wrap.firstChild) wrapper.appendChild(wrap.firstChild);\n      wrap.appendChild(wrapper);\n      wrappers++;\n    }\n    firstChild = wrap.firstChild;\n  }\n  if (firstChild && firstChild.nodeType == 1) firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : \"\"} ${JSON.stringify(context)}`);\n  let text = view.someProp(\"clipboardTextSerializer\", f => f(slice, view)) || slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n  return {\n    dom: wrap,\n    text\n  };\n}\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n  let inCode = $context.parent.type.spec.code;\n  let dom, slice;\n  if (!html && !text) return null;\n  let asText = text && (plainText || inCode || !html);\n  if (asText) {\n    view.someProp(\"transformPastedText\", f => {\n      text = f(text, inCode || plainText, view);\n    });\n    if (inCode) return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty;\n    let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText, view));\n    if (parsed) {\n      slice = parsed;\n    } else {\n      let marks = $context.marks();\n      let {\n          schema\n        } = view.state,\n        serializer = DOMSerializer.fromSchema(schema);\n      dom = document.createElement(\"div\");\n      text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n        let p = dom.appendChild(document.createElement(\"p\"));\n        if (block) p.appendChild(serializer.serializeNode(schema.text(block, marks)));\n      });\n    }\n  } else {\n    view.someProp(\"transformPastedHTML\", f => {\n      html = f(html, view);\n    });\n    dom = readHTML(html);\n    if (webkit) restoreReplacedSpaces(dom);\n  }\n  let contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n  let sliceData = contextNode && /^(\\d+) (\\d+)(?: -(\\d+))? (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\") || \"\");\n  if (sliceData && sliceData[3]) for (let i = +sliceData[3]; i > 0; i--) {\n    let child = dom.firstChild;\n    while (child && child.nodeType != 1) child = child.nextSibling;\n    if (!child) break;\n    dom = child;\n  }\n  if (!slice) {\n    let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    slice = parser.parseSlice(dom, {\n      preserveWhitespace: !!(asText || sliceData),\n      context: $context,\n      ruleFromNode(dom) {\n        if (dom.nodeName == \"BR\" && !dom.nextSibling && dom.parentNode && !inlineParents.test(dom.parentNode.nodeName)) return {\n          ignore: true\n        };\n        return null;\n      }\n    });\n  }\n  if (sliceData) {\n    slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[4]);\n  } else {\n    // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n    slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n    if (slice.openStart || slice.openEnd) {\n      let openStart = 0,\n        openEnd = 0;\n      for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating; openStart++, node = node.firstChild) {}\n      for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating; openEnd++, node = node.lastChild) {}\n      slice = closeSlice(slice, openStart, openEnd);\n    }\n  }\n  view.someProp(\"transformPasted\", f => {\n    slice = f(slice, view);\n  });\n  return slice;\n}\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n  if (fragment.childCount < 2) return fragment;\n  for (let d = $context.depth; d >= 0; d--) {\n    let parent = $context.node(d);\n    let match = parent.contentMatchAt($context.index(d));\n    let lastWrap,\n      result = [];\n    fragment.forEach(node => {\n      if (!result) return;\n      let wrap = match.findWrapping(node.type),\n        inLast;\n      if (!wrap) return result = null;\n      if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n        result[result.length - 1] = inLast;\n      } else {\n        if (result.length) result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length);\n        let wrapped = withWrappers(node, wrap);\n        result.push(wrapped);\n        match = match.matchType(wrapped.type);\n        lastWrap = wrap;\n      }\n    });\n    if (result) return Fragment.from(result);\n  }\n  return fragment;\n}\nfunction withWrappers(node, wrap, from = 0) {\n  for (let i = wrap.length - 1; i >= from; i--) node = wrap[i].create(null, Fragment.from(node));\n  return node;\n}\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n  if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n    let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n    if (inner) return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner));\n    let match = sibling.contentMatchAt(sibling.childCount);\n    if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1])) return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))));\n  }\n}\nfunction closeRight(node, depth) {\n  if (depth == 0) return node;\n  let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n  let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n  return node.copy(fragment.append(fill));\n}\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n  let node = side < 0 ? fragment.firstChild : fragment.lastChild,\n    inner = node.content;\n  if (fragment.childCount > 1) openEnd = 0;\n  if (depth < to - 1) inner = closeRange(inner, side, from, to, depth + 1, openEnd);\n  if (depth >= from) inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, openEnd <= depth).append(inner) : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true));\n  return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner));\n}\nfunction closeSlice(slice, openStart, openEnd) {\n  if (openStart < slice.openStart) slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd);\n  if (openEnd < slice.openEnd) slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd);\n  return slice;\n}\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n  thead: [\"table\"],\n  tbody: [\"table\"],\n  tfoot: [\"table\"],\n  caption: [\"table\"],\n  colgroup: [\"table\"],\n  col: [\"table\", \"colgroup\"],\n  tr: [\"table\", \"tbody\"],\n  td: [\"table\", \"tbody\", \"tr\"],\n  th: [\"table\", \"tbody\", \"tr\"]\n};\nlet _detachedDoc = null;\nfunction detachedDoc() {\n  return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"));\n}\nfunction readHTML(html) {\n  let metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n  if (metas) html = html.slice(metas[0].length);\n  let elt = detachedDoc().createElement(\"div\");\n  let firstTag = /<([a-z][^>\\s]+)/i.exec(html),\n    wrap;\n  if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()]) html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\");\n  elt.innerHTML = html;\n  if (wrap) for (let i = 0; i < wrap.length; i++) elt = elt.querySelector(wrap[i]) || elt;\n  return elt;\n}\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n  let nodes = dom.querySelectorAll(chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n  for (let i = 0; i < nodes.length; i++) {\n    let node = nodes[i];\n    if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode) node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node);\n  }\n}\nfunction addContext(slice, context) {\n  if (!slice.size) return slice;\n  let schema = slice.content.firstChild.type.schema,\n    array;\n  try {\n    array = JSON.parse(context);\n  } catch (e) {\n    return slice;\n  }\n  let {\n    content,\n    openStart,\n    openEnd\n  } = slice;\n  for (let i = array.length - 2; i >= 0; i -= 2) {\n    let type = schema.nodes[array[i]];\n    if (!type || type.hasRequiredAttrs()) break;\n    content = Fragment.from(type.create(array[i + 1], content));\n    openStart++;\n    openEnd++;\n  }\n  return new Slice(content, openStart, openEnd);\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {};\nconst editHandlers = {};\nconst passiveHandlers = {\n  touchstart: true,\n  touchmove: true\n};\nclass InputState {\n  constructor() {\n    this.shiftKey = false;\n    this.mouseDown = null;\n    this.lastKeyCode = null;\n    this.lastKeyCodeTime = 0;\n    this.lastClick = {\n      time: 0,\n      x: 0,\n      y: 0,\n      type: \"\"\n    };\n    this.lastSelectionOrigin = null;\n    this.lastSelectionTime = 0;\n    this.lastIOSEnter = 0;\n    this.lastIOSEnterFallbackTimeout = -1;\n    this.lastFocus = 0;\n    this.lastTouch = 0;\n    this.lastAndroidDelete = 0;\n    this.composing = false;\n    this.composingTimeout = -1;\n    this.compositionNodes = [];\n    this.compositionEndedAt = -2e8;\n    this.compositionID = 1;\n    // Set to a composition ID when there are pending changes at compositionend\n    this.compositionPendingChanges = 0;\n    this.domChangeCount = 0;\n    this.eventHandlers = Object.create(null);\n    this.hideSelectionGuard = null;\n  }\n}\nfunction initInput(view) {\n  for (let event in handlers) {\n    let handler = handlers[event];\n    view.dom.addEventListener(event, view.input.eventHandlers[event] = event => {\n      if (eventBelongsToView(view, event) && !runCustomHandler(view, event) && (view.editable || !(event.type in editHandlers))) handler(view, event);\n    }, passiveHandlers[event] ? {\n      passive: true\n    } : undefined);\n  }\n  // On Safari, for reasons beyond my understanding, adding an input\n  // event handler makes an issue where the composition vanishes when\n  // you press enter go away.\n  if (safari) view.dom.addEventListener(\"input\", () => null);\n  ensureListeners(view);\n}\nfunction setSelectionOrigin(view, origin) {\n  view.input.lastSelectionOrigin = origin;\n  view.input.lastSelectionTime = Date.now();\n}\nfunction destroyInput(view) {\n  view.domObserver.stop();\n  for (let type in view.input.eventHandlers) view.dom.removeEventListener(type, view.input.eventHandlers[type]);\n  clearTimeout(view.input.composingTimeout);\n  clearTimeout(view.input.lastIOSEnterFallbackTimeout);\n}\nfunction ensureListeners(view) {\n  view.someProp(\"handleDOMEvents\", currentHandlers => {\n    for (let type in currentHandlers) if (!view.input.eventHandlers[type]) view.dom.addEventListener(type, view.input.eventHandlers[type] = event => runCustomHandler(view, event));\n  });\n}\nfunction runCustomHandler(view, event) {\n  return view.someProp(\"handleDOMEvents\", handlers => {\n    let handler = handlers[event.type];\n    return handler ? handler(view, event) || event.defaultPrevented : false;\n  });\n}\nfunction eventBelongsToView(view, event) {\n  if (!event.bubbles) return true;\n  if (event.defaultPrevented) return false;\n  for (let node = event.target; node != view.dom; node = node.parentNode) if (!node || node.nodeType == 11 || node.pmViewDesc && node.pmViewDesc.stopEvent(event)) return false;\n  return true;\n}\nfunction dispatchEvent(view, event) {\n  if (!runCustomHandler(view, event) && handlers[event.type] && (view.editable || !(event.type in editHandlers))) handlers[event.type](view, event);\n}\neditHandlers.keydown = (view, _event) => {\n  let event = _event;\n  view.input.shiftKey = event.keyCode == 16 || event.shiftKey;\n  if (inOrNearComposition(view, event)) return;\n  view.input.lastKeyCode = event.keyCode;\n  view.input.lastKeyCodeTime = Date.now();\n  // Suppress enter key events on Chrome Android, because those tend\n  // to be part of a confused sequence of composition events fired,\n  // and handling them eagerly tends to corrupt the input.\n  if (android && chrome && event.keyCode == 13) return;\n  if (event.keyCode != 229) view.domObserver.forceFlush();\n  // On iOS, if we preventDefault enter key presses, the virtual\n  // keyboard gets confused. So the hack here is to set a flag that\n  // makes the DOM change code recognize that what just happens should\n  // be replaced by whatever the Enter key handlers do.\n  if (ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n    let now = Date.now();\n    view.input.lastIOSEnter = now;\n    view.input.lastIOSEnterFallbackTimeout = setTimeout(() => {\n      if (view.input.lastIOSEnter == now) {\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")));\n        view.input.lastIOSEnter = 0;\n      }\n    }, 200);\n  } else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n    event.preventDefault();\n  } else {\n    setSelectionOrigin(view, \"key\");\n  }\n};\neditHandlers.keyup = (view, event) => {\n  if (event.keyCode == 16) view.input.shiftKey = false;\n};\neditHandlers.keypress = (view, _event) => {\n  let event = _event;\n  if (inOrNearComposition(view, event) || !event.charCode || event.ctrlKey && !event.altKey || mac && event.metaKey) return;\n  if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n    event.preventDefault();\n    return;\n  }\n  let sel = view.state.selection;\n  if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n    let text = String.fromCharCode(event.charCode);\n    if (!/[\\r\\n]/.test(text) && !view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text))) view.dispatch(view.state.tr.insertText(text).scrollIntoView());\n    event.preventDefault();\n  }\n};\nfunction eventCoords(event) {\n  return {\n    left: event.clientX,\n    top: event.clientY\n  };\n}\nfunction isNear(event, click) {\n  let dx = click.x - event.clientX,\n    dy = click.y - event.clientY;\n  return dx * dx + dy * dy < 100;\n}\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n  if (inside == -1) return false;\n  let $pos = view.state.doc.resolve(inside);\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true) : f(view, pos, $pos.node(i), $pos.before(i), event, false))) return true;\n  }\n  return false;\n}\nfunction updateSelection(view, selection, origin) {\n  if (!view.focused) view.focus();\n  let tr = view.state.tr.setSelection(selection);\n  if (origin == \"pointer\") tr.setMeta(\"pointer\", true);\n  view.dispatch(tr);\n}\nfunction selectClickedLeaf(view, inside) {\n  if (inside == -1) return false;\n  let $pos = view.state.doc.resolve(inside),\n    node = $pos.nodeAfter;\n  if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n    updateSelection(view, new NodeSelection($pos), \"pointer\");\n    return true;\n  }\n  return false;\n}\nfunction selectClickedNode(view, inside) {\n  if (inside == -1) return false;\n  let sel = view.state.selection,\n    selectedNode,\n    selectAt;\n  if (sel instanceof NodeSelection) selectedNode = sel.node;\n  let $pos = view.state.doc.resolve(inside);\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n    if (NodeSelection.isSelectable(node)) {\n      if (selectedNode && sel.$from.depth > 0 && i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos) selectAt = $pos.before(sel.$from.depth);else selectAt = $pos.before(i);\n      break;\n    }\n  }\n  if (selectAt != null) {\n    updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n  return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) || view.someProp(\"handleClick\", f => f(view, pos, event)) || (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside));\n}\nfunction handleDoubleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) || view.someProp(\"handleDoubleClick\", f => f(view, pos, event));\n}\nfunction handleTripleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) || view.someProp(\"handleTripleClick\", f => f(view, pos, event)) || defaultTripleClick(view, inside, event);\n}\nfunction defaultTripleClick(view, inside, event) {\n  if (event.button != 0) return false;\n  let doc = view.state.doc;\n  if (inside == -1) {\n    if (doc.inlineContent) {\n      updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n      return true;\n    }\n    return false;\n  }\n  let $pos = doc.resolve(inside);\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n    let nodePos = $pos.before(i);\n    if (node.inlineContent) updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\");else if (NodeSelection.isSelectable(node)) updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\");else continue;\n    return true;\n  }\n}\nfunction forceDOMFlush(view) {\n  return endComposition(view);\n}\nconst selectNodeModifier = mac ? \"metaKey\" : \"ctrlKey\";\nhandlers.mousedown = (view, _event) => {\n  let event = _event;\n  view.input.shiftKey = event.shiftKey;\n  let flushed = forceDOMFlush(view);\n  let now = Date.now(),\n    type = \"singleClick\";\n  if (now - view.input.lastClick.time < 500 && isNear(event, view.input.lastClick) && !event[selectNodeModifier]) {\n    if (view.input.lastClick.type == \"singleClick\") type = \"doubleClick\";else if (view.input.lastClick.type == \"doubleClick\") type = \"tripleClick\";\n  }\n  view.input.lastClick = {\n    time: now,\n    x: event.clientX,\n    y: event.clientY,\n    type\n  };\n  let pos = view.posAtCoords(eventCoords(event));\n  if (!pos) return;\n  if (type == \"singleClick\") {\n    if (view.input.mouseDown) view.input.mouseDown.done();\n    view.input.mouseDown = new MouseDown(view, pos, event, !!flushed);\n  } else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n    event.preventDefault();\n  } else {\n    setSelectionOrigin(view, \"pointer\");\n  }\n};\nclass MouseDown {\n  constructor(view, pos, event, flushed) {\n    this.view = view;\n    this.pos = pos;\n    this.event = event;\n    this.flushed = flushed;\n    this.delayedSelectionSync = false;\n    this.mightDrag = null;\n    this.startDoc = view.state.doc;\n    this.selectNode = !!event[selectNodeModifier];\n    this.allowDefault = event.shiftKey;\n    let targetNode, targetPos;\n    if (pos.inside > -1) {\n      targetNode = view.state.doc.nodeAt(pos.inside);\n      targetPos = pos.inside;\n    } else {\n      let $pos = view.state.doc.resolve(pos.pos);\n      targetNode = $pos.parent;\n      targetPos = $pos.depth ? $pos.before() : 0;\n    }\n    const target = flushed ? null : event.target;\n    const targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n    this.target = targetDesc ? targetDesc.dom : null;\n    let {\n      selection\n    } = view.state;\n    if (event.button == 0 && targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false || selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos) this.mightDrag = {\n      node: targetNode,\n      pos: targetPos,\n      addAttr: !!(this.target && !this.target.draggable),\n      setUneditable: !!(this.target && gecko && !this.target.hasAttribute(\"contentEditable\"))\n    };\n    if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n      this.view.domObserver.stop();\n      if (this.mightDrag.addAttr) this.target.draggable = true;\n      if (this.mightDrag.setUneditable) setTimeout(() => {\n        if (this.view.input.mouseDown == this) this.target.setAttribute(\"contentEditable\", \"false\");\n      }, 20);\n      this.view.domObserver.start();\n    }\n    view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n    view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n    setSelectionOrigin(view, \"pointer\");\n  }\n  done() {\n    this.view.root.removeEventListener(\"mouseup\", this.up);\n    this.view.root.removeEventListener(\"mousemove\", this.move);\n    if (this.mightDrag && this.target) {\n      this.view.domObserver.stop();\n      if (this.mightDrag.addAttr) this.target.removeAttribute(\"draggable\");\n      if (this.mightDrag.setUneditable) this.target.removeAttribute(\"contentEditable\");\n      this.view.domObserver.start();\n    }\n    if (this.delayedSelectionSync) setTimeout(() => selectionToDOM(this.view));\n    this.view.input.mouseDown = null;\n  }\n  up(event) {\n    this.done();\n    if (!this.view.dom.contains(event.target)) return;\n    let pos = this.pos;\n    if (this.view.state.doc != this.startDoc) pos = this.view.posAtCoords(eventCoords(event));\n    this.updateAllowDefault(event);\n    if (this.allowDefault || !pos) {\n      setSelectionOrigin(this.view, \"pointer\");\n    } else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n      event.preventDefault();\n    } else if (event.button == 0 && (this.flushed ||\n    // Safari ignores clicks on draggable elements\n    safari && this.mightDrag && !this.mightDrag.node.isAtom ||\n    // Chrome will sometimes treat a node selection as a\n    // cursor, but still report that the node is selected\n    // when asked through getSelection. You'll then get a\n    // situation where clicking at the point where that\n    // (hidden) cursor is doesn't change the selection, and\n    // thus doesn't get a reaction from ProseMirror. This\n    // works around that.\n    chrome && !this.view.state.selection.visible && Math.min(Math.abs(pos.pos - this.view.state.selection.from), Math.abs(pos.pos - this.view.state.selection.to)) <= 2)) {\n      updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n      event.preventDefault();\n    } else {\n      setSelectionOrigin(this.view, \"pointer\");\n    }\n  }\n  move(event) {\n    this.updateAllowDefault(event);\n    setSelectionOrigin(this.view, \"pointer\");\n    if (event.buttons == 0) this.done();\n  }\n  updateAllowDefault(event) {\n    if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 || Math.abs(this.event.y - event.clientY) > 4)) this.allowDefault = true;\n  }\n}\nhandlers.touchstart = view => {\n  view.input.lastTouch = Date.now();\n  forceDOMFlush(view);\n  setSelectionOrigin(view, \"pointer\");\n};\nhandlers.touchmove = view => {\n  view.input.lastTouch = Date.now();\n  setSelectionOrigin(view, \"pointer\");\n};\nhandlers.contextmenu = view => forceDOMFlush(view);\nfunction inOrNearComposition(view, event) {\n  if (view.composing) return true;\n  // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n  // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n  // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n  // emitted. The keydown event triggers newline insertion, which we don't want.\n  // This method returns true if the keydown event should be ignored.\n  // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n  // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n  // This guards against the case where compositionend is triggered without the keyboard\n  // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n  // afterwards- we wouldn't want to ignore the keydown event in this case.\n  if (safari && Math.abs(event.timeStamp - view.input.compositionEndedAt) < 500) {\n    view.input.compositionEndedAt = -2e8;\n    return true;\n  }\n  return false;\n}\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = android ? 5000 : -1;\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n  if (!view.composing) {\n    view.domObserver.flush();\n    let {\n        state\n      } = view,\n      $pos = state.selection.$from;\n    if (state.selection.empty && (state.storedMarks || !$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false))) {\n      // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n      view.markCursor = view.state.storedMarks || $pos.marks();\n      endComposition(view, true);\n      view.markCursor = null;\n    } else {\n      endComposition(view);\n      // In firefox, if the cursor is after but outside a marked node,\n      // the inserted text won't inherit the marks. So this moves it\n      // inside if necessary.\n      if (gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n        let sel = view.domSelectionRange();\n        for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n          let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n          if (!before) break;\n          if (before.nodeType == 3) {\n            view.domSelection().collapse(before, before.nodeValue.length);\n            break;\n          } else {\n            node = before;\n            offset = -1;\n          }\n        }\n      }\n    }\n    view.input.composing = true;\n  }\n  scheduleComposeEnd(view, timeoutComposition);\n};\neditHandlers.compositionend = (view, event) => {\n  if (view.composing) {\n    view.input.composing = false;\n    view.input.compositionEndedAt = event.timeStamp;\n    view.input.compositionPendingChanges = view.domObserver.pendingRecords().length ? view.input.compositionID : 0;\n    if (view.input.compositionPendingChanges) Promise.resolve().then(() => view.domObserver.flush());\n    view.input.compositionID++;\n    scheduleComposeEnd(view, 20);\n  }\n};\nfunction scheduleComposeEnd(view, delay) {\n  clearTimeout(view.input.composingTimeout);\n  if (delay > -1) view.input.composingTimeout = setTimeout(() => endComposition(view), delay);\n}\nfunction clearComposition(view) {\n  if (view.composing) {\n    view.input.composing = false;\n    view.input.compositionEndedAt = timestampFromCustomEvent();\n  }\n  while (view.input.compositionNodes.length > 0) view.input.compositionNodes.pop().markParentsDirty();\n}\nfunction timestampFromCustomEvent() {\n  let event = document.createEvent(\"Event\");\n  event.initEvent(\"event\", true, true);\n  return event.timeStamp;\n}\n/**\n@internal\n*/\nfunction endComposition(view, forceUpdate = false) {\n  if (android && view.domObserver.flushingSoon >= 0) return;\n  view.domObserver.forceFlush();\n  clearComposition(view);\n  if (forceUpdate || view.docView && view.docView.dirty) {\n    let sel = selectionFromDOM(view);\n    if (sel && !sel.eq(view.state.selection)) view.dispatch(view.state.tr.setSelection(sel));else view.updateState(view.state);\n    return true;\n  }\n  return false;\n}\nfunction captureCopy(view, dom) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  if (!view.dom.parentNode) return;\n  let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n  wrap.appendChild(dom);\n  wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n  let sel = getSelection(),\n    range = document.createRange();\n  range.selectNodeContents(dom);\n  // Done because IE will fire a selectionchange moving the selection\n  // to its start when removeAllRanges is called and the editor still\n  // has focus (which will mess up the editor's selection state).\n  view.dom.blur();\n  sel.removeAllRanges();\n  sel.addRange(range);\n  setTimeout(() => {\n    if (wrap.parentNode) wrap.parentNode.removeChild(wrap);\n    view.focus();\n  }, 50);\n}\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = ie && ie_version < 15 || ios && webkit_version < 604;\nhandlers.copy = editHandlers.cut = (view, _event) => {\n  let event = _event;\n  let sel = view.state.selection,\n    cut = event.type == \"cut\";\n  if (sel.empty) return;\n  // IE and Edge's clipboard interface is completely broken\n  let data = brokenClipboardAPI ? null : event.clipboardData;\n  let slice = sel.content(),\n    {\n      dom,\n      text\n    } = serializeForClipboard(view, slice);\n  if (data) {\n    event.preventDefault();\n    data.clearData();\n    data.setData(\"text/html\", dom.innerHTML);\n    data.setData(\"text/plain\", text);\n  } else {\n    captureCopy(view, dom);\n  }\n  if (cut) view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"));\n};\nfunction sliceSingleNode(slice) {\n  return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null;\n}\nfunction capturePaste(view, event) {\n  if (!view.dom.parentNode) return;\n  let plainText = view.input.shiftKey || view.state.selection.$from.parent.type.spec.code;\n  let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n  if (!plainText) target.contentEditable = \"true\";\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n  target.focus();\n  let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n  setTimeout(() => {\n    view.focus();\n    if (target.parentNode) target.parentNode.removeChild(target);\n    if (plainText) doPaste(view, target.value, null, plain, event);else doPaste(view, target.textContent, target.innerHTML, plain, event);\n  }, 50);\n}\nfunction doPaste(view, text, html, preferPlain, event) {\n  let slice = parseFromClipboard(view, text, html, preferPlain, view.state.selection.$from);\n  if (view.someProp(\"handlePaste\", f => f(view, event, slice || Slice.empty))) return true;\n  if (!slice) return false;\n  let singleNode = sliceSingleNode(slice);\n  let tr = singleNode ? view.state.tr.replaceSelectionWith(singleNode, preferPlain) : view.state.tr.replaceSelection(slice);\n  view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n  return true;\n}\nfunction getText(clipboardData) {\n  let text = clipboardData.getData(\"text/plain\") || clipboardData.getData(\"Text\");\n  if (text) return text;\n  let uris = clipboardData.getData(\"text/uri-list\");\n  return uris ? uris.replace(/\\r?\\n/g, \" \") : \"\";\n}\neditHandlers.paste = (view, _event) => {\n  let event = _event;\n  // Handling paste from JavaScript during composition is very poorly\n  // handled by browsers, so as a dodgy but preferable kludge, we just\n  // let the browser do its native thing there, except on Android,\n  // where the editor is almost always composing.\n  if (view.composing && !android) return;\n  let data = brokenClipboardAPI ? null : event.clipboardData;\n  let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n  if (data && doPaste(view, getText(data), data.getData(\"text/html\"), plain, event)) event.preventDefault();else capturePaste(view, event);\n};\nclass Dragging {\n  constructor(slice, move, node) {\n    this.slice = slice;\n    this.move = move;\n    this.node = node;\n  }\n}\nconst dragCopyModifier = mac ? \"altKey\" : \"ctrlKey\";\nhandlers.dragstart = (view, _event) => {\n  let event = _event;\n  let mouseDown = view.input.mouseDown;\n  if (mouseDown) mouseDown.done();\n  if (!event.dataTransfer) return;\n  let sel = view.state.selection;\n  let pos = sel.empty ? null : view.posAtCoords(eventCoords(event));\n  let node;\n  if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1 : sel.to)) ;else if (mouseDown && mouseDown.mightDrag) {\n    node = NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos);\n  } else if (event.target && event.target.nodeType == 1) {\n    let desc = view.docView.nearestDesc(event.target, true);\n    if (desc && desc.node.type.spec.draggable && desc != view.docView) node = NodeSelection.create(view.state.doc, desc.posBefore);\n  }\n  let slice = (node || view.state.selection).content(),\n    {\n      dom,\n      text\n    } = serializeForClipboard(view, slice);\n  event.dataTransfer.clearData();\n  event.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n  // See https://github.com/ProseMirror/prosemirror/issues/1156\n  event.dataTransfer.effectAllowed = \"copyMove\";\n  if (!brokenClipboardAPI) event.dataTransfer.setData(\"text/plain\", text);\n  view.dragging = new Dragging(slice, !event[dragCopyModifier], node);\n};\nhandlers.dragend = view => {\n  let dragging = view.dragging;\n  window.setTimeout(() => {\n    if (view.dragging == dragging) view.dragging = null;\n  }, 50);\n};\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault();\neditHandlers.drop = (view, _event) => {\n  let event = _event;\n  let dragging = view.dragging;\n  view.dragging = null;\n  if (!event.dataTransfer) return;\n  let eventPos = view.posAtCoords(eventCoords(event));\n  if (!eventPos) return;\n  let $mouse = view.state.doc.resolve(eventPos.pos);\n  let slice = dragging && dragging.slice;\n  if (slice) {\n    view.someProp(\"transformPasted\", f => {\n      slice = f(slice, view);\n    });\n  } else {\n    slice = parseFromClipboard(view, getText(event.dataTransfer), brokenClipboardAPI ? null : event.dataTransfer.getData(\"text/html\"), false, $mouse);\n  }\n  let move = !!(dragging && !event[dragCopyModifier]);\n  if (view.someProp(\"handleDrop\", f => f(view, event, slice || Slice.empty, move))) {\n    event.preventDefault();\n    return;\n  }\n  if (!slice) return;\n  event.preventDefault();\n  let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n  if (insertPos == null) insertPos = $mouse.pos;\n  let tr = view.state.tr;\n  if (move) {\n    let {\n      node\n    } = dragging;\n    if (node) node.replace(tr);else tr.deleteSelection();\n  }\n  let pos = tr.mapping.map(insertPos);\n  let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n  let beforeInsert = tr.doc;\n  if (isNode) tr.replaceRangeWith(pos, pos, slice.content.firstChild);else tr.replaceRange(pos, pos, slice);\n  if (tr.doc.eq(beforeInsert)) return;\n  let $pos = tr.doc.resolve(pos);\n  if (isNode && NodeSelection.isSelectable(slice.content.firstChild) && $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n    tr.setSelection(new NodeSelection($pos));\n  } else {\n    let end = tr.mapping.map(insertPos);\n    tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo);\n    tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n  }\n  view.focus();\n  view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\nhandlers.focus = view => {\n  view.input.lastFocus = Date.now();\n  if (!view.focused) {\n    view.domObserver.stop();\n    view.dom.classList.add(\"ProseMirror-focused\");\n    view.domObserver.start();\n    view.focused = true;\n    setTimeout(() => {\n      if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.domSelectionRange())) selectionToDOM(view);\n    }, 20);\n  }\n};\nhandlers.blur = (view, _event) => {\n  let event = _event;\n  if (view.focused) {\n    view.domObserver.stop();\n    view.dom.classList.remove(\"ProseMirror-focused\");\n    view.domObserver.start();\n    if (event.relatedTarget && view.dom.contains(event.relatedTarget)) view.domObserver.currentSelection.clear();\n    view.focused = false;\n  }\n};\nhandlers.beforeinput = (view, _event) => {\n  let event = _event;\n  // We should probably do more with beforeinput events, but support\n  // is so spotty that I'm still waiting to see where they are going.\n  // Very specific hack to deal with backspace sometimes failing on\n  // Chrome Android when after an uneditable node.\n  if (chrome && android && event.inputType == \"deleteContentBackward\") {\n    view.domObserver.flushSoon();\n    let {\n      domChangeCount\n    } = view.input;\n    setTimeout(() => {\n      if (view.input.domChangeCount != domChangeCount) return; // Event already had some effect\n      // This bug tends to close the virtual keyboard, so we refocus\n      view.dom.blur();\n      view.focus();\n      if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) return;\n      let {\n        $cursor\n      } = view.state.selection;\n      // Crude approximation of backspace behavior when no command handled it\n      if ($cursor && $cursor.pos > 0) view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView());\n    }, 50);\n  }\n};\n// Make sure all handlers get registered\nfor (let prop in editHandlers) handlers[prop] = editHandlers[prop];\nfunction compareObjs(a, b) {\n  if (a == b) return true;\n  for (let p in a) if (a[p] !== b[p]) return false;\n  for (let p in b) if (!(p in a)) return false;\n  return true;\n}\nclass WidgetType {\n  constructor(toDOM, spec) {\n    this.toDOM = toDOM;\n    this.spec = spec || noSpec;\n    this.side = this.spec.side || 0;\n  }\n  map(mapping, span, offset, oldOffset) {\n    let {\n      pos,\n      deleted\n    } = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n    return deleted ? null : new Decoration(pos - offset, pos - offset, this);\n  }\n  valid() {\n    return true;\n  }\n  eq(other) {\n    return this == other || other instanceof WidgetType && (this.spec.key && this.spec.key == other.spec.key || this.toDOM == other.toDOM && compareObjs(this.spec, other.spec));\n  }\n  destroy(node) {\n    if (this.spec.destroy) this.spec.destroy(node);\n  }\n}\nclass InlineType {\n  constructor(attrs, spec) {\n    this.attrs = attrs;\n    this.spec = spec || noSpec;\n  }\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n    let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n    return from >= to ? null : new Decoration(from, to, this);\n  }\n  valid(_, span) {\n    return span.from < span.to;\n  }\n  eq(other) {\n    return this == other || other instanceof InlineType && compareObjs(this.attrs, other.attrs) && compareObjs(this.spec, other.spec);\n  }\n  static is(span) {\n    return span.type instanceof InlineType;\n  }\n  destroy() {}\n}\nclass NodeType {\n  constructor(attrs, spec) {\n    this.attrs = attrs;\n    this.spec = spec || noSpec;\n  }\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.mapResult(span.from + oldOffset, 1);\n    if (from.deleted) return null;\n    let to = mapping.mapResult(span.to + oldOffset, -1);\n    if (to.deleted || to.pos <= from.pos) return null;\n    return new Decoration(from.pos - offset, to.pos - offset, this);\n  }\n  valid(node, span) {\n    let {\n        index,\n        offset\n      } = node.content.findIndex(span.from),\n      child;\n    return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to;\n  }\n  eq(other) {\n    return this == other || other instanceof NodeType && compareObjs(this.attrs, other.attrs) && compareObjs(this.spec, other.spec);\n  }\n  destroy() {}\n}\n/**\nDecoration objects can be provided to the view through the\n[`decorations` prop](https://prosemirror.net/docs/ref/#view.EditorProps.decorations). They come in\nseveral variants—see the static members of this class for details.\n*/\nclass Decoration {\n  /**\n  @internal\n  */\n  constructor(\n  /**\n  The start position of the decoration.\n  */\n  from,\n  /**\n  The end position. Will be the same as `from` for [widget\n  decorations](https://prosemirror.net/docs/ref/#view.Decoration^widget).\n  */\n  to,\n  /**\n  @internal\n  */\n  type) {\n    this.from = from;\n    this.to = to;\n    this.type = type;\n  }\n  /**\n  @internal\n  */\n  copy(from, to) {\n    return new Decoration(from, to, this.type);\n  }\n  /**\n  @internal\n  */\n  eq(other, offset = 0) {\n    return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to;\n  }\n  /**\n  @internal\n  */\n  map(mapping, offset, oldOffset) {\n    return this.type.map(mapping, this, offset, oldOffset);\n  }\n  /**\n  Creates a widget decoration, which is a DOM node that's shown in\n  the document at the given position. It is recommended that you\n  delay rendering the widget by passing a function that will be\n  called when the widget is actually drawn in a view, but you can\n  also directly pass a DOM node. `getPos` can be used to find the\n  widget's current document position.\n  */\n  static widget(pos, toDOM, spec) {\n    return new Decoration(pos, pos, new WidgetType(toDOM, spec));\n  }\n  /**\n  Creates an inline decoration, which adds the given attributes to\n  each inline node between `from` and `to`.\n  */\n  static inline(from, to, attrs, spec) {\n    return new Decoration(from, to, new InlineType(attrs, spec));\n  }\n  /**\n  Creates a node decoration. `from` and `to` should point precisely\n  before and after a node in the document. That node, and only that\n  node, will receive the given attributes.\n  */\n  static node(from, to, attrs, spec) {\n    return new Decoration(from, to, new NodeType(attrs, spec));\n  }\n  /**\n  The spec provided when creating this decoration. Can be useful\n  if you've stored extra information in that object.\n  */\n  get spec() {\n    return this.type.spec;\n  }\n  /**\n  @internal\n  */\n  get inline() {\n    return this.type instanceof InlineType;\n  }\n  /**\n  @internal\n  */\n  get widget() {\n    return this.type instanceof WidgetType;\n  }\n}\nconst none = [],\n  noSpec = {};\n/**\nA collection of [decorations](https://prosemirror.net/docs/ref/#view.Decoration), organized in such\na way that the drawing algorithm can efficiently use and compare\nthem. This is a persistent data structure—it is not modified,\nupdates create a new value.\n*/\nclass DecorationSet {\n  /**\n  @internal\n  */\n  constructor(local, children) {\n    this.local = local.length ? local : none;\n    this.children = children.length ? children : none;\n  }\n  /**\n  Create a set of decorations, using the structure of the given\n  document. This will consume (modify) the `decorations` array, so\n  you must make a copy if you want need to preserve that.\n  */\n  static create(doc, decorations) {\n    return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty;\n  }\n  /**\n  Find all decorations in this set which touch the given range\n  (including decorations that start or end directly at the\n  boundaries) and match the given predicate on their spec. When\n  `start` and `end` are omitted, all decorations in the set are\n  considered. When `predicate` isn't given, all decorations are\n  assumed to match.\n  */\n  find(start, end, predicate) {\n    let result = [];\n    this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n    return result;\n  }\n  findInner(start, end, result, offset, predicate) {\n    for (let i = 0; i < this.local.length; i++) {\n      let span = this.local[i];\n      if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec))) result.push(span.copy(span.from + offset, span.to + offset));\n    }\n    for (let i = 0; i < this.children.length; i += 3) {\n      if (this.children[i] < end && this.children[i + 1] > start) {\n        let childOff = this.children[i] + 1;\n        this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n      }\n    }\n  }\n  /**\n  Map the set of decorations in response to a change in the\n  document.\n  */\n  map(mapping, doc, options) {\n    if (this == empty || mapping.maps.length == 0) return this;\n    return this.mapInner(mapping, doc, 0, 0, options || noSpec);\n  }\n  /**\n  @internal\n  */\n  mapInner(mapping, node, offset, oldOffset, options) {\n    let newLocal;\n    for (let i = 0; i < this.local.length; i++) {\n      let mapped = this.local[i].map(mapping, offset, oldOffset);\n      if (mapped && mapped.type.valid(node, mapped)) (newLocal || (newLocal = [])).push(mapped);else if (options.onRemove) options.onRemove(this.local[i].spec);\n    }\n    if (this.children.length) return mapChildren(this.children, newLocal || [], mapping, node, offset, oldOffset, options);else return newLocal ? new DecorationSet(newLocal.sort(byPos), none) : empty;\n  }\n  /**\n  Add the given array of decorations to the ones in the set,\n  producing a new set. Consumes the `decorations` array. Needs\n  access to the current document to create the appropriate tree\n  structure.\n  */\n  add(doc, decorations) {\n    if (!decorations.length) return this;\n    if (this == empty) return DecorationSet.create(doc, decorations);\n    return this.addInner(doc, decorations, 0);\n  }\n  addInner(doc, decorations, offset) {\n    let children,\n      childIndex = 0;\n    doc.forEach((childNode, childOffset) => {\n      let baseOffset = childOffset + offset,\n        found;\n      if (!(found = takeSpansForNode(decorations, childNode, baseOffset))) return;\n      if (!children) children = this.children.slice();\n      while (childIndex < children.length && children[childIndex] < childOffset) childIndex += 3;\n      if (children[childIndex] == childOffset) children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1);else children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec));\n      childIndex += 3;\n    });\n    let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n    for (let i = 0; i < local.length; i++) if (!local[i].type.valid(doc, local[i])) local.splice(i--, 1);\n    return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local, children || this.children);\n  }\n  /**\n  Create a new set that contains the decorations in this set, minus\n  the ones in the given array.\n  */\n  remove(decorations) {\n    if (decorations.length == 0 || this == empty) return this;\n    return this.removeInner(decorations, 0);\n  }\n  removeInner(decorations, offset) {\n    let children = this.children,\n      local = this.local;\n    for (let i = 0; i < children.length; i += 3) {\n      let found;\n      let from = children[i] + offset,\n        to = children[i + 1] + offset;\n      for (let j = 0, span; j < decorations.length; j++) if (span = decorations[j]) {\n        if (span.from > from && span.to < to) {\n          decorations[j] = null;\n          (found || (found = [])).push(span);\n        }\n      }\n      if (!found) continue;\n      if (children == this.children) children = this.children.slice();\n      let removed = children[i + 2].removeInner(found, from + 1);\n      if (removed != empty) {\n        children[i + 2] = removed;\n      } else {\n        children.splice(i, 3);\n        i -= 3;\n      }\n    }\n    if (local.length) for (let i = 0, span; i < decorations.length; i++) if (span = decorations[i]) {\n      for (let j = 0; j < local.length; j++) if (local[j].eq(span, offset)) {\n        if (local == this.local) local = this.local.slice();\n        local.splice(j--, 1);\n      }\n    }\n    if (children == this.children && local == this.local) return this;\n    return local.length || children.length ? new DecorationSet(local, children) : empty;\n  }\n  /**\n  @internal\n  */\n  forChild(offset, node) {\n    if (this == empty) return this;\n    if (node.isLeaf) return DecorationSet.empty;\n    let child, local;\n    for (let i = 0; i < this.children.length; i += 3) if (this.children[i] >= offset) {\n      if (this.children[i] == offset) child = this.children[i + 2];\n      break;\n    }\n    let start = offset + 1,\n      end = start + node.content.size;\n    for (let i = 0; i < this.local.length; i++) {\n      let dec = this.local[i];\n      if (dec.from < end && dec.to > start && dec.type instanceof InlineType) {\n        let from = Math.max(start, dec.from) - start,\n          to = Math.min(end, dec.to) - start;\n        if (from < to) (local || (local = [])).push(dec.copy(from, to));\n      }\n    }\n    if (local) {\n      let localSet = new DecorationSet(local.sort(byPos), none);\n      return child ? new DecorationGroup([localSet, child]) : localSet;\n    }\n    return child || empty;\n  }\n  /**\n  @internal\n  */\n  eq(other) {\n    if (this == other) return true;\n    if (!(other instanceof DecorationSet) || this.local.length != other.local.length || this.children.length != other.children.length) return false;\n    for (let i = 0; i < this.local.length; i++) if (!this.local[i].eq(other.local[i])) return false;\n    for (let i = 0; i < this.children.length; i += 3) if (this.children[i] != other.children[i] || this.children[i + 1] != other.children[i + 1] || !this.children[i + 2].eq(other.children[i + 2])) return false;\n    return true;\n  }\n  /**\n  @internal\n  */\n  locals(node) {\n    return removeOverlap(this.localsInner(node));\n  }\n  /**\n  @internal\n  */\n  localsInner(node) {\n    if (this == empty) return none;\n    if (node.inlineContent || !this.local.some(InlineType.is)) return this.local;\n    let result = [];\n    for (let i = 0; i < this.local.length; i++) {\n      if (!(this.local[i].type instanceof InlineType)) result.push(this.local[i]);\n    }\n    return result;\n  }\n}\n/**\nThe empty set of decorations.\n*/\nDecorationSet.empty = new DecorationSet([], []);\n/**\n@internal\n*/\nDecorationSet.removeOverlap = removeOverlap;\nconst empty = DecorationSet.empty;\n// An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n  constructor(members) {\n    this.members = members;\n  }\n  map(mapping, doc) {\n    const mappedDecos = this.members.map(member => member.map(mapping, doc, noSpec));\n    return DecorationGroup.from(mappedDecos);\n  }\n  forChild(offset, child) {\n    if (child.isLeaf) return DecorationSet.empty;\n    let found = [];\n    for (let i = 0; i < this.members.length; i++) {\n      let result = this.members[i].forChild(offset, child);\n      if (result == empty) continue;\n      if (result instanceof DecorationGroup) found = found.concat(result.members);else found.push(result);\n    }\n    return DecorationGroup.from(found);\n  }\n  eq(other) {\n    if (!(other instanceof DecorationGroup) || other.members.length != this.members.length) return false;\n    for (let i = 0; i < this.members.length; i++) if (!this.members[i].eq(other.members[i])) return false;\n    return true;\n  }\n  locals(node) {\n    let result,\n      sorted = true;\n    for (let i = 0; i < this.members.length; i++) {\n      let locals = this.members[i].localsInner(node);\n      if (!locals.length) continue;\n      if (!result) {\n        result = locals;\n      } else {\n        if (sorted) {\n          result = result.slice();\n          sorted = false;\n        }\n        for (let j = 0; j < locals.length; j++) result.push(locals[j]);\n      }\n    }\n    return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none;\n  }\n  // Create a group for the given array of decoration sets, or return\n  // a single set when possible.\n  static from(members) {\n    switch (members.length) {\n      case 0:\n        return empty;\n      case 1:\n        return members[0];\n      default:\n        return new DecorationGroup(members.every(m => m instanceof DecorationSet) ? members : members.reduce((r, m) => r.concat(m instanceof DecorationSet ? m : m.members), []));\n    }\n  }\n}\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n  let children = oldChildren.slice();\n  // Mark the children that are directly touched by changes, and\n  // move those that are after the changes.\n  for (let i = 0, baseOffset = oldOffset; i < mapping.maps.length; i++) {\n    let moved = 0;\n    mapping.maps[i].forEach((oldStart, oldEnd, newStart, newEnd) => {\n      let dSize = newEnd - newStart - (oldEnd - oldStart);\n      for (let i = 0; i < children.length; i += 3) {\n        let end = children[i + 1];\n        if (end < 0 || oldStart > end + baseOffset - moved) continue;\n        let start = children[i] + baseOffset - moved;\n        if (oldEnd >= start) {\n          children[i + 1] = oldStart <= start ? -2 : -1;\n        } else if (oldStart >= baseOffset && dSize) {\n          children[i] += dSize;\n          children[i + 1] += dSize;\n        }\n      }\n      moved += dSize;\n    });\n    baseOffset = mapping.maps[i].map(baseOffset, -1);\n  }\n  // Find the child nodes that still correspond to a single node,\n  // recursively call mapInner on them and update their positions.\n  let mustRebuild = false;\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] < 0) {\n    // Touched nodes\n    if (children[i + 1] == -2) {\n      mustRebuild = true;\n      children[i + 1] = -1;\n      continue;\n    }\n    let from = mapping.map(oldChildren[i] + oldOffset),\n      fromLocal = from - offset;\n    if (fromLocal < 0 || fromLocal >= node.content.size) {\n      mustRebuild = true;\n      continue;\n    }\n    // Must read oldChildren because children was tagged with -1\n    let to = mapping.map(oldChildren[i + 1] + oldOffset, -1),\n      toLocal = to - offset;\n    let {\n      index,\n      offset: childOffset\n    } = node.content.findIndex(fromLocal);\n    let childNode = node.maybeChild(index);\n    if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n      let mapped = children[i + 2].mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options);\n      if (mapped != empty) {\n        children[i] = fromLocal;\n        children[i + 1] = toLocal;\n        children[i + 2] = mapped;\n      } else {\n        children[i + 1] = -2;\n        mustRebuild = true;\n      }\n    } else {\n      mustRebuild = true;\n    }\n  }\n  // Remaining children must be collected and rebuilt into the appropriate structure\n  if (mustRebuild) {\n    let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal, mapping, offset, oldOffset, options);\n    let built = buildTree(decorations, node, 0, options);\n    newLocal = built.local;\n    for (let i = 0; i < children.length; i += 3) if (children[i + 1] < 0) {\n      children.splice(i, 3);\n      i -= 3;\n    }\n    for (let i = 0, j = 0; i < built.children.length; i += 3) {\n      let from = built.children[i];\n      while (j < children.length && children[j] < from) j += 3;\n      children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2]);\n    }\n  }\n  return new DecorationSet(newLocal.sort(byPos), children);\n}\nfunction moveSpans(spans, offset) {\n  if (!offset || !spans.length) return spans;\n  let result = [];\n  for (let i = 0; i < spans.length; i++) {\n    let span = spans[i];\n    result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n  }\n  return result;\n}\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n  // Gather all decorations from the remaining marked children\n  function gather(set, oldOffset) {\n    for (let i = 0; i < set.local.length; i++) {\n      let mapped = set.local[i].map(mapping, offset, oldOffset);\n      if (mapped) decorations.push(mapped);else if (options.onRemove) options.onRemove(set.local[i].spec);\n    }\n    for (let i = 0; i < set.children.length; i += 3) gather(set.children[i + 2], set.children[i] + oldOffset + 1);\n  }\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1) gather(children[i + 2], oldChildren[i] + oldOffset + 1);\n  return decorations;\n}\nfunction takeSpansForNode(spans, node, offset) {\n  if (node.isLeaf) return null;\n  let end = offset + node.nodeSize,\n    found = null;\n  for (let i = 0, span; i < spans.length; i++) {\n    if ((span = spans[i]) && span.from > offset && span.to < end) {\n      (found || (found = [])).push(span);\n      spans[i] = null;\n    }\n  }\n  return found;\n}\nfunction withoutNulls(array) {\n  let result = [];\n  for (let i = 0; i < array.length; i++) if (array[i] != null) result.push(array[i]);\n  return result;\n}\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n  let children = [],\n    hasNulls = false;\n  node.forEach((childNode, localStart) => {\n    let found = takeSpansForNode(spans, childNode, localStart + offset);\n    if (found) {\n      hasNulls = true;\n      let subtree = buildTree(found, childNode, offset + localStart + 1, options);\n      if (subtree != empty) children.push(localStart, localStart + childNode.nodeSize, subtree);\n    }\n  });\n  let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n  for (let i = 0; i < locals.length; i++) if (!locals[i].type.valid(node, locals[i])) {\n    if (options.onRemove) options.onRemove(locals[i].spec);\n    locals.splice(i--, 1);\n  }\n  return locals.length || children.length ? new DecorationSet(locals, children) : empty;\n}\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n  return a.from - b.from || a.to - b.to;\n}\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n  let working = spans;\n  for (let i = 0; i < working.length - 1; i++) {\n    let span = working[i];\n    if (span.from != span.to) for (let j = i + 1; j < working.length; j++) {\n      let next = working[j];\n      if (next.from == span.from) {\n        if (next.to != span.to) {\n          if (working == spans) working = spans.slice();\n          // Followed by a partially overlapping larger span. Split that\n          // span.\n          working[j] = next.copy(next.from, span.to);\n          insertAhead(working, j + 1, next.copy(span.to, next.to));\n        }\n        continue;\n      } else {\n        if (next.from < span.to) {\n          if (working == spans) working = spans.slice();\n          // The end of this one overlaps with a subsequent span. Split\n          // this one.\n          working[i] = span.copy(span.from, next.from);\n          insertAhead(working, j, span.copy(next.from, span.to));\n        }\n        break;\n      }\n    }\n  }\n  return working;\n}\nfunction insertAhead(array, i, deco) {\n  while (i < array.length && byPos(deco, array[i]) > 0) i++;\n  array.splice(i, 0, deco);\n}\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n  let found = [];\n  view.someProp(\"decorations\", f => {\n    let result = f(view.state);\n    if (result && result != empty) found.push(result);\n  });\n  if (view.cursorWrapper) found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]));\n  return DecorationGroup.from(found);\n}\nconst observeOptions = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  attributes: true,\n  attributeOldValue: true,\n  subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = ie && ie_version <= 11;\nclass SelectionState {\n  constructor() {\n    this.anchorNode = null;\n    this.anchorOffset = 0;\n    this.focusNode = null;\n    this.focusOffset = 0;\n  }\n  set(sel) {\n    this.anchorNode = sel.anchorNode;\n    this.anchorOffset = sel.anchorOffset;\n    this.focusNode = sel.focusNode;\n    this.focusOffset = sel.focusOffset;\n  }\n  clear() {\n    this.anchorNode = this.focusNode = null;\n  }\n  eq(sel) {\n    return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset && sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset;\n  }\n}\nclass DOMObserver {\n  constructor(view, handleDOMChange) {\n    this.view = view;\n    this.handleDOMChange = handleDOMChange;\n    this.queue = [];\n    this.flushingSoon = -1;\n    this.observer = null;\n    this.currentSelection = new SelectionState();\n    this.onCharData = null;\n    this.suppressingSelectionUpdates = false;\n    this.observer = window.MutationObserver && new window.MutationObserver(mutations => {\n      for (let i = 0; i < mutations.length; i++) this.queue.push(mutations[i]);\n      // IE11 will sometimes (on backspacing out a single character\n      // text node after a BR node) call the observer callback\n      // before actually updating the DOM, which will cause\n      // ProseMirror to miss the change (see #930)\n      if (ie && ie_version <= 11 && mutations.some(m => m.type == \"childList\" && m.removedNodes.length || m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length)) this.flushSoon();else this.flush();\n    });\n    if (useCharData) {\n      this.onCharData = e => {\n        this.queue.push({\n          target: e.target,\n          type: \"characterData\",\n          oldValue: e.prevValue\n        });\n        this.flushSoon();\n      };\n    }\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n  }\n  flushSoon() {\n    if (this.flushingSoon < 0) this.flushingSoon = window.setTimeout(() => {\n      this.flushingSoon = -1;\n      this.flush();\n    }, 20);\n  }\n  forceFlush() {\n    if (this.flushingSoon > -1) {\n      window.clearTimeout(this.flushingSoon);\n      this.flushingSoon = -1;\n      this.flush();\n    }\n  }\n  start() {\n    if (this.observer) {\n      this.observer.takeRecords();\n      this.observer.observe(this.view.dom, observeOptions);\n    }\n    if (this.onCharData) this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n    this.connectSelection();\n  }\n  stop() {\n    if (this.observer) {\n      let take = this.observer.takeRecords();\n      if (take.length) {\n        for (let i = 0; i < take.length; i++) this.queue.push(take[i]);\n        window.setTimeout(() => this.flush(), 20);\n      }\n      this.observer.disconnect();\n    }\n    if (this.onCharData) this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n    this.disconnectSelection();\n  }\n  connectSelection() {\n    this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n  }\n  disconnectSelection() {\n    this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n  }\n  suppressSelectionUpdates() {\n    this.suppressingSelectionUpdates = true;\n    setTimeout(() => this.suppressingSelectionUpdates = false, 50);\n  }\n  onSelectionChange() {\n    if (!hasFocusAndSelection(this.view)) return;\n    if (this.suppressingSelectionUpdates) return selectionToDOM(this.view);\n    // Deletions on IE11 fire their events in the wrong order, giving\n    // us a selection change event before the DOM changes are\n    // reported.\n    if (ie && ie_version <= 11 && !this.view.state.selection.empty) {\n      let sel = this.view.domSelectionRange();\n      // Selection.isCollapsed isn't reliable on IE\n      if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset)) return this.flushSoon();\n    }\n    this.flush();\n  }\n  setCurSelection() {\n    this.currentSelection.set(this.view.domSelectionRange());\n  }\n  ignoreSelectionChange(sel) {\n    if (!sel.focusNode) return true;\n    let ancestors = new Set(),\n      container;\n    for (let scan = sel.focusNode; scan; scan = parentNode(scan)) ancestors.add(scan);\n    for (let scan = sel.anchorNode; scan; scan = parentNode(scan)) if (ancestors.has(scan)) {\n      container = scan;\n      break;\n    }\n    let desc = container && this.view.docView.nearestDesc(container);\n    if (desc && desc.ignoreMutation({\n      type: \"selection\",\n      target: container.nodeType == 3 ? container.parentNode : container\n    })) {\n      this.setCurSelection();\n      return true;\n    }\n  }\n  pendingRecords() {\n    if (this.observer) for (let mut of this.observer.takeRecords()) this.queue.push(mut);\n    return this.queue;\n  }\n  flush() {\n    let {\n      view\n    } = this;\n    if (!view.docView || this.flushingSoon > -1) return;\n    let mutations = this.pendingRecords();\n    if (mutations.length) this.queue = [];\n    let sel = view.domSelectionRange();\n    let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasFocusAndSelection(view) && !this.ignoreSelectionChange(sel);\n    let from = -1,\n      to = -1,\n      typeOver = false,\n      added = [];\n    if (view.editable) {\n      for (let i = 0; i < mutations.length; i++) {\n        let result = this.registerMutation(mutations[i], added);\n        if (result) {\n          from = from < 0 ? result.from : Math.min(result.from, from);\n          to = to < 0 ? result.to : Math.max(result.to, to);\n          if (result.typeOver) typeOver = true;\n        }\n      }\n    }\n    if (gecko && added.length > 1) {\n      let brs = added.filter(n => n.nodeName == \"BR\");\n      if (brs.length == 2) {\n        let a = brs[0],\n          b = brs[1];\n        if (a.parentNode && a.parentNode.parentNode == b.parentNode) b.remove();else a.remove();\n      }\n    }\n    let readSel = null;\n    // If it looks like the browser has reset the selection to the\n    // start of the document after focus, restore the selection from\n    // the state\n    if (from < 0 && newSel && view.input.lastFocus > Date.now() - 200 && Math.max(view.input.lastTouch, view.input.lastClick.time) < Date.now() - 300 && selectionCollapsed(sel) && (readSel = selectionFromDOM(view)) && readSel.eq(Selection.near(view.state.doc.resolve(0), 1))) {\n      view.input.lastFocus = 0;\n      selectionToDOM(view);\n      this.currentSelection.set(sel);\n      view.scrollToSelection();\n    } else if (from > -1 || newSel) {\n      if (from > -1) {\n        view.docView.markDirty(from, to);\n        checkCSS(view);\n      }\n      this.handleDOMChange(from, to, typeOver, added);\n      if (view.docView && view.docView.dirty) view.updateState(view.state);else if (!this.currentSelection.eq(sel)) selectionToDOM(view);\n      this.currentSelection.set(sel);\n    }\n  }\n  registerMutation(mut, added) {\n    // Ignore mutations inside nodes that were already noted as inserted\n    if (added.indexOf(mut.target) > -1) return null;\n    let desc = this.view.docView.nearestDesc(mut.target);\n    if (mut.type == \"attributes\" && (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n    // Firefox sometimes fires spurious events for null/empty styles\n    mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))) return null;\n    if (!desc || desc.ignoreMutation(mut)) return null;\n    if (mut.type == \"childList\") {\n      for (let i = 0; i < mut.addedNodes.length; i++) added.push(mut.addedNodes[i]);\n      if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target)) return {\n        from: desc.posBefore,\n        to: desc.posAfter\n      };\n      let prev = mut.previousSibling,\n        next = mut.nextSibling;\n      if (ie && ie_version <= 11 && mut.addedNodes.length) {\n        // IE11 gives us incorrect next/prev siblings for some\n        // insertions, so if there are added nodes, recompute those\n        for (let i = 0; i < mut.addedNodes.length; i++) {\n          let {\n            previousSibling,\n            nextSibling\n          } = mut.addedNodes[i];\n          if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0) prev = previousSibling;\n          if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0) next = nextSibling;\n        }\n      }\n      let fromOffset = prev && prev.parentNode == mut.target ? domIndex(prev) + 1 : 0;\n      let from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n      let toOffset = next && next.parentNode == mut.target ? domIndex(next) : mut.target.childNodes.length;\n      let to = desc.localPosFromDOM(mut.target, toOffset, 1);\n      return {\n        from,\n        to\n      };\n    } else if (mut.type == \"attributes\") {\n      return {\n        from: desc.posAtStart - desc.border,\n        to: desc.posAtEnd + desc.border\n      };\n    } else {\n      // \"characterData\"\n      return {\n        from: desc.posAtStart,\n        to: desc.posAtEnd,\n        // An event was generated for a text change that didn't change\n        // any text. Mark the dom change to fall back to assuming the\n        // selection was typed over with an identical value if it can't\n        // find another change.\n        typeOver: mut.target.nodeValue == mut.oldValue\n      };\n    }\n  }\n}\nlet cssChecked = new WeakMap();\nlet cssCheckWarned = false;\nfunction checkCSS(view) {\n  if (cssChecked.has(view)) return;\n  cssChecked.set(view, null);\n  if (['normal', 'nowrap', 'pre-line'].indexOf(getComputedStyle(view.dom).whiteSpace) !== -1) {\n    view.requiresGeckoHackNode = gecko;\n    if (cssCheckWarned) return;\n    console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\");\n    cssCheckWarned = true;\n  }\n}\n// Used to work around a Safari Selection/shadow DOM bug\n// Based on https://github.com/codemirror/dev/issues/414 fix\nfunction safariShadowSelectionRange(view) {\n  let found;\n  function read(event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    found = event.getTargetRanges()[0];\n  }\n  // Because Safari (at least in 2018-2022) doesn't provide regular\n  // access to the selection inside a shadowRoot, we have to perform a\n  // ridiculous hack to get at it—using `execCommand` to trigger a\n  // `beforeInput` event so that we can read the target range from the\n  // event.\n  view.dom.addEventListener(\"beforeinput\", read, true);\n  document.execCommand(\"indent\");\n  view.dom.removeEventListener(\"beforeinput\", read, true);\n  let anchorNode = found.startContainer,\n    anchorOffset = found.startOffset;\n  let focusNode = found.endContainer,\n    focusOffset = found.endOffset;\n  let currentAnchor = view.domAtPos(view.state.selection.anchor);\n  // Since such a range doesn't distinguish between anchor and head,\n  // use a heuristic that flips it around if its end matches the\n  // current anchor.\n  if (isEquivalentPosition(currentAnchor.node, currentAnchor.offset, focusNode, focusOffset)) [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n  return {\n    anchorNode,\n    anchorOffset,\n    focusNode,\n    focusOffset\n  };\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\nfunction parseBetween(view, from_, to_) {\n  let {\n    node: parent,\n    fromOffset,\n    toOffset,\n    from,\n    to\n  } = view.docView.parseRange(from_, to_);\n  let domSel = view.domSelectionRange();\n  let find;\n  let anchor = domSel.anchorNode;\n  if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n    find = [{\n      node: anchor,\n      offset: domSel.anchorOffset\n    }];\n    if (!selectionCollapsed(domSel)) find.push({\n      node: domSel.focusNode,\n      offset: domSel.focusOffset\n    });\n  }\n  // Work around issue in Chrome where backspacing sometimes replaces\n  // the deleted content with a random BR node (issues #799, #831)\n  if (chrome && view.input.lastKeyCode === 8) {\n    for (let off = toOffset; off > fromOffset; off--) {\n      let node = parent.childNodes[off - 1],\n        desc = node.pmViewDesc;\n      if (node.nodeName == \"BR\" && !desc) {\n        toOffset = off;\n        break;\n      }\n      if (!desc || desc.size) break;\n    }\n  }\n  let startDoc = view.state.doc;\n  let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n  let $from = startDoc.resolve(from);\n  let sel = null,\n    doc = parser.parse(parent, {\n      topNode: $from.parent,\n      topMatch: $from.parent.contentMatchAt($from.index()),\n      topOpen: true,\n      from: fromOffset,\n      to: toOffset,\n      preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n      findPositions: find,\n      ruleFromNode,\n      context: $from\n    });\n  if (find && find[0].pos != null) {\n    let anchor = find[0].pos,\n      head = find[1] && find[1].pos;\n    if (head == null) head = anchor;\n    sel = {\n      anchor: anchor + from,\n      head: head + from\n    };\n  }\n  return {\n    doc,\n    sel,\n    from,\n    to\n  };\n}\nfunction ruleFromNode(dom) {\n  let desc = dom.pmViewDesc;\n  if (desc) {\n    return desc.parseRule();\n  } else if (dom.nodeName == \"BR\" && dom.parentNode) {\n    // Safari replaces the list item or table cell with a BR\n    // directly in the list node (?!) if you delete the last\n    // character in a list item or table cell (#708, #862)\n    if (safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n      let skip = document.createElement(\"div\");\n      skip.appendChild(document.createElement(\"li\"));\n      return {\n        skip\n      };\n    } else if (dom.parentNode.lastChild == dom || safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n      return {\n        ignore: true\n      };\n    }\n  } else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n    return {\n      ignore: true\n    };\n  }\n  return null;\n}\nconst isInline = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n  let compositionID = view.input.compositionPendingChanges || (view.composing ? view.input.compositionID : 0);\n  view.input.compositionPendingChanges = 0;\n  if (from < 0) {\n    let origin = view.input.lastSelectionTime > Date.now() - 50 ? view.input.lastSelectionOrigin : null;\n    let newSel = selectionFromDOM(view, origin);\n    if (newSel && !view.state.selection.eq(newSel)) {\n      if (chrome && android && view.input.lastKeyCode === 13 && Date.now() - 100 < view.input.lastKeyCodeTime && view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) return;\n      let tr = view.state.tr.setSelection(newSel);\n      if (origin == \"pointer\") tr.setMeta(\"pointer\", true);else if (origin == \"key\") tr.scrollIntoView();\n      if (compositionID) tr.setMeta(\"composition\", compositionID);\n      view.dispatch(tr);\n    }\n    return;\n  }\n  let $before = view.state.doc.resolve(from);\n  let shared = $before.sharedDepth(to);\n  from = $before.before(shared + 1);\n  to = view.state.doc.resolve(to).after(shared + 1);\n  let sel = view.state.selection;\n  let parse = parseBetween(view, from, to);\n  let doc = view.state.doc,\n    compare = doc.slice(parse.from, parse.to);\n  let preferredPos, preferredSide;\n  // Prefer anchoring to end when Backspace is pressed\n  if (view.input.lastKeyCode === 8 && Date.now() - 100 < view.input.lastKeyCodeTime) {\n    preferredPos = view.state.selection.to;\n    preferredSide = \"end\";\n  } else {\n    preferredPos = view.state.selection.from;\n    preferredSide = \"start\";\n  }\n  view.input.lastKeyCode = null;\n  let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n  if ((ios && view.input.lastIOSEnter > Date.now() - 225 || android) && addedNodes.some(n => n.nodeType == 1 && !isInline.test(n.nodeName)) && (!change || change.endA >= change.endB) && view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n    view.input.lastIOSEnter = 0;\n    return;\n  }\n  if (!change) {\n    if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) && !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n      change = {\n        start: sel.from,\n        endA: sel.to,\n        endB: sel.to\n      };\n    } else {\n      if (parse.sel) {\n        let sel = resolveSelection(view, view.state.doc, parse.sel);\n        if (sel && !sel.eq(view.state.selection)) {\n          let tr = view.state.tr.setSelection(sel);\n          if (compositionID) tr.setMeta(\"composition\", compositionID);\n          view.dispatch(tr);\n        }\n      }\n      return;\n    }\n  }\n  // Chrome sometimes leaves the cursor before the inserted text when\n  // composing after a cursor wrapper. This moves it forward.\n  if (chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from && parse.sel.head == parse.sel.anchor) {\n    let size = change.endB - change.start;\n    parse.sel = {\n      anchor: parse.sel.anchor + size,\n      head: parse.sel.anchor + size\n    };\n  }\n  view.input.domChangeCount++;\n  // Handle the case where overwriting a selection by typing matches\n  // the start or end of the selected content, creating a change\n  // that's smaller than what was actually overwritten.\n  if (view.state.selection.from < view.state.selection.to && change.start == change.endB && view.state.selection instanceof TextSelection) {\n    if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2 && view.state.selection.from >= parse.from) {\n      change.start = view.state.selection.from;\n    } else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2 && view.state.selection.to <= parse.to) {\n      change.endB += view.state.selection.to - change.endA;\n      change.endA = view.state.selection.to;\n    }\n  }\n  // IE11 will insert a non-breaking space _ahead_ of the space after\n  // the cursor space when adding a space before another space. When\n  // that happened, adjust the change to cover the space instead.\n  if (ie && ie_version <= 11 && change.endB == change.start + 1 && change.endA == change.start && change.start > parse.from && parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n    change.start--;\n    change.endA--;\n    change.endB--;\n  }\n  let $from = parse.doc.resolveNoCache(change.start - parse.from);\n  let $to = parse.doc.resolveNoCache(change.endB - parse.from);\n  let $fromA = doc.resolve(change.start);\n  let inlineChange = $from.sameParent($to) && $from.parent.inlineContent && $fromA.end() >= change.endA;\n  let nextSel;\n  // If this looks like the effect of pressing Enter (or was recorded\n  // as being an iOS enter press), just dispatch an Enter key instead.\n  if ((ios && view.input.lastIOSEnter > Date.now() - 225 && (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\")) || !inlineChange && $from.pos < parse.doc.content.size && !$from.sameParent($to) && (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) && nextSel.head == $to.pos) && view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n    view.input.lastIOSEnter = 0;\n    return;\n  }\n  // Same for backspace\n  if (view.state.selection.anchor > change.start && looksLikeJoin(doc, change.start, change.endA, $from, $to) && view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n    if (android && chrome) view.domObserver.suppressSelectionUpdates(); // #820\n    return;\n  }\n  // Chrome Android will occasionally, during composition, delete the\n  // entire composition and then immediately insert it again. This is\n  // used to detect that situation.\n  if (chrome && android && change.endB == change.start) view.input.lastAndroidDelete = Date.now();\n  // This tries to detect Android virtual keyboard\n  // enter-and-pick-suggestion action. That sometimes (see issue\n  // #1059) first fires a DOM mutation, before moving the selection to\n  // the newly created block. And then, because ProseMirror cleans up\n  // the DOM selection, it gives up moving the selection entirely,\n  // leaving the cursor in the wrong place. When that happens, we drop\n  // the new paragraph from the initial change, and fire a simulated\n  // enter key afterwards.\n  if (android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth && parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n    change.endB -= 2;\n    $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    setTimeout(() => {\n      view.someProp(\"handleKeyDown\", function (f) {\n        return f(view, keyEvent(13, \"Enter\"));\n      });\n    }, 20);\n  }\n  let chFrom = change.start,\n    chTo = change.endA;\n  let tr, storedMarks, markChange;\n  if (inlineChange) {\n    if ($from.pos == $to.pos) {\n      // Deletion\n      // IE11 sometimes weirdly moves the DOM selection around after\n      // backspacing out the first element in a textblock\n      if (ie && ie_version <= 11 && $from.parentOffset == 0) {\n        view.domObserver.suppressSelectionUpdates();\n        setTimeout(() => selectionToDOM(view), 20);\n      }\n      tr = view.state.tr.delete(chFrom, chTo);\n      storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n    } else if (\n    // Adding or removing a mark\n    change.endA == change.endB && (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset), $fromA.parent.content.cut($fromA.parentOffset, change.endA - $fromA.start())))) {\n      tr = view.state.tr;\n      if (markChange.type == \"add\") tr.addMark(chFrom, chTo, markChange.mark);else tr.removeMark(chFrom, chTo, markChange.mark);\n    } else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n      // Both positions in the same text node -- simply insert text\n      let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n      if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text))) return;\n      tr = view.state.tr.insertText(text, chFrom, chTo);\n    }\n  }\n  if (!tr) tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from));\n  if (parse.sel) {\n    let sel = resolveSelection(view, tr.doc, parse.sel);\n    // Chrome Android will sometimes, during composition, report the\n    // selection in the wrong place. If it looks like that is\n    // happening, don't update the selection.\n    // Edge just doesn't move the cursor forward when you start typing\n    // in an empty block or between br nodes.\n    if (sel && !(chrome && android && view.composing && sel.empty && (change.start != change.endB || view.input.lastAndroidDelete < Date.now() - 100) && (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) || ie && sel.empty && sel.head == chFrom)) tr.setSelection(sel);\n  }\n  if (storedMarks) tr.ensureMarks(storedMarks);\n  if (compositionID) tr.setMeta(\"composition\", compositionID);\n  view.dispatch(tr.scrollIntoView());\n}\nfunction resolveSelection(view, doc, parsedSel) {\n  if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size) return null;\n  return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head));\n}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n  let curMarks = cur.firstChild.marks,\n    prevMarks = prev.firstChild.marks;\n  let added = curMarks,\n    removed = prevMarks,\n    type,\n    mark,\n    update;\n  for (let i = 0; i < prevMarks.length; i++) added = prevMarks[i].removeFromSet(added);\n  for (let i = 0; i < curMarks.length; i++) removed = curMarks[i].removeFromSet(removed);\n  if (added.length == 1 && removed.length == 0) {\n    mark = added[0];\n    type = \"add\";\n    update = node => node.mark(mark.addToSet(node.marks));\n  } else if (added.length == 0 && removed.length == 1) {\n    mark = removed[0];\n    type = \"remove\";\n    update = node => node.mark(mark.removeFromSet(node.marks));\n  } else {\n    return null;\n  }\n  let updated = [];\n  for (let i = 0; i < prev.childCount; i++) updated.push(update(prev.child(i)));\n  if (Fragment.from(updated).eq(cur)) return {\n    mark,\n    type\n  };\n}\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n  if (!$newStart.parent.isTextblock ||\n  // The content must have shrunk\n  end - start <= $newEnd.pos - $newStart.pos ||\n  // newEnd must point directly at or after the end of the block that newStart points into\n  skipClosingAndOpening($newStart, true, false) < $newEnd.pos) return false;\n  let $start = old.resolve(start);\n  // Start must be at the end of a block\n  if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock) return false;\n  let $next = old.resolve(skipClosingAndOpening($start, true, true));\n  // The next textblock must start before end and end near it\n  if (!$next.parent.isTextblock || $next.pos > end || skipClosingAndOpening($next, true, false) < end) return false;\n  // The fragments after the join point must match\n  return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content);\n}\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n  let depth = $pos.depth,\n    end = fromEnd ? $pos.end() : $pos.pos;\n  while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n    depth--;\n    end++;\n    fromEnd = false;\n  }\n  if (mayOpen) {\n    let next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n    while (next && !next.isLeaf) {\n      next = next.firstChild;\n      end++;\n    }\n  }\n  return end;\n}\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n  let start = a.findDiffStart(b, pos);\n  if (start == null) return null;\n  let {\n    a: endA,\n    b: endB\n  } = a.findDiffEnd(b, pos + a.size, pos + b.size);\n  if (preferredSide == \"end\") {\n    let adjust = Math.max(0, start - Math.min(endA, endB));\n    preferredPos -= endA + adjust - start;\n  }\n  if (endA < start && a.size < b.size) {\n    let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n    start -= move;\n    if (start && start < b.size && isSurrogatePair(b.textBetween(start - 1, start + 1))) start += move ? 1 : -1;\n    endB = start + (endB - endA);\n    endA = start;\n  } else if (endB < start) {\n    let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n    start -= move;\n    if (start && start < a.size && isSurrogatePair(a.textBetween(start - 1, start + 1))) start += move ? 1 : -1;\n    endA = start + (endA - endB);\n    endB = start;\n  }\n  return {\n    start,\n    endA,\n    endB\n  };\n}\nfunction isSurrogatePair(str) {\n  if (str.length != 2) return false;\n  let a = str.charCodeAt(0),\n    b = str.charCodeAt(1);\n  return a >= 0xDC00 && a <= 0xDFFF && b >= 0xD800 && b <= 0xDBFF;\n}\n\n/**\n@internal\n*/\nconst __serializeForClipboard = serializeForClipboard;\n/**\n@internal\n*/\nconst __parseFromClipboard = parseFromClipboard;\n/**\n@internal\n*/\nconst __endComposition = endComposition;\n/**\nAn editor view manages the DOM structure that represents an\neditable document. Its state and behavior are determined by its\n[props](https://prosemirror.net/docs/ref/#view.DirectEditorProps).\n*/\nclass EditorView {\n  /**\n  Create a view. `place` may be a DOM node that the editor should\n  be appended to, a function that will place it into the document,\n  or an object whose `mount` property holds the node to use as the\n  document container. If it is `null`, the editor will not be\n  added to the document.\n  */\n  constructor(place, props) {\n    this._root = null;\n    /**\n    @internal\n    */\n    this.focused = false;\n    /**\n    Kludge used to work around a Chrome bug @internal\n    */\n    this.trackWrites = null;\n    this.mounted = false;\n    /**\n    @internal\n    */\n    this.markCursor = null;\n    /**\n    @internal\n    */\n    this.cursorWrapper = null;\n    /**\n    @internal\n    */\n    this.lastSelectedViewDesc = undefined;\n    /**\n    @internal\n    */\n    this.input = new InputState();\n    this.prevDirectPlugins = [];\n    this.pluginViews = [];\n    /**\n    Holds `true` when a hack node is needed in Firefox to prevent the\n    [space is eaten issue](https://github.com/ProseMirror/prosemirror/issues/651)\n    @internal\n    */\n    this.requiresGeckoHackNode = false;\n    /**\n    When editor content is being dragged, this object contains\n    information about the dragged slice and whether it is being\n    copied or moved. At any other time, it is null.\n    */\n    this.dragging = null;\n    this._props = props;\n    this.state = props.state;\n    this.directPlugins = props.plugins || [];\n    this.directPlugins.forEach(checkStateComponent);\n    this.dispatch = this.dispatch.bind(this);\n    this.dom = place && place.mount || document.createElement(\"div\");\n    if (place) {\n      if (place.appendChild) place.appendChild(this.dom);else if (typeof place == \"function\") place(this.dom);else if (place.mount) this.mounted = true;\n    }\n    this.editable = getEditable(this);\n    updateCursorWrapper(this);\n    this.nodeViews = buildNodeViews(this);\n    this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n    this.domObserver = new DOMObserver(this, (from, to, typeOver, added) => readDOMChange(this, from, to, typeOver, added));\n    this.domObserver.start();\n    initInput(this);\n    this.updatePluginViews();\n  }\n  /**\n  Holds `true` when a\n  [composition](https://w3c.github.io/uievents/#events-compositionevents)\n  is active.\n  */\n  get composing() {\n    return this.input.composing;\n  }\n  /**\n  The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).\n  */\n  get props() {\n    if (this._props.state != this.state) {\n      let prev = this._props;\n      this._props = {};\n      for (let name in prev) this._props[name] = prev[name];\n      this._props.state = this.state;\n    }\n    return this._props;\n  }\n  /**\n  Update the view's props. Will immediately cause an update to\n  the DOM.\n  */\n  update(props) {\n    if (props.handleDOMEvents != this._props.handleDOMEvents) ensureListeners(this);\n    let prevProps = this._props;\n    this._props = props;\n    if (props.plugins) {\n      props.plugins.forEach(checkStateComponent);\n      this.directPlugins = props.plugins;\n    }\n    this.updateStateInner(props.state, prevProps);\n  }\n  /**\n  Update the view by updating existing props object with the object\n  given as argument. Equivalent to `view.update(Object.assign({},\n  view.props, props))`.\n  */\n  setProps(props) {\n    let updated = {};\n    for (let name in this._props) updated[name] = this._props[name];\n    updated.state = this.state;\n    for (let name in props) updated[name] = props[name];\n    this.update(updated);\n  }\n  /**\n  Update the editor's `state` prop, without touching any of the\n  other props.\n  */\n  updateState(state) {\n    this.updateStateInner(state, this._props);\n  }\n  updateStateInner(state, prevProps) {\n    var _a;\n    let prev = this.state,\n      redraw = false,\n      updateSel = false;\n    // When stored marks are added, stop composition, so that they can\n    // be displayed.\n    if (state.storedMarks && this.composing) {\n      clearComposition(this);\n      updateSel = true;\n    }\n    this.state = state;\n    let pluginsChanged = prev.plugins != state.plugins || this._props.plugins != prevProps.plugins;\n    if (pluginsChanged || this._props.plugins != prevProps.plugins || this._props.nodeViews != prevProps.nodeViews) {\n      let nodeViews = buildNodeViews(this);\n      if (changedNodeViews(nodeViews, this.nodeViews)) {\n        this.nodeViews = nodeViews;\n        redraw = true;\n      }\n    }\n    if (pluginsChanged || prevProps.handleDOMEvents != this._props.handleDOMEvents) {\n      ensureListeners(this);\n    }\n    this.editable = getEditable(this);\n    updateCursorWrapper(this);\n    let innerDeco = viewDecorations(this),\n      outerDeco = computeDocDeco(this);\n    let scroll = prev.plugins != state.plugins && !prev.doc.eq(state.doc) ? \"reset\" : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n    let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n    if (updateDoc || !state.selection.eq(prev.selection)) updateSel = true;\n    let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n    if (updateSel) {\n      this.domObserver.stop();\n      // Work around an issue in Chrome, IE, and Edge where changing\n      // the DOM around an active selection puts it into a broken\n      // state where the thing the user sees differs from the\n      // selection reported by the Selection object (#710, #973,\n      // #1011, #1013, #1035).\n      let forceSelUpdate = updateDoc && (ie || chrome) && !this.composing && !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n      if (updateDoc) {\n        // If the node that the selection points into is written to,\n        // Chrome sometimes starts misreporting the selection, so this\n        // tracks that and forces a selection reset when our update\n        // did write to the node.\n        let chromeKludge = chrome ? this.trackWrites = this.domSelectionRange().focusNode : null;\n        if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n          this.docView.updateOuterDeco([]);\n          this.docView.destroy();\n          this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n        }\n        if (chromeKludge && !this.trackWrites) forceSelUpdate = true;\n      }\n      // Work around for an issue where an update arriving right between\n      // a DOM selection change and the \"selectionchange\" event for it\n      // can cause a spurious DOM selection update, disrupting mouse\n      // drag selection.\n      if (forceSelUpdate || !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) && anchorInRightPlace(this))) {\n        selectionToDOM(this, forceSelUpdate);\n      } else {\n        syncNodeSelection(this, state.selection);\n        this.domObserver.setCurSelection();\n      }\n      this.domObserver.start();\n    }\n    this.updatePluginViews(prev);\n    if (((_a = this.dragging) === null || _a === void 0 ? void 0 : _a.node) && !prev.doc.eq(state.doc)) this.updateDraggedNode(this.dragging, prev);\n    if (scroll == \"reset\") {\n      this.dom.scrollTop = 0;\n    } else if (scroll == \"to selection\") {\n      this.scrollToSelection();\n    } else if (oldScrollPos) {\n      resetScrollPos(oldScrollPos);\n    }\n  }\n  /**\n  @internal\n  */\n  scrollToSelection() {\n    let startDOM = this.domSelectionRange().focusNode;\n    if (this.someProp(\"handleScrollToSelection\", f => f(this))) ;else if (this.state.selection instanceof NodeSelection) {\n      let target = this.docView.domAfterPos(this.state.selection.from);\n      if (target.nodeType == 1) scrollRectIntoView(this, target.getBoundingClientRect(), startDOM);\n    } else {\n      scrollRectIntoView(this, this.coordsAtPos(this.state.selection.head, 1), startDOM);\n    }\n  }\n  destroyPluginViews() {\n    let view;\n    while (view = this.pluginViews.pop()) if (view.destroy) view.destroy();\n  }\n  updatePluginViews(prevState) {\n    if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n      this.prevDirectPlugins = this.directPlugins;\n      this.destroyPluginViews();\n      for (let i = 0; i < this.directPlugins.length; i++) {\n        let plugin = this.directPlugins[i];\n        if (plugin.spec.view) this.pluginViews.push(plugin.spec.view(this));\n      }\n      for (let i = 0; i < this.state.plugins.length; i++) {\n        let plugin = this.state.plugins[i];\n        if (plugin.spec.view) this.pluginViews.push(plugin.spec.view(this));\n      }\n    } else {\n      for (let i = 0; i < this.pluginViews.length; i++) {\n        let pluginView = this.pluginViews[i];\n        if (pluginView.update) pluginView.update(this, prevState);\n      }\n    }\n  }\n  updateDraggedNode(dragging, prev) {\n    let sel = dragging.node,\n      found = -1;\n    if (this.state.doc.nodeAt(sel.from) == sel.node) {\n      found = sel.from;\n    } else {\n      let movedPos = sel.from + (this.state.doc.content.size - prev.doc.content.size);\n      let moved = movedPos > 0 && this.state.doc.nodeAt(movedPos);\n      if (moved == sel.node) found = movedPos;\n    }\n    this.dragging = new Dragging(dragging.slice, dragging.move, found < 0 ? undefined : NodeSelection.create(this.state.doc, found));\n  }\n  someProp(propName, f) {\n    let prop = this._props && this._props[propName],\n      value;\n    if (prop != null && (value = f ? f(prop) : prop)) return value;\n    for (let i = 0; i < this.directPlugins.length; i++) {\n      let prop = this.directPlugins[i].props[propName];\n      if (prop != null && (value = f ? f(prop) : prop)) return value;\n    }\n    let plugins = this.state.plugins;\n    if (plugins) for (let i = 0; i < plugins.length; i++) {\n      let prop = plugins[i].props[propName];\n      if (prop != null && (value = f ? f(prop) : prop)) return value;\n    }\n  }\n  /**\n  Query whether the view has focus.\n  */\n  hasFocus() {\n    // Work around IE not handling focus correctly if resize handles are shown.\n    // If the cursor is inside an element with resize handles, activeElement\n    // will be that element instead of this.dom.\n    if (ie) {\n      // If activeElement is within this.dom, and there are no other elements\n      // setting `contenteditable` to false in between, treat it as focused.\n      let node = this.root.activeElement;\n      if (node == this.dom) return true;\n      if (!node || !this.dom.contains(node)) return false;\n      while (node && this.dom != node && this.dom.contains(node)) {\n        if (node.contentEditable == 'false') return false;\n        node = node.parentElement;\n      }\n      return true;\n    }\n    return this.root.activeElement == this.dom;\n  }\n  /**\n  Focus the editor.\n  */\n  focus() {\n    this.domObserver.stop();\n    if (this.editable) focusPreventScroll(this.dom);\n    selectionToDOM(this);\n    this.domObserver.start();\n  }\n  /**\n  Get the document root in which the editor exists. This will\n  usually be the top-level `document`, but might be a [shadow\n  DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n  root if the editor is inside one.\n  */\n  get root() {\n    let cached = this._root;\n    if (cached == null) for (let search = this.dom.parentNode; search; search = search.parentNode) {\n      if (search.nodeType == 9 || search.nodeType == 11 && search.host) {\n        if (!search.getSelection) Object.getPrototypeOf(search).getSelection = () => search.ownerDocument.getSelection();\n        return this._root = search;\n      }\n    }\n    return cached || document;\n  }\n  /**\n  When an existing editor view is moved to a new document or\n  shadow tree, call this to make it recompute its root.\n  */\n  updateRoot() {\n    this._root = null;\n  }\n  /**\n  Given a pair of viewport coordinates, return the document\n  position that corresponds to them. May return null if the given\n  coordinates aren't inside of the editor. When an object is\n  returned, its `pos` property is the position nearest to the\n  coordinates, and its `inside` property holds the position of the\n  inner node that the position falls inside of, or -1 if it is at\n  the top level, not in any node.\n  */\n  posAtCoords(coords) {\n    return posAtCoords(this, coords);\n  }\n  /**\n  Returns the viewport rectangle at a given document position.\n  `left` and `right` will be the same number, as this returns a\n  flat cursor-ish rectangle. If the position is between two things\n  that aren't directly adjacent, `side` determines which element\n  is used. When < 0, the element before the position is used,\n  otherwise the element after.\n  */\n  coordsAtPos(pos, side = 1) {\n    return coordsAtPos(this, pos, side);\n  }\n  /**\n  Find the DOM position that corresponds to the given document\n  position. When `side` is negative, find the position as close as\n  possible to the content before the position. When positive,\n  prefer positions close to the content after the position. When\n  zero, prefer as shallow a position as possible.\n  \n  Note that you should **not** mutate the editor's internal DOM,\n  only inspect it (and even that is usually not necessary).\n  */\n  domAtPos(pos, side = 0) {\n    return this.docView.domFromPos(pos, side);\n  }\n  /**\n  Find the DOM node that represents the document node after the\n  given position. May return `null` when the position doesn't point\n  in front of a node or if the node is inside an opaque node view.\n  \n  This is intended to be able to call things like\n  `getBoundingClientRect` on that DOM node. Do **not** mutate the\n  editor DOM directly, or add styling this way, since that will be\n  immediately overriden by the editor as it redraws the node.\n  */\n  nodeDOM(pos) {\n    let desc = this.docView.descAt(pos);\n    return desc ? desc.nodeDOM : null;\n  }\n  /**\n  Find the document position that corresponds to a given DOM\n  position. (Whenever possible, it is preferable to inspect the\n  document structure directly, rather than poking around in the\n  DOM, but sometimes—for example when interpreting an event\n  target—you don't have a choice.)\n  \n  The `bias` parameter can be used to influence which side of a DOM\n  node to use when the position is inside a leaf node.\n  */\n  posAtDOM(node, offset, bias = -1) {\n    let pos = this.docView.posFromDOM(node, offset, bias);\n    if (pos == null) throw new RangeError(\"DOM position not inside the editor\");\n    return pos;\n  }\n  /**\n  Find out whether the selection is at the end of a textblock when\n  moving in a given direction. When, for example, given `\"left\"`,\n  it will return true if moving left from the current cursor\n  position would leave that position's parent textblock. Will apply\n  to the view's current state by default, but it is possible to\n  pass a different state.\n  */\n  endOfTextblock(dir, state) {\n    return endOfTextblock(this, state || this.state, dir);\n  }\n  /**\n  Run the editor's paste logic with the given HTML string. The\n  `event`, if given, will be passed to the\n  [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.\n  */\n  pasteHTML(html, event) {\n    return doPaste(this, \"\", html, false, event || new ClipboardEvent(\"paste\"));\n  }\n  /**\n  Run the editor's paste logic with the given plain-text input.\n  */\n  pasteText(text, event) {\n    return doPaste(this, text, null, true, event || new ClipboardEvent(\"paste\"));\n  }\n  /**\n  Removes the editor from the DOM and destroys all [node\n  views](https://prosemirror.net/docs/ref/#view.NodeView).\n  */\n  destroy() {\n    if (!this.docView) return;\n    destroyInput(this);\n    this.destroyPluginViews();\n    if (this.mounted) {\n      this.docView.update(this.state.doc, [], viewDecorations(this), this);\n      this.dom.textContent = \"\";\n    } else if (this.dom.parentNode) {\n      this.dom.parentNode.removeChild(this.dom);\n    }\n    this.docView.destroy();\n    this.docView = null;\n  }\n  /**\n  This is true when the view has been\n  [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be\n  used anymore).\n  */\n  get isDestroyed() {\n    return this.docView == null;\n  }\n  /**\n  Used for testing.\n  */\n  dispatchEvent(event) {\n    return dispatchEvent(this, event);\n  }\n  /**\n  Dispatch a transaction. Will call\n  [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)\n  when given, and otherwise defaults to applying the transaction to\n  the current state and calling\n  [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.\n  This method is bound to the view instance, so that it can be\n  easily passed around.\n  */\n  dispatch(tr) {\n    let dispatchTransaction = this._props.dispatchTransaction;\n    if (dispatchTransaction) dispatchTransaction.call(this, tr);else this.updateState(this.state.apply(tr));\n  }\n  /**\n  @internal\n  */\n  domSelectionRange() {\n    return safari && this.root.nodeType === 11 && deepActiveElement(this.dom.ownerDocument) == this.dom ? safariShadowSelectionRange(this) : this.domSelection();\n  }\n  /**\n  @internal\n  */\n  domSelection() {\n    return this.root.getSelection();\n  }\n}\nfunction computeDocDeco(view) {\n  let attrs = Object.create(null);\n  attrs.class = \"ProseMirror\";\n  attrs.contenteditable = String(view.editable);\n  view.someProp(\"attributes\", value => {\n    if (typeof value == \"function\") value = value(view.state);\n    if (value) for (let attr in value) {\n      if (attr == \"class\") attrs.class += \" \" + value[attr];else if (attr == \"style\") attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\") attrs[attr] = String(value[attr]);\n    }\n  });\n  if (!attrs.translate) attrs.translate = \"no\";\n  return [Decoration.node(0, view.state.doc.content.size, attrs)];\n}\nfunction updateCursorWrapper(view) {\n  if (view.markCursor) {\n    let dom = document.createElement(\"img\");\n    dom.className = \"ProseMirror-separator\";\n    dom.setAttribute(\"mark-placeholder\", \"true\");\n    dom.setAttribute(\"alt\", \"\");\n    view.cursorWrapper = {\n      dom,\n      deco: Decoration.widget(view.state.selection.head, dom, {\n        raw: true,\n        marks: view.markCursor\n      })\n    };\n  } else {\n    view.cursorWrapper = null;\n  }\n}\nfunction getEditable(view) {\n  return !view.someProp(\"editable\", value => value(view.state) === false);\n}\nfunction selectionContextChanged(sel1, sel2) {\n  let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n  return sel1.$anchor.start(depth) != sel2.$anchor.start(depth);\n}\nfunction buildNodeViews(view) {\n  let result = Object.create(null);\n  function add(obj) {\n    for (let prop in obj) if (!Object.prototype.hasOwnProperty.call(result, prop)) result[prop] = obj[prop];\n  }\n  view.someProp(\"nodeViews\", add);\n  view.someProp(\"markViews\", add);\n  return result;\n}\nfunction changedNodeViews(a, b) {\n  let nA = 0,\n    nB = 0;\n  for (let prop in a) {\n    if (a[prop] != b[prop]) return true;\n    nA++;\n  }\n  for (let _ in b) nB++;\n  return nA != nB;\n}\nfunction checkStateComponent(plugin) {\n  if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction) throw new RangeError(\"Plugins passed directly to the view must not have a state component\");\n}\nexport { Decoration, DecorationSet, EditorView, __endComposition, __parseFromClipboard, __serializeForClipboard };","map":{"version":3,"names":["TextSelection","NodeSelection","AllSelection","Selection","DOMSerializer","Fragment","Mark","Slice","DOMParser","dropPoint","domIndex","node","index","previousSibling","parentNode","parent","assignedSlot","nodeType","host","reusedRange","textRange","from","to","range","document","createRange","setEnd","nodeValue","length","setStart","isEquivalentPosition","off","targetNode","targetOff","scanFor","atomElements","dir","nodeSize","hasBlockDesc","test","nodeName","contentEditable","childNodes","isOnEdge","offset","atStart","atEnd","dom","desc","cur","pmViewDesc","isBlock","contentDOM","selectionCollapsed","domSel","focusNode","focusOffset","anchorNode","anchorOffset","keyEvent","keyCode","key","event","createEvent","initEvent","code","deepActiveElement","doc","elt","activeElement","shadowRoot","caretFromPoint","x","y","caretPositionFromPoint","pos","offsetNode","_","caretRangeFromPoint","startContainer","startOffset","nav","navigator","agent","userAgent","ie_edge","exec","ie_upto10","ie_11up","ie","ie_version","documentMode","gecko","_chrome","chrome","chrome_version","safari","vendor","ios","maxTouchPoints","mac","platform","windows","android","webkit","documentElement","style","webkit_version","windowRect","left","right","clientWidth","top","bottom","clientHeight","getSide","value","side","clientRect","rect","getBoundingClientRect","scaleX","width","offsetWidth","scaleY","height","offsetHeight","scrollRectIntoView","view","startDOM","scrollThreshold","someProp","scrollMargin","ownerDocument","atTop","body","bounding","moveX","moveY","defaultView","scrollBy","startX","scrollLeft","startY","scrollTop","dX","dY","getComputedStyle","position","storeScrollPos","Math","max","refDOM","refTop","min","innerHeight","root","elementFromPoint","contains","localRect","stack","scrollStack","push","resetScrollPos","newRefTop","restoreScrollStack","dTop","i","preventScrollSupported","focusPreventScroll","setActive","focus","stored","preventScroll","undefined","findOffsetInNode","coords","closest","dxClosest","coordsClosest","rowBot","rowTop","firstBelow","coordsBelow","child","firstChild","childIndex","nextSibling","rects","getClientRects","dx","findOffsetInText","len","singleRect","inRect","targetKludge","posFromElement","bias","docView","posFromDOM","posFromCaret","outsideBlock","sawBlock","nearestDesc","posBefore","posAfter","isText","before","element","box","startI","floor","j","posAtCoords","caret","p","draggable","next","prev","lastChild","state","content","size","inside","posAtStart","border","nonZero","target","first","Array","prototype","find","call","BIDI","coordsAtPos","atom","domFromPos","supportEmptyRange","rectBefore","rectAfter","flattenV","takeSide","$dom","resolve","inlineContent","flattenH","after","ignoreForCoords","withFlushedState","f","viewState","active","updateState","endOfTextblockVertical","sel","selection","$pos","$from","$to","nearest","boxes","maybeRTL","endOfTextblockHorizontal","$head","isTextblock","parentOffset","domSelection","textContent","modify","oldNode","oldOff","domSelectionRange","oldBidiLevel","caretBidiLevel","parentDOM","depth","domAfterPos","newNode","newOff","result","collapse","extend","cachedState","cachedDir","cachedResult","endOfTextblock","NOT_DIRTY","CHILD_DIRTY","CONTENT_DIRTY","NODE_DIRTY","ViewDesc","constructor","children","dirty","matchesWidget","widget","matchesMark","mark","matchesNode","outerDeco","innerDeco","matchesHack","parseRule","stopEvent","destroy","posBeforeChild","posAtEnd","localPosFromDOM","domBefore","domAfter","compareDocumentPosition","search","onlyNodes","getDesc","nodeDOM","scan","descAt","end","curPos","TrailingHackViewDesc","WidgetViewDesc","enter","domAtom","parseRange","base","fromOffset","toOffset","childBase","emptyChildAt","RangeError","setSelection","anchor","head","force","anchorDOM","headDOM","getSelection","brKludge","domSelExtended","tmp","removeAllRanges","addRange","ignoreMutation","mutation","type","contentLost","markDirty","startInside","endInside","markParentsDirty","level","self","toDOM","spec","raw","wrap","createElement","appendChild","classList","add","eq","ignore","stop","ignoreSelection","CompositionViewDesc","textDOM","text","mut","oldValue","MarkViewDesc","create","inline","custom","nodeViews","name","renderSpec","reparseInView","attrs","contentElement","slice","copy","nodes","replaceNodes","NodeViewDesc","descObj","createTextNode","hasAttribute","applyOuterDeco","CustomNodeViewDesc","TextViewDesc","rule","whitespace","preserveWhitespace","getContent","empty","sameOuterDeco","isLeaf","updateChildren","composition","composing","localCompositionInfo","localComposition","compositionInChild","updater","ViewTreeUpdater","iterDeco","insideNode","marks","syncToMarks","childCount","none","placeWidget","compIndex","findNodeMatch","findIndexWithChild","updateNodeAt","updateNextNode","addNode","addTextblockHacks","destroyRest","changed","protectLocalComposition","renderDescs","iosHacks","textNode","nearbyTextNode","textPos","findTextInFragment","topNode","removeChild","input","compositionNodes","update","sameMarkup","updateInner","updateOuterDeco","needsWrap","oldDOM","patchOuterDeco","computeOuterDeco","selectNode","deselectNode","remove","removeAttribute","isAtom","docViewDesc","skip","pmIsDeco","inParent","trackWrites","n","cut","descs","written","childDOM","rm","insertBefore","OuterDecoLevel","Object","noDeco","val","isInline","class","outerDOM","prevComputed","curComputed","curDOM","deco","toLowerCase","patchAttributes","setAttribute","prevList","split","filter","Boolean","curList","indexOf","prop","m","removeProperty","cssText","a","b","lock","preMatch","destroyBetween","start","splice","keep","maxKeep","spanning","pop","found","isLocked","markDesc","targetDesc","matches","e","matched","has","domNode","get","nextDOM","updated","locked","recreateWrapper","wrapper","ch","requiresGeckoHackNode","addHackNode","className","alt","hack","frag","parentDesc","curDesc","descI","fI","Map","outer","set","reverse","compareSide","onWidget","onNode","locals","forChild","decoIndex","restNode","parentIndex","widgets","sort","cutAt","d","oldCSS","window","listStyle","childStart","str","lastIndexOf","replacement","selectionFromDOM","origin","inWidget","$anchor","nearestDescNode","isSelectable","selectionBetween","editorOwnsSelection","editable","hasFocus","hasSelection","selectionToDOM","syncNodeSelection","mouseDown","allowDefault","curSel","domObserver","currentSelection","delayedSelectionSync","setCurSelection","disconnectSelection","cursorWrapper","selectCursorWrapper","resetEditableFrom","resetEditableTo","brokenSelectBetweenUneditable","temporarilyEditableNear","resetEditable","visible","removeClassOnSelectionChange","connectSelection","setEditable","wasDraggable","removeEventListener","hideSelectionGuard","addEventListener","setTimeout","img","disabled","lastSelectedViewDesc","clearNodeSelection","between","hasFocusAndSelection","anchorInRightPlace","moveSelectionBlock","$side","$start","findFrom","apply","dispatch","tr","scrollIntoView","selectHorizontally","mods","textOffset","nodeBefore","nodeAfter","$newHead","nodePos","nodeLen","isIgnorable","skipIgnoredNodes","skipIgnoredNodesBefore","skipIgnoredNodesAfter","moveNode","moveOffset","isBlockNode","setSelFocus","textNodeAfter","textNodeBefore","findDirection","mid","abs","computed","direction","selectVertically","beyond","near","stopNativeHorizontalDelete","sameParent","nextNode","delete","switchEditable","safariDownArrowBug","getMods","ctrlKey","metaKey","altKey","shiftKey","captureKeyDown","serializeForClipboard","context","openStart","openEnd","defaultAttrs","serializer","fromSchema","schema","detachedDoc","serializeFragment","wrappers","wrapMap","JSON","stringify","textBetween","parseFromClipboard","html","plainText","$context","inCode","asText","replace","parsed","forEach","block","serializeNode","readHTML","restoreReplacedSpaces","contextNode","querySelector","sliceData","getAttribute","parser","parseSlice","ruleFromNode","inlineParents","addContext","closeSlice","maxOpen","normalizeSiblings","isolating","fragment","match","contentMatchAt","lastWrap","findWrapping","inLast","addToSibling","closeRight","wrapped","withWrappers","matchType","sibling","inner","replaceChild","append","fill","fillBefore","closeRange","thead","tbody","tfoot","caption","colgroup","col","td","th","_detachedDoc","implementation","createHTMLDocument","metas","firstTag","map","join","innerHTML","querySelectorAll","array","parse","hasRequiredAttrs","handlers","editHandlers","passiveHandlers","touchstart","touchmove","InputState","lastKeyCode","lastKeyCodeTime","lastClick","time","lastSelectionOrigin","lastSelectionTime","lastIOSEnter","lastIOSEnterFallbackTimeout","lastFocus","lastTouch","lastAndroidDelete","composingTimeout","compositionEndedAt","compositionID","compositionPendingChanges","domChangeCount","eventHandlers","initInput","handler","eventBelongsToView","runCustomHandler","passive","ensureListeners","setSelectionOrigin","Date","now","destroyInput","clearTimeout","currentHandlers","defaultPrevented","bubbles","dispatchEvent","keydown","_event","inOrNearComposition","forceFlush","preventDefault","keyup","keypress","charCode","String","fromCharCode","insertText","eventCoords","clientX","clientY","isNear","click","dy","runHandlerOnContext","propName","updateSelection","focused","setMeta","selectClickedLeaf","selectClickedNode","selectedNode","selectAt","handleSingleClick","handleDoubleClick","handleTripleClick","defaultTripleClick","button","forceDOMFlush","endComposition","selectNodeModifier","mousedown","flushed","done","MouseDown","mightDrag","startDoc","targetPos","nodeAt","selectable","addAttr","setUneditable","up","bind","move","updateAllowDefault","buttons","contextmenu","timeStamp","timeoutComposition","compositionstart","compositionupdate","flush","storedMarks","some","inclusive","markCursor","scheduleComposeEnd","compositionend","pendingRecords","Promise","then","delay","clearComposition","timestampFromCustomEvent","forceUpdate","flushingSoon","captureCopy","selectNodeContents","blur","brokenClipboardAPI","data","clipboardData","clearData","setData","deleteSelection","sliceSingleNode","capturePaste","plain","doPaste","preferPlain","singleNode","replaceSelectionWith","replaceSelection","getText","getData","uris","paste","Dragging","dragCopyModifier","dragstart","dataTransfer","effectAllowed","dragging","dragend","dragover","dragenter","drop","eventPos","$mouse","insertPos","mapping","isNode","beforeInsert","replaceRangeWith","replaceRange","maps","_from","_to","_newFrom","newTo","relatedTarget","clear","beforeinput","inputType","flushSoon","$cursor","compareObjs","WidgetType","noSpec","span","oldOffset","deleted","mapResult","Decoration","valid","other","InlineType","inclusiveStart","inclusiveEnd","is","NodeType","findIndex","DecorationSet","local","decorations","buildTree","predicate","findInner","childOff","options","mapInner","newLocal","mapped","onRemove","mapChildren","byPos","addInner","childNode","childOffset","baseOffset","takeSpansForNode","moveSpans","withoutNulls","concat","removeInner","removed","dec","localSet","DecorationGroup","removeOverlap","localsInner","members","mappedDecos","member","sorted","every","reduce","r","oldChildren","moved","oldStart","oldEnd","newStart","newEnd","dSize","mustRebuild","fromLocal","toLocal","maybeChild","mapAndGatherRemainingDecorations","built","spans","gather","hasNulls","localStart","subtree","working","insertAhead","viewDecorations","observeOptions","childList","characterData","characterDataOldValue","attributes","attributeOldValue","useCharData","SelectionState","DOMObserver","handleDOMChange","queue","observer","onCharData","suppressingSelectionUpdates","MutationObserver","mutations","removedNodes","prevValue","onSelectionChange","takeRecords","observe","take","disconnect","suppressSelectionUpdates","ignoreSelectionChange","ancestors","Set","container","newSel","typeOver","added","registerMutation","brs","readSel","scrollToSelection","checkCSS","attributeName","addedNodes","cssChecked","WeakMap","cssCheckWarned","whiteSpace","console","safariShadowSelectionRange","read","stopImmediatePropagation","getTargetRanges","execCommand","endContainer","endOffset","currentAnchor","domAtPos","parseBetween","from_","to_","topMatch","topOpen","findPositions","readDOMChange","$before","shared","sharedDepth","compare","preferredPos","preferredSide","change","findDiff","endA","endB","resolveSelection","resolveNoCache","$fromA","inlineChange","nextSel","looksLikeJoin","chFrom","chTo","markChange","marksAcross","isMarkChange","addMark","removeMark","ensureMarks","parsedSel","curMarks","prevMarks","removeFromSet","addToSet","old","$newStart","$newEnd","skipClosingAndOpening","$next","fromEnd","mayOpen","indexAfter","findDiffStart","findDiffEnd","adjust","isSurrogatePair","charCodeAt","__serializeForClipboard","__parseFromClipboard","__endComposition","EditorView","place","props","_root","mounted","prevDirectPlugins","pluginViews","_props","directPlugins","plugins","checkStateComponent","mount","getEditable","updateCursorWrapper","buildNodeViews","computeDocDeco","updatePluginViews","handleDOMEvents","prevProps","updateStateInner","setProps","_a","redraw","updateSel","pluginsChanged","changedNodeViews","scroll","updateDoc","oldScrollPos","overflowAnchor","forceSelUpdate","selectionContextChanged","chromeKludge","updateDraggedNode","destroyPluginViews","prevState","plugin","pluginView","movedPos","parentElement","cached","getPrototypeOf","updateRoot","posAtDOM","pasteHTML","ClipboardEvent","pasteText","isDestroyed","dispatchTransaction","contenteditable","attr","translate","sel1","sel2","obj","hasOwnProperty","nA","nB","filterTransaction","appendTransaction"],"sources":["/home/vinayak/Projects/websocket/ui/websocket_ui/node_modules/prosemirror-view/dist/index.js"],"sourcesContent":["import { TextSelection, NodeSelection, AllSelection, Selection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, Slice, DOMParser } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\n\nconst domIndex = function (node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n};\nconst parentNode = function (node) {\n    let parent = node.assignedSlot || node.parentNode;\n    return parent && parent.nodeType == 11 ? parent.host : parent;\n};\nlet reusedRange = null;\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nconst textRange = function (node, from, to) {\n    let range = reusedRange || (reusedRange = document.createRange());\n    range.setEnd(node, to == null ? node.nodeValue.length : to);\n    range.setStart(node, from || 0);\n    return range;\n};\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nconst isEquivalentPosition = function (node, off, targetNode, targetOff) {\n    return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1));\n};\nconst atomElements = /^(img|br|input|textarea|hr)$/i;\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : nodeSize(node))) {\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) ||\n                node.contentEditable == \"false\")\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? nodeSize(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction nodeSize(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isOnEdge(node, offset, parent) {\n    for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n        if (node == parent)\n            return true;\n        let index = domIndex(node);\n        node = node.parentNode;\n        if (!node)\n            return false;\n        atStart = atStart && index == 0;\n        atEnd = atEnd && index == nodeSize(node);\n    }\n}\nfunction hasBlockDesc(dom) {\n    let desc;\n    for (let cur = dom; cur; cur = cur.parentNode)\n        if (desc = cur.pmViewDesc)\n            break;\n    return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom);\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nconst selectionCollapsed = function (domSel) {\n    return domSel.focusNode && isEquivalentPosition(domSel.focusNode, domSel.focusOffset, domSel.anchorNode, domSel.anchorOffset);\n};\nfunction keyEvent(keyCode, key) {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"keydown\", true, true);\n    event.keyCode = keyCode;\n    event.key = event.code = key;\n    return event;\n}\nfunction deepActiveElement(doc) {\n    let elt = doc.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\nfunction caretFromPoint(doc, x, y) {\n    if (doc.caretPositionFromPoint) {\n        try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n            let pos = doc.caretPositionFromPoint(x, y);\n            if (pos)\n                return { node: pos.offsetNode, offset: pos.offset };\n        }\n        catch (_) { }\n    }\n    if (doc.caretRangeFromPoint) {\n        let range = doc.caretRangeFromPoint(x, y);\n        if (range)\n            return { node: range.startContainer, offset: range.startOffset };\n    }\n}\n\nconst nav = typeof navigator != \"undefined\" ? navigator : null;\nconst doc = typeof document != \"undefined\" ? document : null;\nconst agent = (nav && nav.userAgent) || \"\";\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst ie_version = ie_upto10 ? document.documentMode : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0;\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\ngecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1];\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nconst chrome = !!_chrome;\nconst chrome_version = _chrome ? +_chrome[1] : 0;\nconst safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n// Is true for both iOS and iPadOS for convenience\nconst ios = safari && (/Mobile\\/\\w+/.test(agent) || !!nav && nav.maxTouchPoints > 2);\nconst mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nconst windows = nav ? /Win/.test(nav.platform) : false;\nconst android = /Android \\d/.test(agent);\nconst webkit = !!doc && \"webkitFontSmoothing\" in doc.documentElement.style;\nconst webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;\n\nfunction windowRect(doc) {\n    return { left: 0, right: doc.documentElement.clientWidth,\n        top: 0, bottom: doc.documentElement.clientHeight };\n}\nfunction getSide(value, side) {\n    return typeof value == \"number\" ? value : value[side];\n}\nfunction clientRect(node) {\n    let rect = node.getBoundingClientRect();\n    // Adjust for elements with style \"transform: scale()\"\n    let scaleX = (rect.width / node.offsetWidth) || 1;\n    let scaleY = (rect.height / node.offsetHeight) || 1;\n    // Make sure scrollbar width isn't included in the rectangle\n    return { left: rect.left, right: rect.left + node.clientWidth * scaleX,\n        top: rect.top, bottom: rect.top + node.clientHeight * scaleY };\n}\nfunction scrollRectIntoView(view, rect, startDOM) {\n    let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5;\n    let doc = view.dom.ownerDocument;\n    for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n        if (!parent)\n            break;\n        if (parent.nodeType != 1)\n            continue;\n        let elt = parent;\n        let atTop = elt == doc.body;\n        let bounding = atTop ? windowRect(doc) : clientRect(elt);\n        let moveX = 0, moveY = 0;\n        if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n            moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"));\n        else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n            moveY = rect.bottom - rect.top > bounding.bottom - bounding.top\n                ? rect.top + getSide(scrollMargin, \"top\") - bounding.top\n                : rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\");\n        if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n            moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"));\n        else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n            moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\");\n        if (moveX || moveY) {\n            if (atTop) {\n                doc.defaultView.scrollBy(moveX, moveY);\n            }\n            else {\n                let startX = elt.scrollLeft, startY = elt.scrollTop;\n                if (moveY)\n                    elt.scrollTop += moveY;\n                if (moveX)\n                    elt.scrollLeft += moveX;\n                let dX = elt.scrollLeft - startX, dY = elt.scrollTop - startY;\n                rect = { left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY };\n            }\n        }\n        if (atTop || /^(fixed|sticky)$/.test(getComputedStyle(parent).position))\n            break;\n    }\n}\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n    let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top);\n    let refDOM, refTop;\n    for (let x = (rect.left + rect.right) / 2, y = startY + 1; y < Math.min(innerHeight, rect.bottom); y += 5) {\n        let dom = view.root.elementFromPoint(x, y);\n        if (!dom || dom == view.dom || !view.dom.contains(dom))\n            continue;\n        let localRect = dom.getBoundingClientRect();\n        if (localRect.top >= startY - 20) {\n            refDOM = dom;\n            refTop = localRect.top;\n            break;\n        }\n    }\n    return { refDOM: refDOM, refTop: refTop, stack: scrollStack(view.dom) };\n}\nfunction scrollStack(dom) {\n    let stack = [], doc = dom.ownerDocument;\n    for (let cur = dom; cur; cur = parentNode(cur)) {\n        stack.push({ dom: cur, top: cur.scrollTop, left: cur.scrollLeft });\n        if (dom == doc)\n            break;\n    }\n    return stack;\n}\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos({ refDOM, refTop, stack }) {\n    let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n    restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\nfunction restoreScrollStack(stack, dTop) {\n    for (let i = 0; i < stack.length; i++) {\n        let { dom, top, left } = stack[i];\n        if (dom.scrollTop != top + dTop)\n            dom.scrollTop = top + dTop;\n        if (dom.scrollLeft != left)\n            dom.scrollLeft = left;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stored = scrollStack(dom);\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        restoreScrollStack(stored, 0);\n    }\n}\nfunction findOffsetInNode(node, coords) {\n    let closest, dxClosest = 2e8, coordsClosest, offset = 0;\n    let rowBot = coords.top, rowTop = coords.top;\n    let firstBelow, coordsBelow;\n    for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n        let rects;\n        if (child.nodeType == 1)\n            rects = child.getClientRects();\n        else if (child.nodeType == 3)\n            rects = textRange(child).getClientRects();\n        else\n            continue;\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (rect.top <= rowBot && rect.bottom >= rowTop) {\n                rowBot = Math.max(rect.bottom, rowBot);\n                rowTop = Math.min(rect.top, rowTop);\n                let dx = rect.left > coords.left ? rect.left - coords.left\n                    : rect.right < coords.left ? coords.left - rect.right : 0;\n                if (dx < dxClosest) {\n                    closest = child;\n                    dxClosest = dx;\n                    coordsClosest = dx && closest.nodeType == 3 ? {\n                        left: rect.right < coords.left ? rect.right : rect.left,\n                        top: coords.top\n                    } : coords;\n                    if (child.nodeType == 1 && dx)\n                        offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0);\n                    continue;\n                }\n            }\n            else if (rect.top > coords.top && !firstBelow && rect.left <= coords.left && rect.right >= coords.left) {\n                firstBelow = child;\n                coordsBelow = { left: Math.max(rect.left, Math.min(rect.right, coords.left)), top: rect.top };\n            }\n            if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                coords.left >= rect.left && coords.top >= rect.bottom))\n                offset = childIndex + 1;\n        }\n    }\n    if (!closest && firstBelow) {\n        closest = firstBelow;\n        coordsClosest = coordsBelow;\n        dxClosest = 0;\n    }\n    if (closest && closest.nodeType == 3)\n        return findOffsetInText(closest, coordsClosest);\n    if (!closest || (dxClosest && closest.nodeType == 1))\n        return { node, offset };\n    return findOffsetInNode(closest, coordsClosest);\n}\nfunction findOffsetInText(node, coords) {\n    let len = node.nodeValue.length;\n    let range = document.createRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rect = singleRect(range, 1);\n        if (rect.top == rect.bottom)\n            continue;\n        if (inRect(coords, rect))\n            return { node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0) };\n    }\n    return { node, offset: 0 };\n}\nfunction inRect(coords, rect) {\n    return coords.left >= rect.left - 1 && coords.left <= rect.right + 1 &&\n        coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1;\n}\nfunction targetKludge(dom, coords) {\n    let parent = dom.parentNode;\n    if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n        return parent;\n    return dom;\n}\nfunction posFromElement(view, elt, coords) {\n    let { node, offset } = findOffsetInNode(elt, coords), bias = -1;\n    if (node.nodeType == 1 && !node.firstChild) {\n        let rect = node.getBoundingClientRect();\n        bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n    }\n    return view.docView.posFromDOM(node, offset, bias);\n}\nfunction posFromCaret(view, node, offset, coords) {\n    // Browser (in caretPosition/RangeFromPoint) will agressively\n    // normalize towards nearby inline nodes. Since we are interested in\n    // positions between block nodes too, we first walk up the hierarchy\n    // of nodes to see if there are block nodes that the coordinates\n    // fall outside of. If so, we take the position before/after that\n    // block. If not, we call `posFromDOM` on the raw node/offset.\n    let outsideBlock = -1;\n    for (let cur = node, sawBlock = false;;) {\n        if (cur == view.dom)\n            break;\n        let desc = view.docView.nearestDesc(cur, true);\n        if (!desc)\n            return null;\n        if (desc.dom.nodeType == 1 && (desc.node.isBlock && desc.parent && !sawBlock || !desc.contentDOM)) {\n            let rect = desc.dom.getBoundingClientRect();\n            if (desc.node.isBlock && desc.parent && !sawBlock) {\n                sawBlock = true;\n                if (rect.left > coords.left || rect.top > coords.top)\n                    outsideBlock = desc.posBefore;\n                else if (rect.right < coords.left || rect.bottom < coords.top)\n                    outsideBlock = desc.posAfter;\n            }\n            if (!desc.contentDOM && outsideBlock < 0 && !desc.node.isText) {\n                // If we are inside a leaf, return the side of the leaf closer to the coords\n                let before = desc.node.isBlock ? coords.top < (rect.top + rect.bottom) / 2\n                    : coords.left < (rect.left + rect.right) / 2;\n                return before ? desc.posBefore : desc.posAfter;\n            }\n        }\n        cur = desc.dom.parentNode;\n    }\n    return outsideBlock > -1 ? outsideBlock : view.docView.posFromDOM(node, offset, -1);\n}\nfunction elementFromPoint(element, coords, box) {\n    let len = element.childNodes.length;\n    if (len && box.top < box.bottom) {\n        for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n            let child = element.childNodes[i];\n            if (child.nodeType == 1) {\n                let rects = child.getClientRects();\n                for (let j = 0; j < rects.length; j++) {\n                    let rect = rects[j];\n                    if (inRect(coords, rect))\n                        return elementFromPoint(child, coords, rect);\n                }\n            }\n            if ((i = (i + 1) % len) == startI)\n                break;\n        }\n    }\n    return element;\n}\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n    let doc = view.dom.ownerDocument, node, offset = 0;\n    let caret = caretFromPoint(doc, coords.left, coords.top);\n    if (caret)\n        ({ node, offset } = caret);\n    let elt = (view.root.elementFromPoint ? view.root : doc)\n        .elementFromPoint(coords.left, coords.top);\n    let pos;\n    if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n        let box = view.dom.getBoundingClientRect();\n        if (!inRect(coords, box))\n            return null;\n        elt = elementFromPoint(view.dom, coords, box);\n        if (!elt)\n            return null;\n    }\n    // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n    if (safari) {\n        for (let p = elt; node && p; p = parentNode(p))\n            if (p.draggable)\n                node = undefined;\n    }\n    elt = targetKludge(elt, coords);\n    if (node) {\n        if (gecko && node.nodeType == 1) {\n            // Firefox will sometimes return offsets into <input> nodes, which\n            // have no actual children, from caretPositionFromPoint (#953)\n            offset = Math.min(offset, node.childNodes.length);\n            // It'll also move the returned position before image nodes,\n            // even if those are behind it.\n            if (offset < node.childNodes.length) {\n                let next = node.childNodes[offset], box;\n                if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n                    box.bottom > coords.top)\n                    offset++;\n            }\n        }\n        let prev;\n        // When clicking above the right side of an uneditable node, Chrome will report a cursor position after that node.\n        if (webkit && offset && node.nodeType == 1 && (prev = node.childNodes[offset - 1]).nodeType == 1 &&\n            prev.contentEditable == \"false\" && prev.getBoundingClientRect().top >= coords.top)\n            offset--;\n        // Suspiciously specific kludge to work around caret*FromPoint\n        // never returning a position at the end of the document\n        if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n            coords.top > node.lastChild.getBoundingClientRect().bottom)\n            pos = view.state.doc.content.size;\n        // Ignore positions directly after a BR, since caret*FromPoint\n        // 'round up' positions that would be more accurately placed\n        // before the BR node.\n        else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n            pos = posFromCaret(view, node, offset, coords);\n    }\n    if (pos == null)\n        pos = posFromElement(view, elt, coords);\n    let desc = view.docView.nearestDesc(elt, true);\n    return { pos, inside: desc ? desc.posAtStart - desc.border : -1 };\n}\nfunction nonZero(rect) {\n    return rect.top < rect.bottom || rect.left < rect.right;\n}\nfunction singleRect(target, bias) {\n    let rects = target.getClientRects();\n    if (rects.length) {\n        let first = rects[bias < 0 ? 0 : rects.length - 1];\n        if (nonZero(first))\n            return first;\n    }\n    return Array.prototype.find.call(rects, nonZero) || target.getBoundingClientRect();\n}\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n    let { node, offset, atom } = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n    let supportEmptyRange = webkit || gecko;\n    if (node.nodeType == 3) {\n        // These browsers support querying empty text ranges. Prefer that in\n        // bidi context or when at the end of a node.\n        if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n            let rect = singleRect(textRange(node, offset, offset), side);\n            // Firefox returns bad results (the position before the space)\n            // when querying a position directly after line-broken\n            // whitespace. Detect this situation and and kludge around it\n            if (gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n                let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n                if (rectBefore.top == rect.top) {\n                    let rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n                    if (rectAfter.top != rect.top)\n                        return flattenV(rectAfter, rectAfter.left < rectBefore.left);\n                }\n            }\n            return rect;\n        }\n        else {\n            let from = offset, to = offset, takeSide = side < 0 ? 1 : -1;\n            if (side < 0 && !offset) {\n                to++;\n                takeSide = -1;\n            }\n            else if (side >= 0 && offset == node.nodeValue.length) {\n                from--;\n                takeSide = 1;\n            }\n            else if (side < 0) {\n                from--;\n            }\n            else {\n                to++;\n            }\n            return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0);\n        }\n    }\n    let $dom = view.state.doc.resolve(pos - (atom || 0));\n    // Return a horizontal line in block context\n    if (!$dom.parent.inlineContent) {\n        if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n            let before = node.childNodes[offset - 1];\n            if (before.nodeType == 1)\n                return flattenH(before.getBoundingClientRect(), false);\n        }\n        if (atom == null && offset < nodeSize(node)) {\n            let after = node.childNodes[offset];\n            if (after.nodeType == 1)\n                return flattenH(after.getBoundingClientRect(), true);\n        }\n        return flattenH(node.getBoundingClientRect(), side >= 0);\n    }\n    // Inline, not in text node (this is not Bidi-safe)\n    if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n        let before = node.childNodes[offset - 1];\n        let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n            // BR nodes tend to only return the rectangle before them.\n            // Only use them if they are the last element in their parent\n            : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null;\n        if (target)\n            return flattenV(singleRect(target, 1), false);\n    }\n    if (atom == null && offset < nodeSize(node)) {\n        let after = node.childNodes[offset];\n        while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords)\n            after = after.nextSibling;\n        let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n            : after.nodeType == 1 ? after : null;\n        if (target)\n            return flattenV(singleRect(target, -1), true);\n    }\n    // All else failed, just try to get a rectangle for the target node\n    return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0);\n}\nfunction flattenV(rect, left) {\n    if (rect.width == 0)\n        return rect;\n    let x = left ? rect.left : rect.right;\n    return { top: rect.top, bottom: rect.bottom, left: x, right: x };\n}\nfunction flattenH(rect, top) {\n    if (rect.height == 0)\n        return rect;\n    let y = top ? rect.top : rect.bottom;\n    return { top: y, bottom: y, left: rect.left, right: rect.right };\n}\nfunction withFlushedState(view, state, f) {\n    let viewState = view.state, active = view.root.activeElement;\n    if (viewState != state)\n        view.updateState(state);\n    if (active != view.dom)\n        view.focus();\n    try {\n        return f();\n    }\n    finally {\n        if (viewState != state)\n            view.updateState(viewState);\n        if (active != view.dom && active)\n            active.focus();\n    }\n}\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n    let sel = state.selection;\n    let $pos = dir == \"up\" ? sel.$from : sel.$to;\n    return withFlushedState(view, state, () => {\n        let { node: dom } = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n        for (;;) {\n            let nearest = view.docView.nearestDesc(dom, true);\n            if (!nearest)\n                break;\n            if (nearest.node.isBlock) {\n                dom = nearest.contentDOM || nearest.dom;\n                break;\n            }\n            dom = nearest.dom.parentNode;\n        }\n        let coords = coordsAtPos(view, $pos.pos, 1);\n        for (let child = dom.firstChild; child; child = child.nextSibling) {\n            let boxes;\n            if (child.nodeType == 1)\n                boxes = child.getClientRects();\n            else if (child.nodeType == 3)\n                boxes = textRange(child, 0, child.nodeValue.length).getClientRects();\n            else\n                continue;\n            for (let i = 0; i < boxes.length; i++) {\n                let box = boxes[i];\n                if (box.bottom > box.top + 1 &&\n                    (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n                        : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n                    return false;\n            }\n        }\n        return true;\n    });\n}\nconst maybeRTL = /[\\u0590-\\u08ac]/;\nfunction endOfTextblockHorizontal(view, state, dir) {\n    let { $head } = state.selection;\n    if (!$head.parent.isTextblock)\n        return false;\n    let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size;\n    let sel = view.domSelection();\n    // If the textblock is all LTR, or the browser doesn't support\n    // Selection.modify (Edge), fall back to a primitive approach\n    if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n        return dir == \"left\" || dir == \"backward\" ? atStart : atEnd;\n    return withFlushedState(view, state, () => {\n        // This is a huge hack, but appears to be the best we can\n        // currently do: use `Selection.modify` to move the selection by\n        // one character, and see if that moves the cursor out of the\n        // textblock (or doesn't move it at all, when at the start/end of\n        // the document).\n        let { focusNode: oldNode, focusOffset: oldOff, anchorNode, anchorOffset } = view.domSelectionRange();\n        let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n        ;\n        sel.modify(\"move\", dir, \"character\");\n        let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n        let { focusNode: newNode, focusOffset: newOff } = view.domSelectionRange();\n        let result = newNode && !parentDOM.contains(newNode.nodeType == 1 ? newNode : newNode.parentNode) ||\n            (oldNode == newNode && oldOff == newOff);\n        // Restore the previous selection\n        try {\n            sel.collapse(anchorNode, anchorOffset);\n            if (oldNode && (oldNode != anchorNode || oldOff != anchorOffset) && sel.extend)\n                sel.extend(oldNode, oldOff);\n        }\n        catch (_) { }\n        if (oldBidiLevel != null)\n            sel.caretBidiLevel = oldBidiLevel;\n        return result;\n    });\n}\nlet cachedState = null;\nlet cachedDir = null;\nlet cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n    if (cachedState == state && cachedDir == dir)\n        return cachedResult;\n    cachedState = state;\n    cachedDir = dir;\n    return cachedResult = dir == \"up\" || dir == \"down\"\n        ? endOfTextblockVertical(view, state, dir)\n        : endOfTextblockHorizontal(view, state, dir);\n}\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3;\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n    constructor(parent, children, dom, \n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    contentDOM) {\n        this.parent = parent;\n        this.children = children;\n        this.dom = dom;\n        this.contentDOM = contentDOM;\n        this.dirty = NOT_DIRTY;\n        // An expando property on the DOM node provides a link back to its\n        // description.\n        dom.pmViewDesc = this;\n    }\n    // Used to check whether a given description corresponds to a\n    // widget/mark/node.\n    matchesWidget(widget) { return false; }\n    matchesMark(mark) { return false; }\n    matchesNode(node, outerDeco, innerDeco) { return false; }\n    matchesHack(nodeName) { return false; }\n    // When parsing in-editor content (in domchange.js), we allow\n    // descriptions to determine the parse rules that should be used to\n    // parse them.\n    parseRule() { return null; }\n    // Used by the editor's event handler to ignore events that come\n    // from certain descs.\n    stopEvent(event) { return false; }\n    // The size of the content represented by this desc.\n    get size() {\n        let size = 0;\n        for (let i = 0; i < this.children.length; i++)\n            size += this.children[i].size;\n        return size;\n    }\n    // For block nodes, this represents the space taken up by their\n    // start/end tokens.\n    get border() { return 0; }\n    destroy() {\n        this.parent = undefined;\n        if (this.dom.pmViewDesc == this)\n            this.dom.pmViewDesc = undefined;\n        for (let i = 0; i < this.children.length; i++)\n            this.children[i].destroy();\n    }\n    posBeforeChild(child) {\n        for (let i = 0, pos = this.posAtStart;; i++) {\n            let cur = this.children[i];\n            if (cur == child)\n                return pos;\n            pos += cur.size;\n        }\n    }\n    get posBefore() {\n        return this.parent.posBeforeChild(this);\n    }\n    get posAtStart() {\n        return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;\n    }\n    get posAfter() {\n        return this.posBefore + this.size;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.size - 2 * this.border;\n    }\n    localPosFromDOM(dom, offset, bias) {\n        // If the DOM position is in the content, use the child desc after\n        // it to figure out a position.\n        if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n            if (bias < 0) {\n                let domBefore, desc;\n                if (dom == this.contentDOM) {\n                    domBefore = dom.childNodes[offset - 1];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domBefore = dom.previousSibling;\n                }\n                while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this))\n                    domBefore = domBefore.previousSibling;\n                return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart;\n            }\n            else {\n                let domAfter, desc;\n                if (dom == this.contentDOM) {\n                    domAfter = dom.childNodes[offset];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domAfter = dom.nextSibling;\n                }\n                while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this))\n                    domAfter = domAfter.nextSibling;\n                return domAfter ? this.posBeforeChild(desc) : this.posAtEnd;\n            }\n        }\n        // Otherwise, use various heuristics, falling back on the bias\n        // parameter, to determine whether to return the position at the\n        // start or at the end of this view desc.\n        let atEnd;\n        if (dom == this.dom && this.contentDOM) {\n            atEnd = offset > domIndex(this.contentDOM);\n        }\n        else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n            atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n        }\n        else if (this.dom.firstChild) {\n            if (offset == 0)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = false;\n                        break;\n                    }\n                    if (search.previousSibling)\n                        break;\n                }\n            if (atEnd == null && offset == dom.childNodes.length)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = true;\n                        break;\n                    }\n                    if (search.nextSibling)\n                        break;\n                }\n        }\n        return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart;\n    }\n    nearestDesc(dom, onlyNodes = false) {\n        for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n            let desc = this.getDesc(cur), nodeDOM;\n            if (desc && (!onlyNodes || desc.node)) {\n                // If dom is outside of this desc's nodeDOM, don't count it.\n                if (first && (nodeDOM = desc.nodeDOM) &&\n                    !(nodeDOM.nodeType == 1 ? nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : nodeDOM == dom))\n                    first = false;\n                else\n                    return desc;\n            }\n        }\n    }\n    getDesc(dom) {\n        let desc = dom.pmViewDesc;\n        for (let cur = desc; cur; cur = cur.parent)\n            if (cur == this)\n                return desc;\n    }\n    posFromDOM(dom, offset, bias) {\n        for (let scan = dom; scan; scan = scan.parentNode) {\n            let desc = this.getDesc(scan);\n            if (desc)\n                return desc.localPosFromDOM(dom, offset, bias);\n        }\n        return -1;\n    }\n    // Find the desc for the node after the given pos, if any. (When a\n    // parent node overrode rendering, there might not be one.)\n    descAt(pos) {\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == pos && end != offset) {\n                while (!child.border && child.children.length)\n                    child = child.children[0];\n                return child;\n            }\n            if (pos < end)\n                return child.descAt(pos - offset - child.border);\n            offset = end;\n        }\n    }\n    domFromPos(pos, side) {\n        if (!this.contentDOM)\n            return { node: this.dom, offset: 0, atom: pos + 1 };\n        // First find the position in the child array\n        let i = 0, offset = 0;\n        for (let curPos = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = curPos + child.size;\n            if (end > pos || child instanceof TrailingHackViewDesc) {\n                offset = pos - curPos;\n                break;\n            }\n            curPos = end;\n        }\n        // If this points into the middle of a child, call through\n        if (offset)\n            return this.children[i].domFromPos(offset - this.children[i].border, side);\n        // Go back if there were any zero-length widgets with side >= 0 before this point\n        for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.side >= 0; i--) { }\n        // Scan towards the first useable node\n        if (side <= 0) {\n            let prev, enter = true;\n            for (;; i--, enter = false) {\n                prev = i ? this.children[i - 1] : null;\n                if (!prev || prev.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (prev && side && enter && !prev.border && !prev.domAtom)\n                return prev.domFromPos(prev.size, side);\n            return { node: this.contentDOM, offset: prev ? domIndex(prev.dom) + 1 : 0 };\n        }\n        else {\n            let next, enter = true;\n            for (;; i++, enter = false) {\n                next = i < this.children.length ? this.children[i] : null;\n                if (!next || next.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (next && enter && !next.border && !next.domAtom)\n                return next.domFromPos(0, side);\n            return { node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length };\n        }\n    }\n    // Used to find a DOM range in a single parent for a given changed\n    // range.\n    parseRange(from, to, base = 0) {\n        if (this.children.length == 0)\n            return { node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };\n        let fromOffset = -1, toOffset = -1;\n        for (let offset = base, i = 0;; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (fromOffset == -1 && from <= end) {\n                let childBase = offset + child.border;\n                // FIXME maybe descend mark views to parse a narrower range?\n                if (from >= childBase && to <= end - child.border && child.node &&\n                    child.contentDOM && this.contentDOM.contains(child.contentDOM))\n                    return child.parseRange(from, to, childBase);\n                from = offset;\n                for (let j = i; j > 0; j--) {\n                    let prev = this.children[j - 1];\n                    if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n                        fromOffset = domIndex(prev.dom) + 1;\n                        break;\n                    }\n                    from -= prev.size;\n                }\n                if (fromOffset == -1)\n                    fromOffset = 0;\n            }\n            if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n                to = end;\n                for (let j = i + 1; j < this.children.length; j++) {\n                    let next = this.children[j];\n                    if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n                        toOffset = domIndex(next.dom);\n                        break;\n                    }\n                    to += next.size;\n                }\n                if (toOffset == -1)\n                    toOffset = this.contentDOM.childNodes.length;\n                break;\n            }\n            offset = end;\n        }\n        return { node: this.contentDOM, from, to, fromOffset, toOffset };\n    }\n    emptyChildAt(side) {\n        if (this.border || !this.contentDOM || !this.children.length)\n            return false;\n        let child = this.children[side < 0 ? 0 : this.children.length - 1];\n        return child.size == 0 || child.emptyChildAt(side);\n    }\n    domAfterPos(pos) {\n        let { node, offset } = this.domFromPos(pos, 0);\n        if (node.nodeType != 1 || offset == node.childNodes.length)\n            throw new RangeError(\"No node after pos \" + pos);\n        return node.childNodes[offset];\n    }\n    // View descs are responsible for setting any selection that falls\n    // entirely inside of them, so that custom implementations can do\n    // custom things with the selection. Note that this falls apart when\n    // a selection starts in such a node and ends in another, in which\n    // case we just use whatever domFromPos produces as a best effort.\n    setSelection(anchor, head, root, force = false) {\n        // If the selection falls entirely in a child, give it to that child\n        let from = Math.min(anchor, head), to = Math.max(anchor, head);\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (from > offset && to < end)\n                return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force);\n            offset = end;\n        }\n        let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n        let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n        let domSel = root.getSelection();\n        let brKludge = false;\n        // On Firefox, using Selection.collapse to put the cursor after a\n        // BR node for some reason doesn't always work (#1073). On Safari,\n        // the cursor sometimes inexplicable visually lags behind its\n        // reported position in such situations (#1092).\n        if ((gecko || safari) && anchor == head) {\n            let { node, offset } = anchorDOM;\n            if (node.nodeType == 3) {\n                brKludge = !!(offset && node.nodeValue[offset - 1] == \"\\n\");\n                // Issue #1128\n                if (brKludge && offset == node.nodeValue.length) {\n                    for (let scan = node, after; scan; scan = scan.parentNode) {\n                        if (after = scan.nextSibling) {\n                            if (after.nodeName == \"BR\")\n                                anchorDOM = headDOM = { node: after.parentNode, offset: domIndex(after) + 1 };\n                            break;\n                        }\n                        let desc = scan.pmViewDesc;\n                        if (desc && desc.node && desc.node.isBlock)\n                            break;\n                    }\n                }\n            }\n            else {\n                let prev = node.childNodes[offset - 1];\n                brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n            }\n        }\n        // Firefox can act strangely when the selection is in front of an\n        // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n        if (gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n            let after = domSel.focusNode.childNodes[domSel.focusOffset];\n            if (after && after.contentEditable == \"false\")\n                force = true;\n        }\n        if (!(force || brKludge && safari) &&\n            isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n            isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n            return;\n        // Selection.extend can be used to create an 'inverted' selection\n        // (one where the focus is before the anchor), but not all\n        // browsers support it yet.\n        let domSelExtended = false;\n        if ((domSel.extend || anchor == head) && !brKludge) {\n            domSel.collapse(anchorDOM.node, anchorDOM.offset);\n            try {\n                if (anchor != head)\n                    domSel.extend(headDOM.node, headDOM.offset);\n                domSelExtended = true;\n            }\n            catch (_) {\n                // In some cases with Chrome the selection is empty after calling\n                // collapse, even when it should be valid. This appears to be a bug, but\n                // it is difficult to isolate. If this happens fallback to the old path\n                // without using extend.\n                // Similarly, this could crash on Safari if the editor is hidden, and\n                // there was no selection.\n            }\n        }\n        if (!domSelExtended) {\n            if (anchor > head) {\n                let tmp = anchorDOM;\n                anchorDOM = headDOM;\n                headDOM = tmp;\n            }\n            let range = document.createRange();\n            range.setEnd(headDOM.node, headDOM.offset);\n            range.setStart(anchorDOM.node, anchorDOM.offset);\n            domSel.removeAllRanges();\n            domSel.addRange(range);\n        }\n    }\n    ignoreMutation(mutation) {\n        return !this.contentDOM && mutation.type != \"selection\";\n    }\n    get contentLost() {\n        return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);\n    }\n    // Remove a subtree of the element tree that has been touched\n    // by a DOM change, so that the next update will redraw it.\n    markDirty(from, to) {\n        for (let offset = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n                let startInside = offset + child.border, endInside = end - child.border;\n                if (from >= startInside && to <= endInside) {\n                    this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n                    if (from == startInside && to == endInside &&\n                        (child.contentLost || child.dom.parentNode != this.contentDOM))\n                        child.dirty = NODE_DIRTY;\n                    else\n                        child.markDirty(from - startInside, to - startInside);\n                    return;\n                }\n                else {\n                    child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length\n                        ? CONTENT_DIRTY : NODE_DIRTY;\n                }\n            }\n            offset = end;\n        }\n        this.dirty = CONTENT_DIRTY;\n    }\n    markParentsDirty() {\n        let level = 1;\n        for (let node = this.parent; node; node = node.parent, level++) {\n            let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n            if (node.dirty < dirty)\n                node.dirty = dirty;\n        }\n    }\n    get domAtom() { return false; }\n    get ignoreForCoords() { return false; }\n}\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n    constructor(parent, widget, view, pos) {\n        let self, dom = widget.type.toDOM;\n        if (typeof dom == \"function\")\n            dom = dom(view, () => {\n                if (!self)\n                    return pos;\n                if (self.parent)\n                    return self.parent.posBeforeChild(self);\n            });\n        if (!widget.type.spec.raw) {\n            if (dom.nodeType != 1) {\n                let wrap = document.createElement(\"span\");\n                wrap.appendChild(dom);\n                dom = wrap;\n            }\n            dom.contentEditable = \"false\";\n            dom.classList.add(\"ProseMirror-widget\");\n        }\n        super(parent, [], dom, null);\n        this.widget = widget;\n        this.widget = widget;\n        self = this;\n    }\n    matchesWidget(widget) {\n        return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type);\n    }\n    parseRule() { return { ignore: true }; }\n    stopEvent(event) {\n        let stop = this.widget.spec.stopEvent;\n        return stop ? stop(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"selection\" || this.widget.spec.ignoreSelection;\n    }\n    destroy() {\n        this.widget.type.destroy(this.dom);\n        super.destroy();\n    }\n    get domAtom() { return true; }\n    get side() { return this.widget.type.side; }\n}\nclass CompositionViewDesc extends ViewDesc {\n    constructor(parent, dom, textDOM, text) {\n        super(parent, [], dom, null);\n        this.textDOM = textDOM;\n        this.text = text;\n    }\n    get size() { return this.text.length; }\n    localPosFromDOM(dom, offset) {\n        if (dom != this.textDOM)\n            return this.posAtStart + (offset ? this.size : 0);\n        return this.posAtStart + offset;\n    }\n    domFromPos(pos) {\n        return { node: this.textDOM, offset: pos };\n    }\n    ignoreMutation(mut) {\n        return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue;\n    }\n}\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n    constructor(parent, mark, dom, contentDOM) {\n        super(parent, [], dom, contentDOM);\n        this.mark = mark;\n    }\n    static create(parent, mark, inline, view) {\n        let custom = view.nodeViews[mark.type.name];\n        let spec = custom && custom(mark, view, inline);\n        if (!spec || !spec.dom)\n            spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline));\n        return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom);\n    }\n    parseRule() {\n        if ((this.dirty & NODE_DIRTY) || this.mark.type.spec.reparseInView)\n            return null;\n        return { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM };\n    }\n    matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark); }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        // Move dirty info to nearest node view\n        if (this.dirty != NOT_DIRTY) {\n            let parent = this.parent;\n            while (!parent.node)\n                parent = parent.parent;\n            if (parent.dirty < this.dirty)\n                parent.dirty = this.dirty;\n            this.dirty = NOT_DIRTY;\n        }\n    }\n    slice(from, to, view) {\n        let copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n        let nodes = this.children, size = this.size;\n        if (to < size)\n            nodes = replaceNodes(nodes, to, size, view);\n        if (from > 0)\n            nodes = replaceNodes(nodes, 0, from, view);\n        for (let i = 0; i < nodes.length; i++)\n            nodes[i].parent = copy;\n        copy.children = nodes;\n        return copy;\n    }\n}\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n        super(parent, [], dom, contentDOM);\n        this.node = node;\n        this.outerDeco = outerDeco;\n        this.innerDeco = innerDeco;\n        this.nodeDOM = nodeDOM;\n    }\n    // By default, a node is rendered using the `toDOM` method from the\n    // node type spec. But client code can use the `nodeViews` spec to\n    // supply a custom node view, which can influence various aspects of\n    // the way the node works.\n    //\n    // (Using subclassing for this was intentionally decided against,\n    // since it'd require exposing a whole slew of finicky\n    // implementation details to the user code that they probably will\n    // never need.)\n    static create(parent, node, outerDeco, innerDeco, view, pos) {\n        let custom = view.nodeViews[node.type.name], descObj;\n        let spec = custom && custom(node, view, () => {\n            // (This is a function that allows the custom view to find its\n            // own position)\n            if (!descObj)\n                return pos;\n            if (descObj.parent)\n                return descObj.parent.posBeforeChild(descObj);\n        }, outerDeco, innerDeco);\n        let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM;\n        if (node.isText) {\n            if (!dom)\n                dom = document.createTextNode(node.text);\n            else if (dom.nodeType != 3)\n                throw new RangeError(\"Text must be rendered as a DOM text node\");\n        }\n        else if (!dom) {\n            ({ dom, contentDOM } = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)));\n        }\n        if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n            if (!dom.hasAttribute(\"contenteditable\"))\n                dom.contentEditable = \"false\";\n            if (node.type.spec.draggable)\n                dom.draggable = true;\n        }\n        let nodeDOM = dom;\n        dom = applyOuterDeco(dom, outerDeco, node);\n        if (spec)\n            return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, spec, view, pos + 1);\n        else if (node.isText)\n            return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view);\n        else\n            return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, view, pos + 1);\n    }\n    parseRule() {\n        // Experimental kludge to allow opt-in re-parsing of nodes\n        if (this.node.type.spec.reparseInView)\n            return null;\n        // FIXME the assumption that this can always return the current\n        // attrs means that if the user somehow manages to change the\n        // attrs in the dom, that won't be picked up. Not entirely sure\n        // whether this is a problem\n        let rule = { node: this.node.type.name, attrs: this.node.attrs };\n        if (this.node.type.whitespace == \"pre\")\n            rule.preserveWhitespace = \"full\";\n        if (!this.contentDOM) {\n            rule.getContent = () => this.node.content;\n        }\n        else if (!this.contentLost) {\n            rule.contentElement = this.contentDOM;\n        }\n        else {\n            // Chrome likes to randomly recreate parent nodes when\n            // backspacing things. When that happens, this tries to find the\n            // new parent.\n            for (let i = this.children.length - 1; i >= 0; i--) {\n                let child = this.children[i];\n                if (this.dom.contains(child.dom.parentNode)) {\n                    rule.contentElement = child.dom.parentNode;\n                    break;\n                }\n            }\n            if (!rule.contentElement)\n                rule.getContent = () => Fragment.empty;\n        }\n        return rule;\n    }\n    matchesNode(node, outerDeco, innerDeco) {\n        return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n            sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco);\n    }\n    get size() { return this.node.nodeSize; }\n    get border() { return this.node.isLeaf ? 0 : 1; }\n    // Syncs `this.children` to match `this.node.content` and the local\n    // decorations, possibly introducing nesting for marks. Then, in a\n    // separate step, syncs the DOM inside `this.contentDOM` to\n    // `this.children`.\n    updateChildren(view, pos) {\n        let inline = this.node.inlineContent, off = pos;\n        let composition = view.composing ? this.localCompositionInfo(view, pos) : null;\n        let localComposition = composition && composition.pos > -1 ? composition : null;\n        let compositionInChild = composition && composition.pos < 0;\n        let updater = new ViewTreeUpdater(this, localComposition && localComposition.node, view);\n        iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n            if (widget.spec.marks)\n                updater.syncToMarks(widget.spec.marks, inline, view);\n            else if (widget.type.side >= 0 && !insideNode)\n                updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view);\n            // If the next node is a desc matching this widget, reuse it,\n            // otherwise insert the widget as a new view desc.\n            updater.placeWidget(widget, view, off);\n        }, (child, outerDeco, innerDeco, i) => {\n            // Make sure the wrapping mark descs match the node's marks.\n            updater.syncToMarks(child.marks, inline, view);\n            // Try several strategies for drawing this node\n            let compIndex;\n            if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ;\n            else if (compositionInChild && view.state.selection.from > off &&\n                view.state.selection.to < off + child.nodeSize &&\n                (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ;\n            else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i, off)) ;\n            else {\n                // Add it as a new view\n                updater.addNode(child, outerDeco, innerDeco, view, off);\n            }\n            off += child.nodeSize;\n        });\n        // Drop all remaining descs after the current position.\n        updater.syncToMarks([], inline, view);\n        if (this.node.isTextblock)\n            updater.addTextblockHacks();\n        updater.destroyRest();\n        // Sync the DOM if anything changed\n        if (updater.changed || this.dirty == CONTENT_DIRTY) {\n            // May have to protect focused DOM from being changed if a composition is active\n            if (localComposition)\n                this.protectLocalComposition(view, localComposition);\n            renderDescs(this.contentDOM, this.children, view);\n            if (ios)\n                iosHacks(this.dom);\n        }\n    }\n    localCompositionInfo(view, pos) {\n        // Only do something if both the selection and a focused text node\n        // are inside of this node\n        let { from, to } = view.state.selection;\n        if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size)\n            return null;\n        let sel = view.domSelectionRange();\n        let textNode = nearbyTextNode(sel.focusNode, sel.focusOffset);\n        if (!textNode || !this.dom.contains(textNode.parentNode))\n            return null;\n        if (this.node.inlineContent) {\n            // Find the text in the focused node in the node, stop if it's not\n            // there (may have been modified through other means, in which\n            // case it should overwritten)\n            let text = textNode.nodeValue;\n            let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n            return textPos < 0 ? null : { node: textNode, pos: textPos, text };\n        }\n        else {\n            return { node: textNode, pos: -1, text: \"\" };\n        }\n    }\n    protectLocalComposition(view, { node, pos, text }) {\n        // The node is already part of a local view desc, leave it there\n        if (this.getDesc(node))\n            return;\n        // Create a composition view for the orphaned nodes\n        let topNode = node;\n        for (;; topNode = topNode.parentNode) {\n            if (topNode.parentNode == this.contentDOM)\n                break;\n            while (topNode.previousSibling)\n                topNode.parentNode.removeChild(topNode.previousSibling);\n            while (topNode.nextSibling)\n                topNode.parentNode.removeChild(topNode.nextSibling);\n            if (topNode.pmViewDesc)\n                topNode.pmViewDesc = undefined;\n        }\n        let desc = new CompositionViewDesc(this, topNode, node, text);\n        view.input.compositionNodes.push(desc);\n        // Patch up this.children to contain the composition view\n        this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n    }\n    // If this desc must be updated to match the given node decoration,\n    // do so and return true.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateInner(node, outerDeco, innerDeco, view);\n        return true;\n    }\n    updateInner(node, outerDeco, innerDeco, view) {\n        this.updateOuterDeco(outerDeco);\n        this.node = node;\n        this.innerDeco = innerDeco;\n        if (this.contentDOM)\n            this.updateChildren(view, this.posAtStart);\n        this.dirty = NOT_DIRTY;\n    }\n    updateOuterDeco(outerDeco) {\n        if (sameOuterDeco(outerDeco, this.outerDeco))\n            return;\n        let needsWrap = this.nodeDOM.nodeType != 1;\n        let oldDOM = this.dom;\n        this.dom = patchOuterDeco(this.dom, this.nodeDOM, computeOuterDeco(this.outerDeco, this.node, needsWrap), computeOuterDeco(outerDeco, this.node, needsWrap));\n        if (this.dom != oldDOM) {\n            oldDOM.pmViewDesc = undefined;\n            this.dom.pmViewDesc = this;\n        }\n        this.outerDeco = outerDeco;\n    }\n    // Mark this node as being the selected node.\n    selectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.draggable = true;\n    }\n    // Remove selected node marking from this node.\n    deselectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.removeAttribute(\"draggable\");\n    }\n    get domAtom() { return this.node.isAtom; }\n}\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n    applyOuterDeco(dom, outerDeco, doc);\n    let docView = new NodeViewDesc(undefined, doc, outerDeco, innerDeco, dom, dom, dom, view, 0);\n    if (docView.contentDOM)\n        docView.updateChildren(view, 0);\n    return docView;\n}\nclass TextViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n        super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view, 0);\n    }\n    parseRule() {\n        let skip = this.nodeDOM.parentNode;\n        while (skip && skip != this.dom && !skip.pmIsDeco)\n            skip = skip.parentNode;\n        return { skip: (skip || true) };\n    }\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateOuterDeco(outerDeco);\n        if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n            this.nodeDOM.nodeValue = node.text;\n            if (view.trackWrites == this.nodeDOM)\n                view.trackWrites = null;\n        }\n        this.node = node;\n        this.dirty = NOT_DIRTY;\n        return true;\n    }\n    inParent() {\n        let parentDOM = this.parent.contentDOM;\n        for (let n = this.nodeDOM; n; n = n.parentNode)\n            if (n == parentDOM)\n                return true;\n        return false;\n    }\n    domFromPos(pos) {\n        return { node: this.nodeDOM, offset: pos };\n    }\n    localPosFromDOM(dom, offset, bias) {\n        if (dom == this.nodeDOM)\n            return this.posAtStart + Math.min(offset, this.node.text.length);\n        return super.localPosFromDOM(dom, offset, bias);\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"characterData\" && mutation.type != \"selection\";\n    }\n    slice(from, to, view) {\n        let node = this.node.cut(from, to), dom = document.createTextNode(node.text);\n        return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view);\n    }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n            this.dirty = NODE_DIRTY;\n    }\n    get domAtom() { return false; }\n}\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n    parseRule() { return { ignore: true }; }\n    matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName; }\n    get domAtom() { return true; }\n    get ignoreForCoords() { return this.dom.nodeName == \"IMG\"; }\n}\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n        super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n        this.spec = spec;\n    }\n    // A custom `update` method gets to decide whether the update goes\n    // through. If it does, and there's a `contentDOM` node, our logic\n    // updates the children.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY)\n            return false;\n        if (this.spec.update) {\n            let result = this.spec.update(node, outerDeco, innerDeco);\n            if (result)\n                this.updateInner(node, outerDeco, innerDeco, view);\n            return result;\n        }\n        else if (!this.contentDOM && !node.isLeaf) {\n            return false;\n        }\n        else {\n            return super.update(node, outerDeco, innerDeco, view);\n        }\n    }\n    selectNode() {\n        this.spec.selectNode ? this.spec.selectNode() : super.selectNode();\n    }\n    deselectNode() {\n        this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();\n    }\n    setSelection(anchor, head, root, force) {\n        this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n            : super.setSelection(anchor, head, root, force);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n    stopEvent(event) {\n        return this.spec.stopEvent ? this.spec.stopEvent(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n}\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n    let dom = parentDOM.firstChild, written = false;\n    for (let i = 0; i < descs.length; i++) {\n        let desc = descs[i], childDOM = desc.dom;\n        if (childDOM.parentNode == parentDOM) {\n            while (childDOM != dom) {\n                dom = rm(dom);\n                written = true;\n            }\n            dom = dom.nextSibling;\n        }\n        else {\n            written = true;\n            parentDOM.insertBefore(childDOM, dom);\n        }\n        if (desc instanceof MarkViewDesc) {\n            let pos = dom ? dom.previousSibling : parentDOM.lastChild;\n            renderDescs(desc.contentDOM, desc.children, view);\n            dom = pos ? pos.nextSibling : parentDOM.firstChild;\n        }\n    }\n    while (dom) {\n        dom = rm(dom);\n        written = true;\n    }\n    if (written && view.trackWrites == parentDOM)\n        view.trackWrites = null;\n}\nconst OuterDecoLevel = function (nodeName) {\n    if (nodeName)\n        this.nodeName = nodeName;\n};\nOuterDecoLevel.prototype = Object.create(null);\nconst noDeco = [new OuterDecoLevel];\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n    if (outerDeco.length == 0)\n        return noDeco;\n    let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top];\n    for (let i = 0; i < outerDeco.length; i++) {\n        let attrs = outerDeco[i].type.attrs;\n        if (!attrs)\n            continue;\n        if (attrs.nodeName)\n            result.push(top = new OuterDecoLevel(attrs.nodeName));\n        for (let name in attrs) {\n            let val = attrs[name];\n            if (val == null)\n                continue;\n            if (needsWrap && result.length == 1)\n                result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"));\n            if (name == \"class\")\n                top.class = (top.class ? top.class + \" \" : \"\") + val;\n            else if (name == \"style\")\n                top.style = (top.style ? top.style + \";\" : \"\") + val;\n            else if (name != \"nodeName\")\n                top[name] = val;\n        }\n    }\n    return result;\n}\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n    // Shortcut for trivial case\n    if (prevComputed == noDeco && curComputed == noDeco)\n        return nodeDOM;\n    let curDOM = nodeDOM;\n    for (let i = 0; i < curComputed.length; i++) {\n        let deco = curComputed[i], prev = prevComputed[i];\n        if (i) {\n            let parent;\n            if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n                (parent = curDOM.parentNode) && parent.nodeName.toLowerCase() == deco.nodeName) {\n                curDOM = parent;\n            }\n            else {\n                parent = document.createElement(deco.nodeName);\n                parent.pmIsDeco = true;\n                parent.appendChild(curDOM);\n                prev = noDeco[0];\n                curDOM = parent;\n            }\n        }\n        patchAttributes(curDOM, prev || noDeco[0], deco);\n    }\n    return curDOM;\n}\nfunction patchAttributes(dom, prev, cur) {\n    for (let name in prev)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n            dom.removeAttribute(name);\n    for (let name in cur)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n            dom.setAttribute(name, cur[name]);\n    if (prev.class != cur.class) {\n        let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : [];\n        let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : [];\n        for (let i = 0; i < prevList.length; i++)\n            if (curList.indexOf(prevList[i]) == -1)\n                dom.classList.remove(prevList[i]);\n        for (let i = 0; i < curList.length; i++)\n            if (prevList.indexOf(curList[i]) == -1)\n                dom.classList.add(curList[i]);\n        if (dom.classList.length == 0)\n            dom.removeAttribute(\"class\");\n    }\n    if (prev.style != cur.style) {\n        if (prev.style) {\n            let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m;\n            while (m = prop.exec(prev.style))\n                dom.style.removeProperty(m[1]);\n        }\n        if (cur.style)\n            dom.style.cssText += cur.style;\n    }\n}\nfunction applyOuterDeco(dom, deco, node) {\n    return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1));\n}\nfunction sameOuterDeco(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].type.eq(b[i].type))\n            return false;\n    return true;\n}\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n    constructor(top, lock, view) {\n        this.lock = lock;\n        this.view = view;\n        // Index into `this.top`'s child array, represents the current\n        // update position.\n        this.index = 0;\n        // When entering a mark, the current top and index are pushed\n        // onto this.\n        this.stack = [];\n        // Tracks whether anything was changed\n        this.changed = false;\n        this.top = top;\n        this.preMatch = preMatch(top.node.content, top);\n    }\n    // Destroy and remove the children between the given indices in\n    // `this.top`.\n    destroyBetween(start, end) {\n        if (start == end)\n            return;\n        for (let i = start; i < end; i++)\n            this.top.children[i].destroy();\n        this.top.children.splice(start, end - start);\n        this.changed = true;\n    }\n    // Destroy all remaining children in `this.top`.\n    destroyRest() {\n        this.destroyBetween(this.index, this.top.children.length);\n    }\n    // Sync the current stack of mark descs with the given array of\n    // marks, reusing existing mark descs when possible.\n    syncToMarks(marks, inline, view) {\n        let keep = 0, depth = this.stack.length >> 1;\n        let maxKeep = Math.min(depth, marks.length);\n        while (keep < maxKeep &&\n            (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1])\n                .matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n            keep++;\n        while (keep < depth) {\n            this.destroyRest();\n            this.top.dirty = NOT_DIRTY;\n            this.index = this.stack.pop();\n            this.top = this.stack.pop();\n            depth--;\n        }\n        while (depth < marks.length) {\n            this.stack.push(this.top, this.index + 1);\n            let found = -1;\n            for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n                let next = this.top.children[i];\n                if (next.matchesMark(marks[depth]) && !this.isLocked(next.dom)) {\n                    found = i;\n                    break;\n                }\n            }\n            if (found > -1) {\n                if (found > this.index) {\n                    this.changed = true;\n                    this.destroyBetween(this.index, found);\n                }\n                this.top = this.top.children[this.index];\n            }\n            else {\n                let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n                this.top.children.splice(this.index, 0, markDesc);\n                this.top = markDesc;\n                this.changed = true;\n            }\n            this.index = 0;\n            depth++;\n        }\n    }\n    // Try to find a node desc matching the given data. Skip over it and\n    // return true when successful.\n    findNodeMatch(node, outerDeco, innerDeco, index) {\n        let found = -1, targetDesc;\n        if (index >= this.preMatch.index &&\n            (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n            targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n            found = this.top.children.indexOf(targetDesc, this.index);\n        }\n        else {\n            for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n                let child = this.top.children[i];\n                if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n                    found = i;\n                    break;\n                }\n            }\n        }\n        if (found < 0)\n            return false;\n        this.destroyBetween(this.index, found);\n        this.index++;\n        return true;\n    }\n    updateNodeAt(node, outerDeco, innerDeco, index, view) {\n        let child = this.top.children[index];\n        if (child.dirty == NODE_DIRTY && child.dom == child.contentDOM)\n            child.dirty = CONTENT_DIRTY;\n        if (!child.update(node, outerDeco, innerDeco, view))\n            return false;\n        this.destroyBetween(this.index, index);\n        this.index++;\n        return true;\n    }\n    findIndexWithChild(domNode) {\n        for (;;) {\n            let parent = domNode.parentNode;\n            if (!parent)\n                return -1;\n            if (parent == this.top.contentDOM) {\n                let desc = domNode.pmViewDesc;\n                if (desc)\n                    for (let i = this.index; i < this.top.children.length; i++) {\n                        if (this.top.children[i] == desc)\n                            return i;\n                    }\n                return -1;\n            }\n            domNode = parent;\n        }\n    }\n    // Try to update the next node, if any, to the given data. Checks\n    // pre-matches to avoid overwriting nodes that could still be used.\n    updateNextNode(node, outerDeco, innerDeco, view, index, pos) {\n        for (let i = this.index; i < this.top.children.length; i++) {\n            let next = this.top.children[i];\n            if (next instanceof NodeViewDesc) {\n                let preMatch = this.preMatch.matched.get(next);\n                if (preMatch != null && preMatch != index)\n                    return false;\n                let nextDOM = next.dom, updated;\n                // Can't update if nextDOM is or contains this.lock, except if\n                // it's a text node whose content already matches the new text\n                // and whose decorations match the new ones.\n                let locked = this.isLocked(nextDOM) &&\n                    !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n                        next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n                if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n                    this.destroyBetween(this.index, i);\n                    if (next.dom != nextDOM)\n                        this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                else if (!locked && (updated = this.recreateWrapper(next, node, outerDeco, innerDeco, view, pos))) {\n                    this.top.children[this.index] = updated;\n                    if (updated.contentDOM) {\n                        updated.dirty = CONTENT_DIRTY;\n                        updated.updateChildren(view, pos + 1);\n                        updated.dirty = NOT_DIRTY;\n                    }\n                    this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                break;\n            }\n        }\n        return false;\n    }\n    // When a node with content is replaced by a different node with\n    // identical content, move over its children.\n    recreateWrapper(next, node, outerDeco, innerDeco, view, pos) {\n        if (next.dirty || node.isAtom || !next.children.length ||\n            !next.node.content.eq(node.content))\n            return null;\n        let wrapper = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (wrapper.contentDOM) {\n            wrapper.children = next.children;\n            next.children = [];\n            for (let ch of wrapper.children)\n                ch.parent = wrapper;\n        }\n        next.destroy();\n        return wrapper;\n    }\n    // Insert the node as a newly created node desc.\n    addNode(node, outerDeco, innerDeco, view, pos) {\n        let desc = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (desc.contentDOM)\n            desc.updateChildren(view, pos + 1);\n        this.top.children.splice(this.index++, 0, desc);\n        this.changed = true;\n    }\n    placeWidget(widget, view, pos) {\n        let next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n        if (next && next.matchesWidget(widget) &&\n            (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n            this.index++;\n        }\n        else {\n            let desc = new WidgetViewDesc(this.top, widget, view, pos);\n            this.top.children.splice(this.index++, 0, desc);\n            this.changed = true;\n        }\n    }\n    // Make sure a textblock looks and behaves correctly in\n    // contentEditable.\n    addTextblockHacks() {\n        let lastChild = this.top.children[this.index - 1], parent = this.top;\n        while (lastChild instanceof MarkViewDesc) {\n            parent = lastChild;\n            lastChild = parent.children[parent.children.length - 1];\n        }\n        if (!lastChild || // Empty textblock\n            !(lastChild instanceof TextViewDesc) ||\n            /\\n$/.test(lastChild.node.text) ||\n            (this.view.requiresGeckoHackNode && /\\s$/.test(lastChild.node.text))) {\n            // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n            if ((safari || chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n                this.addHackNode(\"IMG\", parent);\n            this.addHackNode(\"BR\", this.top);\n        }\n    }\n    addHackNode(nodeName, parent) {\n        if (parent == this.top && this.index < parent.children.length && parent.children[this.index].matchesHack(nodeName)) {\n            this.index++;\n        }\n        else {\n            let dom = document.createElement(nodeName);\n            if (nodeName == \"IMG\") {\n                dom.className = \"ProseMirror-separator\";\n                dom.alt = \"\";\n            }\n            if (nodeName == \"BR\")\n                dom.className = \"ProseMirror-trailingBreak\";\n            let hack = new TrailingHackViewDesc(this.top, [], dom, null);\n            if (parent != this.top)\n                parent.children.push(hack);\n            else\n                parent.children.splice(this.index++, 0, hack);\n            this.changed = true;\n        }\n    }\n    isLocked(node) {\n        return this.lock && (node == this.lock || node.nodeType == 1 && node.contains(this.lock.parentNode));\n    }\n}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n    let curDesc = parentDesc, descI = curDesc.children.length;\n    let fI = frag.childCount, matched = new Map, matches = [];\n    outer: while (fI > 0) {\n        let desc;\n        for (;;) {\n            if (descI) {\n                let next = curDesc.children[descI - 1];\n                if (next instanceof MarkViewDesc) {\n                    curDesc = next;\n                    descI = next.children.length;\n                }\n                else {\n                    desc = next;\n                    descI--;\n                    break;\n                }\n            }\n            else if (curDesc == parentDesc) {\n                break outer;\n            }\n            else {\n                // FIXME\n                descI = curDesc.parent.children.indexOf(curDesc);\n                curDesc = curDesc.parent;\n            }\n        }\n        let node = desc.node;\n        if (!node)\n            continue;\n        if (node != frag.child(fI - 1))\n            break;\n        --fI;\n        matched.set(desc, fI);\n        matches.push(desc);\n    }\n    return { index: fI, matched, matches: matches.reverse() };\n}\nfunction compareSide(a, b) {\n    return a.type.side - b.type.side;\n}\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n    let locals = deco.locals(parent), offset = 0;\n    // Simple, cheap variant for when there are no local decorations\n    if (locals.length == 0) {\n        for (let i = 0; i < parent.childCount; i++) {\n            let child = parent.child(i);\n            onNode(child, locals, deco.forChild(offset, child), i);\n            offset += child.nodeSize;\n        }\n        return;\n    }\n    let decoIndex = 0, active = [], restNode = null;\n    for (let parentIndex = 0;;) {\n        let widget, widgets;\n        while (decoIndex < locals.length && locals[decoIndex].to == offset) {\n            let next = locals[decoIndex++];\n            if (next.widget) {\n                if (!widget)\n                    widget = next;\n                else\n                    (widgets || (widgets = [widget])).push(next);\n            }\n        }\n        if (widget) {\n            if (widgets) {\n                widgets.sort(compareSide);\n                for (let i = 0; i < widgets.length; i++)\n                    onWidget(widgets[i], parentIndex, !!restNode);\n            }\n            else {\n                onWidget(widget, parentIndex, !!restNode);\n            }\n        }\n        let child, index;\n        if (restNode) {\n            index = -1;\n            child = restNode;\n            restNode = null;\n        }\n        else if (parentIndex < parent.childCount) {\n            index = parentIndex;\n            child = parent.child(parentIndex++);\n        }\n        else {\n            break;\n        }\n        for (let i = 0; i < active.length; i++)\n            if (active[i].to <= offset)\n                active.splice(i--, 1);\n        while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n            active.push(locals[decoIndex++]);\n        let end = offset + child.nodeSize;\n        if (child.isText) {\n            let cutAt = end;\n            if (decoIndex < locals.length && locals[decoIndex].from < cutAt)\n                cutAt = locals[decoIndex].from;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to < cutAt)\n                    cutAt = active[i].to;\n            if (cutAt < end) {\n                restNode = child.cut(cutAt - offset);\n                child = child.cut(0, cutAt - offset);\n                end = cutAt;\n                index = -1;\n            }\n        }\n        else {\n            while (decoIndex < locals.length && locals[decoIndex].to < end)\n                decoIndex++;\n        }\n        let outerDeco = child.isInline && !child.isLeaf ? active.filter(d => !d.inline) : active.slice();\n        onNode(child, outerDeco, deco.forChild(offset, child), index);\n        offset = end;\n    }\n}\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n    if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n        let oldCSS = dom.style.cssText;\n        dom.style.cssText = oldCSS + \"; list-style: square !important\";\n        window.getComputedStyle(dom).listStyle;\n        dom.style.cssText = oldCSS;\n    }\n}\nfunction nearbyTextNode(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3)\n            return node;\n        if (node.nodeType == 1 && offset > 0) {\n            if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n                return node.childNodes[offset];\n            node = node.childNodes[offset - 1];\n            offset = nodeSize(node);\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length) {\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else {\n            return null;\n        }\n    }\n}\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n    for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n        let child = frag.child(i++), childStart = pos;\n        pos += child.nodeSize;\n        if (!child.isText)\n            continue;\n        let str = child.text;\n        while (i < frag.childCount) {\n            let next = frag.child(i++);\n            pos += next.nodeSize;\n            if (!next.isText)\n                break;\n            str += next.text;\n        }\n        if (pos >= from) {\n            if (pos >= to && str.slice(to - text.length - childStart, to - childStart) == text)\n                return to - text.length;\n            let found = childStart < to ? str.lastIndexOf(text, to - childStart - 1) : -1;\n            if (found >= 0 && found + text.length + childStart >= from)\n                return childStart + found;\n            if (from == to && str.length >= (to + text.length) - childStart &&\n                str.slice(to - childStart, to - childStart + text.length) == text)\n                return to;\n        }\n    }\n    return -1;\n}\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n    let result = [];\n    for (let i = 0, off = 0; i < nodes.length; i++) {\n        let child = nodes[i], start = off, end = off += child.size;\n        if (start >= to || end <= from) {\n            result.push(child);\n        }\n        else {\n            if (start < from)\n                result.push(child.slice(0, from - start, view));\n            if (replacement) {\n                result.push(replacement);\n                replacement = undefined;\n            }\n            if (end > to)\n                result.push(child.slice(to - start, child.size, view));\n        }\n    }\n    return result;\n}\n\nfunction selectionFromDOM(view, origin = null) {\n    let domSel = view.domSelectionRange(), doc = view.state.doc;\n    if (!domSel.focusNode)\n        return null;\n    let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0;\n    let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset, 1);\n    if (head < 0)\n        return null;\n    let $head = doc.resolve(head), $anchor, selection;\n    if (selectionCollapsed(domSel)) {\n        $anchor = $head;\n        while (nearestDesc && !nearestDesc.node)\n            nearestDesc = nearestDesc.parent;\n        let nearestDescNode = nearestDesc.node;\n        if (nearestDesc && nearestDescNode.isAtom && NodeSelection.isSelectable(nearestDescNode) && nearestDesc.parent\n            && !(nearestDescNode.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n            let pos = nearestDesc.posBefore;\n            selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n        }\n    }\n    else {\n        let anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset, 1);\n        if (anchor < 0)\n            return null;\n        $anchor = doc.resolve(anchor);\n    }\n    if (!selection) {\n        let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1;\n        selection = selectionBetween(view, $anchor, $head, bias);\n    }\n    return selection;\n}\nfunction editorOwnsSelection(view) {\n    return view.editable ? view.hasFocus() :\n        hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom);\n}\nfunction selectionToDOM(view, force = false) {\n    let sel = view.state.selection;\n    syncNodeSelection(view, sel);\n    if (!editorOwnsSelection(view))\n        return;\n    // The delayed drag selection causes issues with Cell Selections\n    // in Safari. And the drag selection delay is to workarond issues\n    // which only present in Chrome.\n    if (!force && view.input.mouseDown && view.input.mouseDown.allowDefault && chrome) {\n        let domSel = view.domSelectionRange(), curSel = view.domObserver.currentSelection;\n        if (domSel.anchorNode && curSel.anchorNode &&\n            isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset, curSel.anchorNode, curSel.anchorOffset)) {\n            view.input.mouseDown.delayedSelectionSync = true;\n            view.domObserver.setCurSelection();\n            return;\n        }\n    }\n    view.domObserver.disconnectSelection();\n    if (view.cursorWrapper) {\n        selectCursorWrapper(view);\n    }\n    else {\n        let { anchor, head } = sel, resetEditableFrom, resetEditableTo;\n        if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n            if (!sel.$from.parent.inlineContent)\n                resetEditableFrom = temporarilyEditableNear(view, sel.from);\n            if (!sel.empty && !sel.$from.parent.inlineContent)\n                resetEditableTo = temporarilyEditableNear(view, sel.to);\n        }\n        view.docView.setSelection(anchor, head, view.root, force);\n        if (brokenSelectBetweenUneditable) {\n            if (resetEditableFrom)\n                resetEditable(resetEditableFrom);\n            if (resetEditableTo)\n                resetEditable(resetEditableTo);\n        }\n        if (sel.visible) {\n            view.dom.classList.remove(\"ProseMirror-hideselection\");\n        }\n        else {\n            view.dom.classList.add(\"ProseMirror-hideselection\");\n            if (\"onselectionchange\" in document)\n                removeClassOnSelectionChange(view);\n        }\n    }\n    view.domObserver.setCurSelection();\n    view.domObserver.connectSelection();\n}\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\nconst brokenSelectBetweenUneditable = safari || chrome && chrome_version < 63;\nfunction temporarilyEditableNear(view, pos) {\n    let { node, offset } = view.docView.domFromPos(pos, 0);\n    let after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n    let before = offset ? node.childNodes[offset - 1] : null;\n    if (safari && after && after.contentEditable == \"false\")\n        return setEditable(after);\n    if ((!after || after.contentEditable == \"false\") &&\n        (!before || before.contentEditable == \"false\")) {\n        if (after)\n            return setEditable(after);\n        else if (before)\n            return setEditable(before);\n    }\n}\nfunction setEditable(element) {\n    element.contentEditable = \"true\";\n    if (safari && element.draggable) {\n        element.draggable = false;\n        element.wasDraggable = true;\n    }\n    return element;\n}\nfunction resetEditable(element) {\n    element.contentEditable = \"false\";\n    if (element.wasDraggable) {\n        element.draggable = true;\n        element.wasDraggable = null;\n    }\n}\nfunction removeClassOnSelectionChange(view) {\n    let doc = view.dom.ownerDocument;\n    doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n    let domSel = view.domSelectionRange();\n    let node = domSel.anchorNode, offset = domSel.anchorOffset;\n    doc.addEventListener(\"selectionchange\", view.input.hideSelectionGuard = () => {\n        if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n            doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n            setTimeout(() => {\n                if (!editorOwnsSelection(view) || view.state.selection.visible)\n                    view.dom.classList.remove(\"ProseMirror-hideselection\");\n            }, 20);\n        }\n    });\n}\nfunction selectCursorWrapper(view) {\n    let domSel = view.domSelection(), range = document.createRange();\n    let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\";\n    if (img)\n        range.setEnd(node.parentNode, domIndex(node) + 1);\n    else\n        range.setEnd(node, 0);\n    range.collapse(false);\n    domSel.removeAllRanges();\n    domSel.addRange(range);\n    // Kludge to kill 'control selection' in IE11 when selecting an\n    // invisible cursor wrapper, since that would result in those weird\n    // resize handles and a selection that considers the absolutely\n    // positioned wrapper, rather than the root editable node, the\n    // focused element.\n    if (!img && !view.state.selection.visible && ie && ie_version <= 11) {\n        node.disabled = true;\n        node.disabled = false;\n    }\n}\nfunction syncNodeSelection(view, sel) {\n    if (sel instanceof NodeSelection) {\n        let desc = view.docView.descAt(sel.from);\n        if (desc != view.lastSelectedViewDesc) {\n            clearNodeSelection(view);\n            if (desc)\n                desc.selectNode();\n            view.lastSelectedViewDesc = desc;\n        }\n    }\n    else {\n        clearNodeSelection(view);\n    }\n}\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n    if (view.lastSelectedViewDesc) {\n        if (view.lastSelectedViewDesc.parent)\n            view.lastSelectedViewDesc.deselectNode();\n        view.lastSelectedViewDesc = undefined;\n    }\n}\nfunction selectionBetween(view, $anchor, $head, bias) {\n    return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n        || TextSelection.between($anchor, $head, bias);\n}\nfunction hasFocusAndSelection(view) {\n    if (view.editable && !view.hasFocus())\n        return false;\n    return hasSelection(view);\n}\nfunction hasSelection(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n            (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode));\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction anchorInRightPlace(view) {\n    let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n    let domSel = view.domSelectionRange();\n    return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset);\n}\n\nfunction moveSelectionBlock(state, dir) {\n    let { $anchor, $head } = state.selection;\n    let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n    let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n    return $start && Selection.findFrom($start, dir);\n}\nfunction apply(view, sel) {\n    view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n    return true;\n}\nfunction selectHorizontally(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection) {\n        if (mods.indexOf(\"s\") > -1) {\n            let { $head } = sel, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter;\n            if (!node || node.isText || !node.isLeaf)\n                return false;\n            let $newHead = view.state.doc.resolve($head.pos + node.nodeSize * (dir < 0 ? -1 : 1));\n            return apply(view, new TextSelection(sel.$anchor, $newHead));\n        }\n        else if (!sel.empty) {\n            return false;\n        }\n        else if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) {\n            let next = moveSelectionBlock(view.state, dir);\n            if (next && (next instanceof NodeSelection))\n                return apply(view, next);\n            return false;\n        }\n        else if (!(mac && mods.indexOf(\"m\") > -1)) {\n            let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc;\n            if (!node || node.isText)\n                return false;\n            let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n            if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM))\n                return false;\n            if (NodeSelection.isSelectable(node)) {\n                return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head));\n            }\n            else if (webkit) {\n                // Chrome and Safari will introduce extra pointless cursor\n                // positions around inline uneditable nodes, so we have to\n                // take over and move the cursor past them (#937)\n                return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)));\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    else if (sel instanceof NodeSelection && sel.node.isInline) {\n        return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from));\n    }\n    else {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next)\n            return apply(view, next);\n        return false;\n    }\n}\nfunction nodeLen(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isIgnorable(dom, dir) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.size == 0 && (dir < 0 || dom.nextSibling || dom.nodeName != \"BR\");\n}\nfunction skipIgnoredNodes(view, dir) {\n    return dir < 0 ? skipIgnoredNodesBefore(view) : skipIgnoredNodesAfter(view);\n}\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesBefore(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let moveNode, moveOffset, force = false;\n    // Gecko will do odd things when the selection is directly in front\n    // of a non-editable node, so in that case, move it into the next\n    // node if possible. Issue prosemirror/prosemirror#832.\n    if (gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset], -1))\n        force = true;\n    for (;;) {\n        if (offset > 0) {\n            if (node.nodeType != 1) {\n                break;\n            }\n            else {\n                let before = node.childNodes[offset - 1];\n                if (isIgnorable(before, -1)) {\n                    moveNode = node;\n                    moveOffset = --offset;\n                }\n                else if (before.nodeType == 3) {\n                    node = before;\n                    offset = node.nodeValue.length;\n                }\n                else\n                    break;\n            }\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let prev = node.previousSibling;\n            while (prev && isIgnorable(prev, -1)) {\n                moveNode = node.parentNode;\n                moveOffset = domIndex(prev);\n                prev = prev.previousSibling;\n            }\n            if (!prev) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = 0;\n            }\n            else {\n                node = prev;\n                offset = nodeLen(node);\n            }\n        }\n    }\n    if (force)\n        setSelFocus(view, node, offset);\n    else if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesAfter(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let len = nodeLen(node);\n    let moveNode, moveOffset;\n    for (;;) {\n        if (offset < len) {\n            if (node.nodeType != 1)\n                break;\n            let after = node.childNodes[offset];\n            if (isIgnorable(after, 1)) {\n                moveNode = node;\n                moveOffset = ++offset;\n            }\n            else\n                break;\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let next = node.nextSibling;\n            while (next && isIgnorable(next, 1)) {\n                moveNode = next.parentNode;\n                moveOffset = domIndex(next) + 1;\n                next = next.nextSibling;\n            }\n            if (!next) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = len = 0;\n            }\n            else {\n                node = next;\n                offset = 0;\n                len = nodeLen(node);\n            }\n        }\n    }\n    if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\nfunction isBlockNode(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.node && desc.node.isBlock;\n}\nfunction textNodeAfter(node, offset) {\n    while (node && offset == node.childNodes.length && !hasBlockDesc(node)) {\n        offset = domIndex(node) + 1;\n        node = node.parentNode;\n    }\n    while (node && offset < node.childNodes.length) {\n        let next = node.childNodes[offset];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = 0;\n    }\n}\nfunction textNodeBefore(node, offset) {\n    while (node && !offset && !hasBlockDesc(node)) {\n        offset = domIndex(node);\n        node = node.parentNode;\n    }\n    while (node && offset) {\n        let next = node.childNodes[offset - 1];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = node.childNodes.length;\n    }\n}\nfunction setSelFocus(view, node, offset) {\n    if (node.nodeType != 3) {\n        let before, after;\n        if (after = textNodeAfter(node, offset)) {\n            node = after;\n            offset = 0;\n        }\n        else if (before = textNodeBefore(node, offset)) {\n            node = before;\n            offset = before.nodeValue.length;\n        }\n    }\n    let sel = view.domSelection();\n    if (selectionCollapsed(sel)) {\n        let range = document.createRange();\n        range.setEnd(node, offset);\n        range.setStart(node, offset);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    else if (sel.extend) {\n        sel.extend(node, offset);\n    }\n    view.domObserver.setCurSelection();\n    let { state } = view;\n    // If no state update ends up happening, reset the selection.\n    setTimeout(() => {\n        if (view.state == state)\n            selectionToDOM(view);\n    }, 50);\n}\nfunction findDirection(view, pos) {\n    let $pos = view.state.doc.resolve(pos);\n    if (!(chrome || windows) && $pos.parent.inlineContent) {\n        let coords = view.coordsAtPos(pos);\n        if (pos > $pos.start()) {\n            let before = view.coordsAtPos(pos - 1);\n            let mid = (before.top + before.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(before.left - coords.left) > 1)\n                return before.left < coords.left ? \"ltr\" : \"rtl\";\n        }\n        if (pos < $pos.end()) {\n            let after = view.coordsAtPos(pos + 1);\n            let mid = (after.top + after.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(after.left - coords.left) > 1)\n                return after.left > coords.left ? \"ltr\" : \"rtl\";\n        }\n    }\n    let computed = getComputedStyle(view.dom).direction;\n    return computed == \"rtl\" ? \"rtl\" : \"ltr\";\n}\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1)\n        return false;\n    if (mac && mods.indexOf(\"m\") > -1)\n        return false;\n    let { $from, $to } = sel;\n    if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next && (next instanceof NodeSelection))\n            return apply(view, next);\n    }\n    if (!$from.parent.inlineContent) {\n        let side = dir < 0 ? $from : $to;\n        let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n        return beyond ? apply(view, beyond) : false;\n    }\n    return false;\n}\nfunction stopNativeHorizontalDelete(view, dir) {\n    if (!(view.state.selection instanceof TextSelection))\n        return true;\n    let { $head, $anchor, empty } = view.state.selection;\n    if (!$head.sameParent($anchor))\n        return true;\n    if (!empty)\n        return false;\n    if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\"))\n        return true;\n    let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n    if (nextNode && !nextNode.isText) {\n        let tr = view.state.tr;\n        if (dir < 0)\n            tr.delete($head.pos - nextNode.nodeSize, $head.pos);\n        else\n            tr.delete($head.pos, $head.pos + nextNode.nodeSize);\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\nfunction switchEditable(view, node, state) {\n    view.domObserver.stop();\n    node.contentEditable = state;\n    view.domObserver.start();\n}\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n    if (!safari || view.state.selection.$head.parentOffset > 0)\n        return false;\n    let { focusNode, focusOffset } = view.domSelectionRange();\n    if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n        focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n        let child = focusNode.firstChild;\n        switchEditable(view, child, \"true\");\n        setTimeout(() => switchEditable(view, child, \"false\"), 20);\n    }\n    return false;\n}\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\nfunction getMods(event) {\n    let result = \"\";\n    if (event.ctrlKey)\n        result += \"c\";\n    if (event.metaKey)\n        result += \"m\";\n    if (event.altKey)\n        result += \"a\";\n    if (event.shiftKey)\n        result += \"s\";\n    return result;\n}\nfunction captureKeyDown(view, event) {\n    let code = event.keyCode, mods = getMods(event);\n    if (code == 8 || (mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n        return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodes(view, -1);\n    }\n    else if ((code == 46 && !event.shiftKey) || (mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n        return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodes(view, 1);\n    }\n    else if (code == 13 || code == 27) { // Enter, Esc\n        return true;\n    }\n    else if (code == 37 || (mac && code == 66 && mods == \"c\")) { // Left arrow, Ctrl-b on Mac\n        let dir = code == 37 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? -1 : 1) : -1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 39 || (mac && code == 70 && mods == \"c\")) { // Right arrow, Ctrl-f on Mac\n        let dir = code == 39 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? 1 : -1) : 1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 38 || (mac && code == 80 && mods == \"c\")) { // Up arrow, Ctrl-p on Mac\n        return selectVertically(view, -1, mods) || skipIgnoredNodes(view, -1);\n    }\n    else if (code == 40 || (mac && code == 78 && mods == \"c\")) { // Down arrow, Ctrl-n on Mac\n        return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodes(view, 1);\n    }\n    else if (mods == (mac ? \"m\" : \"c\") &&\n        (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n        return true;\n    }\n    return false;\n}\n\nfunction serializeForClipboard(view, slice) {\n    view.someProp(\"transformCopied\", f => { slice = f(slice, view); });\n    let context = [], { content, openStart, openEnd } = slice;\n    while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n        openStart--;\n        openEnd--;\n        let node = content.firstChild;\n        context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n        content = node.content;\n    }\n    let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n    let doc = detachedDoc(), wrap = doc.createElement(\"div\");\n    wrap.appendChild(serializer.serializeFragment(content, { document: doc }));\n    let firstChild = wrap.firstChild, needsWrap, wrappers = 0;\n    while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n        for (let i = needsWrap.length - 1; i >= 0; i--) {\n            let wrapper = doc.createElement(needsWrap[i]);\n            while (wrap.firstChild)\n                wrapper.appendChild(wrap.firstChild);\n            wrap.appendChild(wrapper);\n            wrappers++;\n        }\n        firstChild = wrap.firstChild;\n    }\n    if (firstChild && firstChild.nodeType == 1)\n        firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : \"\"} ${JSON.stringify(context)}`);\n    let text = view.someProp(\"clipboardTextSerializer\", f => f(slice, view)) ||\n        slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n    return { dom: wrap, text };\n}\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n    let inCode = $context.parent.type.spec.code;\n    let dom, slice;\n    if (!html && !text)\n        return null;\n    let asText = text && (plainText || inCode || !html);\n    if (asText) {\n        view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText, view); });\n        if (inCode)\n            return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty;\n        let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText, view));\n        if (parsed) {\n            slice = parsed;\n        }\n        else {\n            let marks = $context.marks();\n            let { schema } = view.state, serializer = DOMSerializer.fromSchema(schema);\n            dom = document.createElement(\"div\");\n            text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n                let p = dom.appendChild(document.createElement(\"p\"));\n                if (block)\n                    p.appendChild(serializer.serializeNode(schema.text(block, marks)));\n            });\n        }\n    }\n    else {\n        view.someProp(\"transformPastedHTML\", f => { html = f(html, view); });\n        dom = readHTML(html);\n        if (webkit)\n            restoreReplacedSpaces(dom);\n    }\n    let contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n    let sliceData = contextNode && /^(\\d+) (\\d+)(?: -(\\d+))? (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\") || \"\");\n    if (sliceData && sliceData[3])\n        for (let i = +sliceData[3]; i > 0; i--) {\n            let child = dom.firstChild;\n            while (child && child.nodeType != 1)\n                child = child.nextSibling;\n            if (!child)\n                break;\n            dom = child;\n        }\n    if (!slice) {\n        let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n        slice = parser.parseSlice(dom, {\n            preserveWhitespace: !!(asText || sliceData),\n            context: $context,\n            ruleFromNode(dom) {\n                if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n                    dom.parentNode && !inlineParents.test(dom.parentNode.nodeName))\n                    return { ignore: true };\n                return null;\n            }\n        });\n    }\n    if (sliceData) {\n        slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[4]);\n    }\n    else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n        slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n        if (slice.openStart || slice.openEnd) {\n            let openStart = 0, openEnd = 0;\n            for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating; openStart++, node = node.firstChild) { }\n            for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating; openEnd++, node = node.lastChild) { }\n            slice = closeSlice(slice, openStart, openEnd);\n        }\n    }\n    view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    return slice;\n}\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n    if (fragment.childCount < 2)\n        return fragment;\n    for (let d = $context.depth; d >= 0; d--) {\n        let parent = $context.node(d);\n        let match = parent.contentMatchAt($context.index(d));\n        let lastWrap, result = [];\n        fragment.forEach(node => {\n            if (!result)\n                return;\n            let wrap = match.findWrapping(node.type), inLast;\n            if (!wrap)\n                return result = null;\n            if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n                result[result.length - 1] = inLast;\n            }\n            else {\n                if (result.length)\n                    result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length);\n                let wrapped = withWrappers(node, wrap);\n                result.push(wrapped);\n                match = match.matchType(wrapped.type);\n                lastWrap = wrap;\n            }\n        });\n        if (result)\n            return Fragment.from(result);\n    }\n    return fragment;\n}\nfunction withWrappers(node, wrap, from = 0) {\n    for (let i = wrap.length - 1; i >= from; i--)\n        node = wrap[i].create(null, Fragment.from(node));\n    return node;\n}\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n    if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n        let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n        if (inner)\n            return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner));\n        let match = sibling.contentMatchAt(sibling.childCount);\n        if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n            return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))));\n    }\n}\nfunction closeRight(node, depth) {\n    if (depth == 0)\n        return node;\n    let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n    let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n    return node.copy(fragment.append(fill));\n}\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n    let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content;\n    if (fragment.childCount > 1)\n        openEnd = 0;\n    if (depth < to - 1)\n        inner = closeRange(inner, side, from, to, depth + 1, openEnd);\n    if (depth >= from)\n        inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, openEnd <= depth).append(inner)\n            : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true));\n    return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner));\n}\nfunction closeSlice(slice, openStart, openEnd) {\n    if (openStart < slice.openStart)\n        slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd);\n    if (openEnd < slice.openEnd)\n        slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd);\n    return slice;\n}\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n    thead: [\"table\"],\n    tbody: [\"table\"],\n    tfoot: [\"table\"],\n    caption: [\"table\"],\n    colgroup: [\"table\"],\n    col: [\"table\", \"colgroup\"],\n    tr: [\"table\", \"tbody\"],\n    td: [\"table\", \"tbody\", \"tr\"],\n    th: [\"table\", \"tbody\", \"tr\"]\n};\nlet _detachedDoc = null;\nfunction detachedDoc() {\n    return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"));\n}\nfunction readHTML(html) {\n    let metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n    if (metas)\n        html = html.slice(metas[0].length);\n    let elt = detachedDoc().createElement(\"div\");\n    let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap;\n    if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n        html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\");\n    elt.innerHTML = html;\n    if (wrap)\n        for (let i = 0; i < wrap.length; i++)\n            elt = elt.querySelector(wrap[i]) || elt;\n    return elt;\n}\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n    let nodes = dom.querySelectorAll(chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n    for (let i = 0; i < nodes.length; i++) {\n        let node = nodes[i];\n        if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n            node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node);\n    }\n}\nfunction addContext(slice, context) {\n    if (!slice.size)\n        return slice;\n    let schema = slice.content.firstChild.type.schema, array;\n    try {\n        array = JSON.parse(context);\n    }\n    catch (e) {\n        return slice;\n    }\n    let { content, openStart, openEnd } = slice;\n    for (let i = array.length - 2; i >= 0; i -= 2) {\n        let type = schema.nodes[array[i]];\n        if (!type || type.hasRequiredAttrs())\n            break;\n        content = Fragment.from(type.create(array[i + 1], content));\n        openStart++;\n        openEnd++;\n    }\n    return new Slice(content, openStart, openEnd);\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {};\nconst editHandlers = {};\nconst passiveHandlers = { touchstart: true, touchmove: true };\nclass InputState {\n    constructor() {\n        this.shiftKey = false;\n        this.mouseDown = null;\n        this.lastKeyCode = null;\n        this.lastKeyCodeTime = 0;\n        this.lastClick = { time: 0, x: 0, y: 0, type: \"\" };\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastIOSEnter = 0;\n        this.lastIOSEnterFallbackTimeout = -1;\n        this.lastFocus = 0;\n        this.lastTouch = 0;\n        this.lastAndroidDelete = 0;\n        this.composing = false;\n        this.composingTimeout = -1;\n        this.compositionNodes = [];\n        this.compositionEndedAt = -2e8;\n        this.compositionID = 1;\n        // Set to a composition ID when there are pending changes at compositionend\n        this.compositionPendingChanges = 0;\n        this.domChangeCount = 0;\n        this.eventHandlers = Object.create(null);\n        this.hideSelectionGuard = null;\n    }\n}\nfunction initInput(view) {\n    for (let event in handlers) {\n        let handler = handlers[event];\n        view.dom.addEventListener(event, view.input.eventHandlers[event] = (event) => {\n            if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n                (view.editable || !(event.type in editHandlers)))\n                handler(view, event);\n        }, passiveHandlers[event] ? { passive: true } : undefined);\n    }\n    // On Safari, for reasons beyond my understanding, adding an input\n    // event handler makes an issue where the composition vanishes when\n    // you press enter go away.\n    if (safari)\n        view.dom.addEventListener(\"input\", () => null);\n    ensureListeners(view);\n}\nfunction setSelectionOrigin(view, origin) {\n    view.input.lastSelectionOrigin = origin;\n    view.input.lastSelectionTime = Date.now();\n}\nfunction destroyInput(view) {\n    view.domObserver.stop();\n    for (let type in view.input.eventHandlers)\n        view.dom.removeEventListener(type, view.input.eventHandlers[type]);\n    clearTimeout(view.input.composingTimeout);\n    clearTimeout(view.input.lastIOSEnterFallbackTimeout);\n}\nfunction ensureListeners(view) {\n    view.someProp(\"handleDOMEvents\", currentHandlers => {\n        for (let type in currentHandlers)\n            if (!view.input.eventHandlers[type])\n                view.dom.addEventListener(type, view.input.eventHandlers[type] = event => runCustomHandler(view, event));\n    });\n}\nfunction runCustomHandler(view, event) {\n    return view.someProp(\"handleDOMEvents\", handlers => {\n        let handler = handlers[event.type];\n        return handler ? handler(view, event) || event.defaultPrevented : false;\n    });\n}\nfunction eventBelongsToView(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target; node != view.dom; node = node.parentNode)\n        if (!node || node.nodeType == 11 ||\n            (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n            return false;\n    return true;\n}\nfunction dispatchEvent(view, event) {\n    if (!runCustomHandler(view, event) && handlers[event.type] &&\n        (view.editable || !(event.type in editHandlers)))\n        handlers[event.type](view, event);\n}\neditHandlers.keydown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.keyCode == 16 || event.shiftKey;\n    if (inOrNearComposition(view, event))\n        return;\n    view.input.lastKeyCode = event.keyCode;\n    view.input.lastKeyCodeTime = Date.now();\n    // Suppress enter key events on Chrome Android, because those tend\n    // to be part of a confused sequence of composition events fired,\n    // and handling them eagerly tends to corrupt the input.\n    if (android && chrome && event.keyCode == 13)\n        return;\n    if (event.keyCode != 229)\n        view.domObserver.forceFlush();\n    // On iOS, if we preventDefault enter key presses, the virtual\n    // keyboard gets confused. So the hack here is to set a flag that\n    // makes the DOM change code recognize that what just happens should\n    // be replaced by whatever the Enter key handlers do.\n    if (ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n        let now = Date.now();\n        view.input.lastIOSEnter = now;\n        view.input.lastIOSEnterFallbackTimeout = setTimeout(() => {\n            if (view.input.lastIOSEnter == now) {\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")));\n                view.input.lastIOSEnter = 0;\n            }\n        }, 200);\n    }\n    else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"key\");\n    }\n};\neditHandlers.keyup = (view, event) => {\n    if (event.keyCode == 16)\n        view.input.shiftKey = false;\n};\neditHandlers.keypress = (view, _event) => {\n    let event = _event;\n    if (inOrNearComposition(view, event) || !event.charCode ||\n        event.ctrlKey && !event.altKey || mac && event.metaKey)\n        return;\n    if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n        event.preventDefault();\n        return;\n    }\n    let sel = view.state.selection;\n    if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n        let text = String.fromCharCode(event.charCode);\n        if (!/[\\r\\n]/.test(text) && !view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n            view.dispatch(view.state.tr.insertText(text).scrollIntoView());\n        event.preventDefault();\n    }\n};\nfunction eventCoords(event) { return { left: event.clientX, top: event.clientY }; }\nfunction isNear(event, click) {\n    let dx = click.x - event.clientX, dy = click.y - event.clientY;\n    return dx * dx + dy * dy < 100;\n}\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n            : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n            return true;\n    }\n    return false;\n}\nfunction updateSelection(view, selection, origin) {\n    if (!view.focused)\n        view.focus();\n    let tr = view.state.tr.setSelection(selection);\n    if (origin == \"pointer\")\n        tr.setMeta(\"pointer\", true);\n    view.dispatch(tr);\n}\nfunction selectClickedLeaf(view, inside) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter;\n    if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n        updateSelection(view, new NodeSelection($pos), \"pointer\");\n        return true;\n    }\n    return false;\n}\nfunction selectClickedNode(view, inside) {\n    if (inside == -1)\n        return false;\n    let sel = view.state.selection, selectedNode, selectAt;\n    if (sel instanceof NodeSelection)\n        selectedNode = sel.node;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        if (NodeSelection.isSelectable(node)) {\n            if (selectedNode && sel.$from.depth > 0 &&\n                i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n                selectAt = $pos.before(sel.$from.depth);\n            else\n                selectAt = $pos.before(i);\n            break;\n        }\n    }\n    if (selectAt != null) {\n        updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n    return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n        (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside));\n}\nfunction handleDoubleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleDoubleClick\", f => f(view, pos, event));\n}\nfunction handleTripleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n        defaultTripleClick(view, inside, event);\n}\nfunction defaultTripleClick(view, inside, event) {\n    if (event.button != 0)\n        return false;\n    let doc = view.state.doc;\n    if (inside == -1) {\n        if (doc.inlineContent) {\n            updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n            return true;\n        }\n        return false;\n    }\n    let $pos = doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        let nodePos = $pos.before(i);\n        if (node.inlineContent)\n            updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\");\n        else if (NodeSelection.isSelectable(node))\n            updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\");\n        else\n            continue;\n        return true;\n    }\n}\nfunction forceDOMFlush(view) {\n    return endComposition(view);\n}\nconst selectNodeModifier = mac ? \"metaKey\" : \"ctrlKey\";\nhandlers.mousedown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.shiftKey;\n    let flushed = forceDOMFlush(view);\n    let now = Date.now(), type = \"singleClick\";\n    if (now - view.input.lastClick.time < 500 && isNear(event, view.input.lastClick) && !event[selectNodeModifier]) {\n        if (view.input.lastClick.type == \"singleClick\")\n            type = \"doubleClick\";\n        else if (view.input.lastClick.type == \"doubleClick\")\n            type = \"tripleClick\";\n    }\n    view.input.lastClick = { time: now, x: event.clientX, y: event.clientY, type };\n    let pos = view.posAtCoords(eventCoords(event));\n    if (!pos)\n        return;\n    if (type == \"singleClick\") {\n        if (view.input.mouseDown)\n            view.input.mouseDown.done();\n        view.input.mouseDown = new MouseDown(view, pos, event, !!flushed);\n    }\n    else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"pointer\");\n    }\n};\nclass MouseDown {\n    constructor(view, pos, event, flushed) {\n        this.view = view;\n        this.pos = pos;\n        this.event = event;\n        this.flushed = flushed;\n        this.delayedSelectionSync = false;\n        this.mightDrag = null;\n        this.startDoc = view.state.doc;\n        this.selectNode = !!event[selectNodeModifier];\n        this.allowDefault = event.shiftKey;\n        let targetNode, targetPos;\n        if (pos.inside > -1) {\n            targetNode = view.state.doc.nodeAt(pos.inside);\n            targetPos = pos.inside;\n        }\n        else {\n            let $pos = view.state.doc.resolve(pos.pos);\n            targetNode = $pos.parent;\n            targetPos = $pos.depth ? $pos.before() : 0;\n        }\n        const target = flushed ? null : event.target;\n        const targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n        this.target = targetDesc ? targetDesc.dom : null;\n        let { selection } = view.state;\n        if (event.button == 0 &&\n            targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n            selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n            this.mightDrag = {\n                node: targetNode,\n                pos: targetPos,\n                addAttr: !!(this.target && !this.target.draggable),\n                setUneditable: !!(this.target && gecko && !this.target.hasAttribute(\"contentEditable\"))\n            };\n        if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.draggable = true;\n            if (this.mightDrag.setUneditable)\n                setTimeout(() => {\n                    if (this.view.input.mouseDown == this)\n                        this.target.setAttribute(\"contentEditable\", \"false\");\n                }, 20);\n            this.view.domObserver.start();\n        }\n        view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        setSelectionOrigin(view, \"pointer\");\n    }\n    done() {\n        this.view.root.removeEventListener(\"mouseup\", this.up);\n        this.view.root.removeEventListener(\"mousemove\", this.move);\n        if (this.mightDrag && this.target) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.removeAttribute(\"draggable\");\n            if (this.mightDrag.setUneditable)\n                this.target.removeAttribute(\"contentEditable\");\n            this.view.domObserver.start();\n        }\n        if (this.delayedSelectionSync)\n            setTimeout(() => selectionToDOM(this.view));\n        this.view.input.mouseDown = null;\n    }\n    up(event) {\n        this.done();\n        if (!this.view.dom.contains(event.target))\n            return;\n        let pos = this.pos;\n        if (this.view.state.doc != this.startDoc)\n            pos = this.view.posAtCoords(eventCoords(event));\n        this.updateAllowDefault(event);\n        if (this.allowDefault || !pos) {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n        else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n            event.preventDefault();\n        }\n        else if (event.button == 0 &&\n            (this.flushed ||\n                // Safari ignores clicks on draggable elements\n                (safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n                // Chrome will sometimes treat a node selection as a\n                // cursor, but still report that the node is selected\n                // when asked through getSelection. You'll then get a\n                // situation where clicking at the point where that\n                // (hidden) cursor is doesn't change the selection, and\n                // thus doesn't get a reaction from ProseMirror. This\n                // works around that.\n                (chrome && !this.view.state.selection.visible &&\n                    Math.min(Math.abs(pos.pos - this.view.state.selection.from), Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n            updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n            event.preventDefault();\n        }\n        else {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n    }\n    move(event) {\n        this.updateAllowDefault(event);\n        setSelectionOrigin(this.view, \"pointer\");\n        if (event.buttons == 0)\n            this.done();\n    }\n    updateAllowDefault(event) {\n        if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n            Math.abs(this.event.y - event.clientY) > 4))\n            this.allowDefault = true;\n    }\n}\nhandlers.touchstart = view => {\n    view.input.lastTouch = Date.now();\n    forceDOMFlush(view);\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.touchmove = view => {\n    view.input.lastTouch = Date.now();\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.contextmenu = view => forceDOMFlush(view);\nfunction inOrNearComposition(view, event) {\n    if (view.composing)\n        return true;\n    // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n    // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n    // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n    // emitted. The keydown event triggers newline insertion, which we don't want.\n    // This method returns true if the keydown event should be ignored.\n    // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n    // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n    // This guards against the case where compositionend is triggered without the keyboard\n    // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n    // afterwards- we wouldn't want to ignore the keydown event in this case.\n    if (safari && Math.abs(event.timeStamp - view.input.compositionEndedAt) < 500) {\n        view.input.compositionEndedAt = -2e8;\n        return true;\n    }\n    return false;\n}\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = android ? 5000 : -1;\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n    if (!view.composing) {\n        view.domObserver.flush();\n        let { state } = view, $pos = state.selection.$from;\n        if (state.selection.empty &&\n            (state.storedMarks ||\n                (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n            // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n            view.markCursor = view.state.storedMarks || $pos.marks();\n            endComposition(view, true);\n            view.markCursor = null;\n        }\n        else {\n            endComposition(view);\n            // In firefox, if the cursor is after but outside a marked node,\n            // the inserted text won't inherit the marks. So this moves it\n            // inside if necessary.\n            if (gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n                let sel = view.domSelectionRange();\n                for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n                    let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n                    if (!before)\n                        break;\n                    if (before.nodeType == 3) {\n                        view.domSelection().collapse(before, before.nodeValue.length);\n                        break;\n                    }\n                    else {\n                        node = before;\n                        offset = -1;\n                    }\n                }\n            }\n        }\n        view.input.composing = true;\n    }\n    scheduleComposeEnd(view, timeoutComposition);\n};\neditHandlers.compositionend = (view, event) => {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = event.timeStamp;\n        view.input.compositionPendingChanges = view.domObserver.pendingRecords().length ? view.input.compositionID : 0;\n        if (view.input.compositionPendingChanges)\n            Promise.resolve().then(() => view.domObserver.flush());\n        view.input.compositionID++;\n        scheduleComposeEnd(view, 20);\n    }\n};\nfunction scheduleComposeEnd(view, delay) {\n    clearTimeout(view.input.composingTimeout);\n    if (delay > -1)\n        view.input.composingTimeout = setTimeout(() => endComposition(view), delay);\n}\nfunction clearComposition(view) {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = timestampFromCustomEvent();\n    }\n    while (view.input.compositionNodes.length > 0)\n        view.input.compositionNodes.pop().markParentsDirty();\n}\nfunction timestampFromCustomEvent() {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"event\", true, true);\n    return event.timeStamp;\n}\n/**\n@internal\n*/\nfunction endComposition(view, forceUpdate = false) {\n    if (android && view.domObserver.flushingSoon >= 0)\n        return;\n    view.domObserver.forceFlush();\n    clearComposition(view);\n    if (forceUpdate || view.docView && view.docView.dirty) {\n        let sel = selectionFromDOM(view);\n        if (sel && !sel.eq(view.state.selection))\n            view.dispatch(view.state.tr.setSelection(sel));\n        else\n            view.updateState(view.state);\n        return true;\n    }\n    return false;\n}\nfunction captureCopy(view, dom) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    if (!view.dom.parentNode)\n        return;\n    let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n    wrap.appendChild(dom);\n    wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    let sel = getSelection(), range = document.createRange();\n    range.selectNodeContents(dom);\n    // Done because IE will fire a selectionchange moving the selection\n    // to its start when removeAllRanges is called and the editor still\n    // has focus (which will mess up the editor's selection state).\n    view.dom.blur();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    setTimeout(() => {\n        if (wrap.parentNode)\n            wrap.parentNode.removeChild(wrap);\n        view.focus();\n    }, 50);\n}\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (ie && ie_version < 15) ||\n    (ios && webkit_version < 604);\nhandlers.copy = editHandlers.cut = (view, _event) => {\n    let event = _event;\n    let sel = view.state.selection, cut = event.type == \"cut\";\n    if (sel.empty)\n        return;\n    // IE and Edge's clipboard interface is completely broken\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let slice = sel.content(), { dom, text } = serializeForClipboard(view, slice);\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/html\", dom.innerHTML);\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, dom);\n    }\n    if (cut)\n        view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"));\n};\nfunction sliceSingleNode(slice) {\n    return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null;\n}\nfunction capturePaste(view, event) {\n    if (!view.dom.parentNode)\n        return;\n    let plainText = view.input.shiftKey || view.state.selection.$from.parent.type.spec.code;\n    let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n    if (!plainText)\n        target.contentEditable = \"true\";\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    setTimeout(() => {\n        view.focus();\n        if (target.parentNode)\n            target.parentNode.removeChild(target);\n        if (plainText)\n            doPaste(view, target.value, null, plain, event);\n        else\n            doPaste(view, target.textContent, target.innerHTML, plain, event);\n    }, 50);\n}\nfunction doPaste(view, text, html, preferPlain, event) {\n    let slice = parseFromClipboard(view, text, html, preferPlain, view.state.selection.$from);\n    if (view.someProp(\"handlePaste\", f => f(view, event, slice || Slice.empty)))\n        return true;\n    if (!slice)\n        return false;\n    let singleNode = sliceSingleNode(slice);\n    let tr = singleNode\n        ? view.state.tr.replaceSelectionWith(singleNode, preferPlain)\n        : view.state.tr.replaceSelection(slice);\n    view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n    return true;\n}\nfunction getText(clipboardData) {\n    let text = clipboardData.getData(\"text/plain\") || clipboardData.getData(\"Text\");\n    if (text)\n        return text;\n    let uris = clipboardData.getData(\"text/uri-list\");\n    return uris ? uris.replace(/\\r?\\n/g, \" \") : \"\";\n}\neditHandlers.paste = (view, _event) => {\n    let event = _event;\n    // Handling paste from JavaScript during composition is very poorly\n    // handled by browsers, so as a dodgy but preferable kludge, we just\n    // let the browser do its native thing there, except on Android,\n    // where the editor is almost always composing.\n    if (view.composing && !android)\n        return;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    if (data && doPaste(view, getText(data), data.getData(\"text/html\"), plain, event))\n        event.preventDefault();\n    else\n        capturePaste(view, event);\n};\nclass Dragging {\n    constructor(slice, move, node) {\n        this.slice = slice;\n        this.move = move;\n        this.node = node;\n    }\n}\nconst dragCopyModifier = mac ? \"altKey\" : \"ctrlKey\";\nhandlers.dragstart = (view, _event) => {\n    let event = _event;\n    let mouseDown = view.input.mouseDown;\n    if (mouseDown)\n        mouseDown.done();\n    if (!event.dataTransfer)\n        return;\n    let sel = view.state.selection;\n    let pos = sel.empty ? null : view.posAtCoords(eventCoords(event));\n    let node;\n    if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1 : sel.to)) ;\n    else if (mouseDown && mouseDown.mightDrag) {\n        node = NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos);\n    }\n    else if (event.target && event.target.nodeType == 1) {\n        let desc = view.docView.nearestDesc(event.target, true);\n        if (desc && desc.node.type.spec.draggable && desc != view.docView)\n            node = NodeSelection.create(view.state.doc, desc.posBefore);\n    }\n    let slice = (node || view.state.selection).content(), { dom, text } = serializeForClipboard(view, slice);\n    event.dataTransfer.clearData();\n    event.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n    // See https://github.com/ProseMirror/prosemirror/issues/1156\n    event.dataTransfer.effectAllowed = \"copyMove\";\n    if (!brokenClipboardAPI)\n        event.dataTransfer.setData(\"text/plain\", text);\n    view.dragging = new Dragging(slice, !event[dragCopyModifier], node);\n};\nhandlers.dragend = view => {\n    let dragging = view.dragging;\n    window.setTimeout(() => {\n        if (view.dragging == dragging)\n            view.dragging = null;\n    }, 50);\n};\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault();\neditHandlers.drop = (view, _event) => {\n    let event = _event;\n    let dragging = view.dragging;\n    view.dragging = null;\n    if (!event.dataTransfer)\n        return;\n    let eventPos = view.posAtCoords(eventCoords(event));\n    if (!eventPos)\n        return;\n    let $mouse = view.state.doc.resolve(eventPos.pos);\n    let slice = dragging && dragging.slice;\n    if (slice) {\n        view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    }\n    else {\n        slice = parseFromClipboard(view, getText(event.dataTransfer), brokenClipboardAPI ? null : event.dataTransfer.getData(\"text/html\"), false, $mouse);\n    }\n    let move = !!(dragging && !event[dragCopyModifier]);\n    if (view.someProp(\"handleDrop\", f => f(view, event, slice || Slice.empty, move))) {\n        event.preventDefault();\n        return;\n    }\n    if (!slice)\n        return;\n    event.preventDefault();\n    let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n    if (insertPos == null)\n        insertPos = $mouse.pos;\n    let tr = view.state.tr;\n    if (move) {\n        let { node } = dragging;\n        if (node)\n            node.replace(tr);\n        else\n            tr.deleteSelection();\n    }\n    let pos = tr.mapping.map(insertPos);\n    let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n    let beforeInsert = tr.doc;\n    if (isNode)\n        tr.replaceRangeWith(pos, pos, slice.content.firstChild);\n    else\n        tr.replaceRange(pos, pos, slice);\n    if (tr.doc.eq(beforeInsert))\n        return;\n    let $pos = tr.doc.resolve(pos);\n    if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n        $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n        tr.setSelection(new NodeSelection($pos));\n    }\n    else {\n        let end = tr.mapping.map(insertPos);\n        tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo);\n        tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n    }\n    view.focus();\n    view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\nhandlers.focus = view => {\n    view.input.lastFocus = Date.now();\n    if (!view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.add(\"ProseMirror-focused\");\n        view.domObserver.start();\n        view.focused = true;\n        setTimeout(() => {\n            if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.domSelectionRange()))\n                selectionToDOM(view);\n        }, 20);\n    }\n};\nhandlers.blur = (view, _event) => {\n    let event = _event;\n    if (view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.remove(\"ProseMirror-focused\");\n        view.domObserver.start();\n        if (event.relatedTarget && view.dom.contains(event.relatedTarget))\n            view.domObserver.currentSelection.clear();\n        view.focused = false;\n    }\n};\nhandlers.beforeinput = (view, _event) => {\n    let event = _event;\n    // We should probably do more with beforeinput events, but support\n    // is so spotty that I'm still waiting to see where they are going.\n    // Very specific hack to deal with backspace sometimes failing on\n    // Chrome Android when after an uneditable node.\n    if (chrome && android && event.inputType == \"deleteContentBackward\") {\n        view.domObserver.flushSoon();\n        let { domChangeCount } = view.input;\n        setTimeout(() => {\n            if (view.input.domChangeCount != domChangeCount)\n                return; // Event already had some effect\n            // This bug tends to close the virtual keyboard, so we refocus\n            view.dom.blur();\n            view.focus();\n            if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\"))))\n                return;\n            let { $cursor } = view.state.selection;\n            // Crude approximation of backspace behavior when no command handled it\n            if ($cursor && $cursor.pos > 0)\n                view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView());\n        }, 50);\n    }\n};\n// Make sure all handlers get registered\nfor (let prop in editHandlers)\n    handlers[prop] = editHandlers[prop];\n\nfunction compareObjs(a, b) {\n    if (a == b)\n        return true;\n    for (let p in a)\n        if (a[p] !== b[p])\n            return false;\n    for (let p in b)\n        if (!(p in a))\n            return false;\n    return true;\n}\nclass WidgetType {\n    constructor(toDOM, spec) {\n        this.toDOM = toDOM;\n        this.spec = spec || noSpec;\n        this.side = this.spec.side || 0;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let { pos, deleted } = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n        return deleted ? null : new Decoration(pos - offset, pos - offset, this);\n    }\n    valid() { return true; }\n    eq(other) {\n        return this == other ||\n            (other instanceof WidgetType &&\n                (this.spec.key && this.spec.key == other.spec.key ||\n                    this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)));\n    }\n    destroy(node) {\n        if (this.spec.destroy)\n            this.spec.destroy(node);\n    }\n}\nclass InlineType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n        let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n        return from >= to ? null : new Decoration(from, to, this);\n    }\n    valid(_, span) { return span.from < span.to; }\n    eq(other) {\n        return this == other ||\n            (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    static is(span) { return span.type instanceof InlineType; }\n    destroy() { }\n}\nclass NodeType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.mapResult(span.from + oldOffset, 1);\n        if (from.deleted)\n            return null;\n        let to = mapping.mapResult(span.to + oldOffset, -1);\n        if (to.deleted || to.pos <= from.pos)\n            return null;\n        return new Decoration(from.pos - offset, to.pos - offset, this);\n    }\n    valid(node, span) {\n        let { index, offset } = node.content.findIndex(span.from), child;\n        return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to;\n    }\n    eq(other) {\n        return this == other ||\n            (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    destroy() { }\n}\n/**\nDecoration objects can be provided to the view through the\n[`decorations` prop](https://prosemirror.net/docs/ref/#view.EditorProps.decorations). They come in\nseveral variants—see the static members of this class for details.\n*/\nclass Decoration {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start position of the decoration.\n    */\n    from, \n    /**\n    The end position. Will be the same as `from` for [widget\n    decorations](https://prosemirror.net/docs/ref/#view.Decoration^widget).\n    */\n    to, \n    /**\n    @internal\n    */\n    type) {\n        this.from = from;\n        this.to = to;\n        this.type = type;\n    }\n    /**\n    @internal\n    */\n    copy(from, to) {\n        return new Decoration(from, to, this.type);\n    }\n    /**\n    @internal\n    */\n    eq(other, offset = 0) {\n        return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to;\n    }\n    /**\n    @internal\n    */\n    map(mapping, offset, oldOffset) {\n        return this.type.map(mapping, this, offset, oldOffset);\n    }\n    /**\n    Creates a widget decoration, which is a DOM node that's shown in\n    the document at the given position. It is recommended that you\n    delay rendering the widget by passing a function that will be\n    called when the widget is actually drawn in a view, but you can\n    also directly pass a DOM node. `getPos` can be used to find the\n    widget's current document position.\n    */\n    static widget(pos, toDOM, spec) {\n        return new Decoration(pos, pos, new WidgetType(toDOM, spec));\n    }\n    /**\n    Creates an inline decoration, which adds the given attributes to\n    each inline node between `from` and `to`.\n    */\n    static inline(from, to, attrs, spec) {\n        return new Decoration(from, to, new InlineType(attrs, spec));\n    }\n    /**\n    Creates a node decoration. `from` and `to` should point precisely\n    before and after a node in the document. That node, and only that\n    node, will receive the given attributes.\n    */\n    static node(from, to, attrs, spec) {\n        return new Decoration(from, to, new NodeType(attrs, spec));\n    }\n    /**\n    The spec provided when creating this decoration. Can be useful\n    if you've stored extra information in that object.\n    */\n    get spec() { return this.type.spec; }\n    /**\n    @internal\n    */\n    get inline() { return this.type instanceof InlineType; }\n    /**\n    @internal\n    */\n    get widget() { return this.type instanceof WidgetType; }\n}\nconst none = [], noSpec = {};\n/**\nA collection of [decorations](https://prosemirror.net/docs/ref/#view.Decoration), organized in such\na way that the drawing algorithm can efficiently use and compare\nthem. This is a persistent data structure—it is not modified,\nupdates create a new value.\n*/\nclass DecorationSet {\n    /**\n    @internal\n    */\n    constructor(local, children) {\n        this.local = local.length ? local : none;\n        this.children = children.length ? children : none;\n    }\n    /**\n    Create a set of decorations, using the structure of the given\n    document. This will consume (modify) the `decorations` array, so\n    you must make a copy if you want need to preserve that.\n    */\n    static create(doc, decorations) {\n        return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty;\n    }\n    /**\n    Find all decorations in this set which touch the given range\n    (including decorations that start or end directly at the\n    boundaries) and match the given predicate on their spec. When\n    `start` and `end` are omitted, all decorations in the set are\n    considered. When `predicate` isn't given, all decorations are\n    assumed to match.\n    */\n    find(start, end, predicate) {\n        let result = [];\n        this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n        return result;\n    }\n    findInner(start, end, result, offset, predicate) {\n        for (let i = 0; i < this.local.length; i++) {\n            let span = this.local[i];\n            if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n                result.push(span.copy(span.from + offset, span.to + offset));\n        }\n        for (let i = 0; i < this.children.length; i += 3) {\n            if (this.children[i] < end && this.children[i + 1] > start) {\n                let childOff = this.children[i] + 1;\n                this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n            }\n        }\n    }\n    /**\n    Map the set of decorations in response to a change in the\n    document.\n    */\n    map(mapping, doc, options) {\n        if (this == empty || mapping.maps.length == 0)\n            return this;\n        return this.mapInner(mapping, doc, 0, 0, options || noSpec);\n    }\n    /**\n    @internal\n    */\n    mapInner(mapping, node, offset, oldOffset, options) {\n        let newLocal;\n        for (let i = 0; i < this.local.length; i++) {\n            let mapped = this.local[i].map(mapping, offset, oldOffset);\n            if (mapped && mapped.type.valid(node, mapped))\n                (newLocal || (newLocal = [])).push(mapped);\n            else if (options.onRemove)\n                options.onRemove(this.local[i].spec);\n        }\n        if (this.children.length)\n            return mapChildren(this.children, newLocal || [], mapping, node, offset, oldOffset, options);\n        else\n            return newLocal ? new DecorationSet(newLocal.sort(byPos), none) : empty;\n    }\n    /**\n    Add the given array of decorations to the ones in the set,\n    producing a new set. Consumes the `decorations` array. Needs\n    access to the current document to create the appropriate tree\n    structure.\n    */\n    add(doc, decorations) {\n        if (!decorations.length)\n            return this;\n        if (this == empty)\n            return DecorationSet.create(doc, decorations);\n        return this.addInner(doc, decorations, 0);\n    }\n    addInner(doc, decorations, offset) {\n        let children, childIndex = 0;\n        doc.forEach((childNode, childOffset) => {\n            let baseOffset = childOffset + offset, found;\n            if (!(found = takeSpansForNode(decorations, childNode, baseOffset)))\n                return;\n            if (!children)\n                children = this.children.slice();\n            while (childIndex < children.length && children[childIndex] < childOffset)\n                childIndex += 3;\n            if (children[childIndex] == childOffset)\n                children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1);\n            else\n                children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec));\n            childIndex += 3;\n        });\n        let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n        for (let i = 0; i < local.length; i++)\n            if (!local[i].type.valid(doc, local[i]))\n                local.splice(i--, 1);\n        return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local, children || this.children);\n    }\n    /**\n    Create a new set that contains the decorations in this set, minus\n    the ones in the given array.\n    */\n    remove(decorations) {\n        if (decorations.length == 0 || this == empty)\n            return this;\n        return this.removeInner(decorations, 0);\n    }\n    removeInner(decorations, offset) {\n        let children = this.children, local = this.local;\n        for (let i = 0; i < children.length; i += 3) {\n            let found;\n            let from = children[i] + offset, to = children[i + 1] + offset;\n            for (let j = 0, span; j < decorations.length; j++)\n                if (span = decorations[j]) {\n                    if (span.from > from && span.to < to) {\n                        decorations[j] = null;\n                        (found || (found = [])).push(span);\n                    }\n                }\n            if (!found)\n                continue;\n            if (children == this.children)\n                children = this.children.slice();\n            let removed = children[i + 2].removeInner(found, from + 1);\n            if (removed != empty) {\n                children[i + 2] = removed;\n            }\n            else {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        }\n        if (local.length)\n            for (let i = 0, span; i < decorations.length; i++)\n                if (span = decorations[i]) {\n                    for (let j = 0; j < local.length; j++)\n                        if (local[j].eq(span, offset)) {\n                            if (local == this.local)\n                                local = this.local.slice();\n                            local.splice(j--, 1);\n                        }\n                }\n        if (children == this.children && local == this.local)\n            return this;\n        return local.length || children.length ? new DecorationSet(local, children) : empty;\n    }\n    /**\n    @internal\n    */\n    forChild(offset, node) {\n        if (this == empty)\n            return this;\n        if (node.isLeaf)\n            return DecorationSet.empty;\n        let child, local;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] >= offset) {\n                if (this.children[i] == offset)\n                    child = this.children[i + 2];\n                break;\n            }\n        let start = offset + 1, end = start + node.content.size;\n        for (let i = 0; i < this.local.length; i++) {\n            let dec = this.local[i];\n            if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n                let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start;\n                if (from < to)\n                    (local || (local = [])).push(dec.copy(from, to));\n            }\n        }\n        if (local) {\n            let localSet = new DecorationSet(local.sort(byPos), none);\n            return child ? new DecorationGroup([localSet, child]) : localSet;\n        }\n        return child || empty;\n    }\n    /**\n    @internal\n    */\n    eq(other) {\n        if (this == other)\n            return true;\n        if (!(other instanceof DecorationSet) ||\n            this.local.length != other.local.length ||\n            this.children.length != other.children.length)\n            return false;\n        for (let i = 0; i < this.local.length; i++)\n            if (!this.local[i].eq(other.local[i]))\n                return false;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] != other.children[i] ||\n                this.children[i + 1] != other.children[i + 1] ||\n                !this.children[i + 2].eq(other.children[i + 2]))\n                return false;\n        return true;\n    }\n    /**\n    @internal\n    */\n    locals(node) {\n        return removeOverlap(this.localsInner(node));\n    }\n    /**\n    @internal\n    */\n    localsInner(node) {\n        if (this == empty)\n            return none;\n        if (node.inlineContent || !this.local.some(InlineType.is))\n            return this.local;\n        let result = [];\n        for (let i = 0; i < this.local.length; i++) {\n            if (!(this.local[i].type instanceof InlineType))\n                result.push(this.local[i]);\n        }\n        return result;\n    }\n}\n/**\nThe empty set of decorations.\n*/\nDecorationSet.empty = new DecorationSet([], []);\n/**\n@internal\n*/\nDecorationSet.removeOverlap = removeOverlap;\nconst empty = DecorationSet.empty;\n// An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n    constructor(members) {\n        this.members = members;\n    }\n    map(mapping, doc) {\n        const mappedDecos = this.members.map(member => member.map(mapping, doc, noSpec));\n        return DecorationGroup.from(mappedDecos);\n    }\n    forChild(offset, child) {\n        if (child.isLeaf)\n            return DecorationSet.empty;\n        let found = [];\n        for (let i = 0; i < this.members.length; i++) {\n            let result = this.members[i].forChild(offset, child);\n            if (result == empty)\n                continue;\n            if (result instanceof DecorationGroup)\n                found = found.concat(result.members);\n            else\n                found.push(result);\n        }\n        return DecorationGroup.from(found);\n    }\n    eq(other) {\n        if (!(other instanceof DecorationGroup) ||\n            other.members.length != this.members.length)\n            return false;\n        for (let i = 0; i < this.members.length; i++)\n            if (!this.members[i].eq(other.members[i]))\n                return false;\n        return true;\n    }\n    locals(node) {\n        let result, sorted = true;\n        for (let i = 0; i < this.members.length; i++) {\n            let locals = this.members[i].localsInner(node);\n            if (!locals.length)\n                continue;\n            if (!result) {\n                result = locals;\n            }\n            else {\n                if (sorted) {\n                    result = result.slice();\n                    sorted = false;\n                }\n                for (let j = 0; j < locals.length; j++)\n                    result.push(locals[j]);\n            }\n        }\n        return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none;\n    }\n    // Create a group for the given array of decoration sets, or return\n    // a single set when possible.\n    static from(members) {\n        switch (members.length) {\n            case 0: return empty;\n            case 1: return members[0];\n            default: return new DecorationGroup(members.every(m => m instanceof DecorationSet) ? members :\n                members.reduce((r, m) => r.concat(m instanceof DecorationSet ? m : m.members), []));\n        }\n    }\n}\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n    let children = oldChildren.slice();\n    // Mark the children that are directly touched by changes, and\n    // move those that are after the changes.\n    for (let i = 0, baseOffset = oldOffset; i < mapping.maps.length; i++) {\n        let moved = 0;\n        mapping.maps[i].forEach((oldStart, oldEnd, newStart, newEnd) => {\n            let dSize = (newEnd - newStart) - (oldEnd - oldStart);\n            for (let i = 0; i < children.length; i += 3) {\n                let end = children[i + 1];\n                if (end < 0 || oldStart > end + baseOffset - moved)\n                    continue;\n                let start = children[i] + baseOffset - moved;\n                if (oldEnd >= start) {\n                    children[i + 1] = oldStart <= start ? -2 : -1;\n                }\n                else if (oldStart >= baseOffset && dSize) {\n                    children[i] += dSize;\n                    children[i + 1] += dSize;\n                }\n            }\n            moved += dSize;\n        });\n        baseOffset = mapping.maps[i].map(baseOffset, -1);\n    }\n    // Find the child nodes that still correspond to a single node,\n    // recursively call mapInner on them and update their positions.\n    let mustRebuild = false;\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] < 0) { // Touched nodes\n            if (children[i + 1] == -2) {\n                mustRebuild = true;\n                children[i + 1] = -1;\n                continue;\n            }\n            let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset;\n            if (fromLocal < 0 || fromLocal >= node.content.size) {\n                mustRebuild = true;\n                continue;\n            }\n            // Must read oldChildren because children was tagged with -1\n            let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset;\n            let { index, offset: childOffset } = node.content.findIndex(fromLocal);\n            let childNode = node.maybeChild(index);\n            if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n                let mapped = children[i + 2]\n                    .mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options);\n                if (mapped != empty) {\n                    children[i] = fromLocal;\n                    children[i + 1] = toLocal;\n                    children[i + 2] = mapped;\n                }\n                else {\n                    children[i + 1] = -2;\n                    mustRebuild = true;\n                }\n            }\n            else {\n                mustRebuild = true;\n            }\n        }\n    // Remaining children must be collected and rebuilt into the appropriate structure\n    if (mustRebuild) {\n        let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal, mapping, offset, oldOffset, options);\n        let built = buildTree(decorations, node, 0, options);\n        newLocal = built.local;\n        for (let i = 0; i < children.length; i += 3)\n            if (children[i + 1] < 0) {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        for (let i = 0, j = 0; i < built.children.length; i += 3) {\n            let from = built.children[i];\n            while (j < children.length && children[j] < from)\n                j += 3;\n            children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2]);\n        }\n    }\n    return new DecorationSet(newLocal.sort(byPos), children);\n}\nfunction moveSpans(spans, offset) {\n    if (!offset || !spans.length)\n        return spans;\n    let result = [];\n    for (let i = 0; i < spans.length; i++) {\n        let span = spans[i];\n        result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n    }\n    return result;\n}\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n    // Gather all decorations from the remaining marked children\n    function gather(set, oldOffset) {\n        for (let i = 0; i < set.local.length; i++) {\n            let mapped = set.local[i].map(mapping, offset, oldOffset);\n            if (mapped)\n                decorations.push(mapped);\n            else if (options.onRemove)\n                options.onRemove(set.local[i].spec);\n        }\n        for (let i = 0; i < set.children.length; i += 3)\n            gather(set.children[i + 2], set.children[i] + oldOffset + 1);\n    }\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] == -1)\n            gather(children[i + 2], oldChildren[i] + oldOffset + 1);\n    return decorations;\n}\nfunction takeSpansForNode(spans, node, offset) {\n    if (node.isLeaf)\n        return null;\n    let end = offset + node.nodeSize, found = null;\n    for (let i = 0, span; i < spans.length; i++) {\n        if ((span = spans[i]) && span.from > offset && span.to < end) {\n            (found || (found = [])).push(span);\n            spans[i] = null;\n        }\n    }\n    return found;\n}\nfunction withoutNulls(array) {\n    let result = [];\n    for (let i = 0; i < array.length; i++)\n        if (array[i] != null)\n            result.push(array[i]);\n    return result;\n}\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n    let children = [], hasNulls = false;\n    node.forEach((childNode, localStart) => {\n        let found = takeSpansForNode(spans, childNode, localStart + offset);\n        if (found) {\n            hasNulls = true;\n            let subtree = buildTree(found, childNode, offset + localStart + 1, options);\n            if (subtree != empty)\n                children.push(localStart, localStart + childNode.nodeSize, subtree);\n        }\n    });\n    let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n    for (let i = 0; i < locals.length; i++)\n        if (!locals[i].type.valid(node, locals[i])) {\n            if (options.onRemove)\n                options.onRemove(locals[i].spec);\n            locals.splice(i--, 1);\n        }\n    return locals.length || children.length ? new DecorationSet(locals, children) : empty;\n}\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n    return a.from - b.from || a.to - b.to;\n}\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n    let working = spans;\n    for (let i = 0; i < working.length - 1; i++) {\n        let span = working[i];\n        if (span.from != span.to)\n            for (let j = i + 1; j < working.length; j++) {\n                let next = working[j];\n                if (next.from == span.from) {\n                    if (next.to != span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // Followed by a partially overlapping larger span. Split that\n                        // span.\n                        working[j] = next.copy(next.from, span.to);\n                        insertAhead(working, j + 1, next.copy(span.to, next.to));\n                    }\n                    continue;\n                }\n                else {\n                    if (next.from < span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // The end of this one overlaps with a subsequent span. Split\n                        // this one.\n                        working[i] = span.copy(span.from, next.from);\n                        insertAhead(working, j, span.copy(next.from, span.to));\n                    }\n                    break;\n                }\n            }\n    }\n    return working;\n}\nfunction insertAhead(array, i, deco) {\n    while (i < array.length && byPos(deco, array[i]) > 0)\n        i++;\n    array.splice(i, 0, deco);\n}\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n    let found = [];\n    view.someProp(\"decorations\", f => {\n        let result = f(view.state);\n        if (result && result != empty)\n            found.push(result);\n    });\n    if (view.cursorWrapper)\n        found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]));\n    return DecorationGroup.from(found);\n}\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    characterDataOldValue: true,\n    attributes: true,\n    attributeOldValue: true,\n    subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = ie && ie_version <= 11;\nclass SelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    set(sel) {\n        this.anchorNode = sel.anchorNode;\n        this.anchorOffset = sel.anchorOffset;\n        this.focusNode = sel.focusNode;\n        this.focusOffset = sel.focusOffset;\n    }\n    clear() {\n        this.anchorNode = this.focusNode = null;\n    }\n    eq(sel) {\n        return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n            sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset;\n    }\n}\nclass DOMObserver {\n    constructor(view, handleDOMChange) {\n        this.view = view;\n        this.handleDOMChange = handleDOMChange;\n        this.queue = [];\n        this.flushingSoon = -1;\n        this.observer = null;\n        this.currentSelection = new SelectionState;\n        this.onCharData = null;\n        this.suppressingSelectionUpdates = false;\n        this.observer = window.MutationObserver &&\n            new window.MutationObserver(mutations => {\n                for (let i = 0; i < mutations.length; i++)\n                    this.queue.push(mutations[i]);\n                // IE11 will sometimes (on backspacing out a single character\n                // text node after a BR node) call the observer callback\n                // before actually updating the DOM, which will cause\n                // ProseMirror to miss the change (see #930)\n                if (ie && ie_version <= 11 && mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                    this.flushSoon();\n                else\n                    this.flush();\n            });\n        if (useCharData) {\n            this.onCharData = e => {\n                this.queue.push({ target: e.target, type: \"characterData\", oldValue: e.prevValue });\n                this.flushSoon();\n            };\n        }\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n    }\n    flushSoon() {\n        if (this.flushingSoon < 0)\n            this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.flushingSoon > -1) {\n            window.clearTimeout(this.flushingSoon);\n            this.flushingSoon = -1;\n            this.flush();\n        }\n    }\n    start() {\n        if (this.observer) {\n            this.observer.takeRecords();\n            this.observer.observe(this.view.dom, observeOptions);\n        }\n        if (this.onCharData)\n            this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.connectSelection();\n    }\n    stop() {\n        if (this.observer) {\n            let take = this.observer.takeRecords();\n            if (take.length) {\n                for (let i = 0; i < take.length; i++)\n                    this.queue.push(take[i]);\n                window.setTimeout(() => this.flush(), 20);\n            }\n            this.observer.disconnect();\n        }\n        if (this.onCharData)\n            this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.disconnectSelection();\n    }\n    connectSelection() {\n        this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    disconnectSelection() {\n        this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    suppressSelectionUpdates() {\n        this.suppressingSelectionUpdates = true;\n        setTimeout(() => this.suppressingSelectionUpdates = false, 50);\n    }\n    onSelectionChange() {\n        if (!hasFocusAndSelection(this.view))\n            return;\n        if (this.suppressingSelectionUpdates)\n            return selectionToDOM(this.view);\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        if (ie && ie_version <= 11 && !this.view.state.selection.empty) {\n            let sel = this.view.domSelectionRange();\n            // Selection.isCollapsed isn't reliable on IE\n            if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                return this.flushSoon();\n        }\n        this.flush();\n    }\n    setCurSelection() {\n        this.currentSelection.set(this.view.domSelectionRange());\n    }\n    ignoreSelectionChange(sel) {\n        if (!sel.focusNode)\n            return true;\n        let ancestors = new Set, container;\n        for (let scan = sel.focusNode; scan; scan = parentNode(scan))\n            ancestors.add(scan);\n        for (let scan = sel.anchorNode; scan; scan = parentNode(scan))\n            if (ancestors.has(scan)) {\n                container = scan;\n                break;\n            }\n        let desc = container && this.view.docView.nearestDesc(container);\n        if (desc && desc.ignoreMutation({\n            type: \"selection\",\n            target: container.nodeType == 3 ? container.parentNode : container\n        })) {\n            this.setCurSelection();\n            return true;\n        }\n    }\n    pendingRecords() {\n        if (this.observer)\n            for (let mut of this.observer.takeRecords())\n                this.queue.push(mut);\n        return this.queue;\n    }\n    flush() {\n        let { view } = this;\n        if (!view.docView || this.flushingSoon > -1)\n            return;\n        let mutations = this.pendingRecords();\n        if (mutations.length)\n            this.queue = [];\n        let sel = view.domSelectionRange();\n        let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasFocusAndSelection(view) && !this.ignoreSelectionChange(sel);\n        let from = -1, to = -1, typeOver = false, added = [];\n        if (view.editable) {\n            for (let i = 0; i < mutations.length; i++) {\n                let result = this.registerMutation(mutations[i], added);\n                if (result) {\n                    from = from < 0 ? result.from : Math.min(result.from, from);\n                    to = to < 0 ? result.to : Math.max(result.to, to);\n                    if (result.typeOver)\n                        typeOver = true;\n                }\n            }\n        }\n        if (gecko && added.length > 1) {\n            let brs = added.filter(n => n.nodeName == \"BR\");\n            if (brs.length == 2) {\n                let a = brs[0], b = brs[1];\n                if (a.parentNode && a.parentNode.parentNode == b.parentNode)\n                    b.remove();\n                else\n                    a.remove();\n            }\n        }\n        let readSel = null;\n        // If it looks like the browser has reset the selection to the\n        // start of the document after focus, restore the selection from\n        // the state\n        if (from < 0 && newSel && view.input.lastFocus > Date.now() - 200 &&\n            Math.max(view.input.lastTouch, view.input.lastClick.time) < Date.now() - 300 &&\n            selectionCollapsed(sel) && (readSel = selectionFromDOM(view)) &&\n            readSel.eq(Selection.near(view.state.doc.resolve(0), 1))) {\n            view.input.lastFocus = 0;\n            selectionToDOM(view);\n            this.currentSelection.set(sel);\n            view.scrollToSelection();\n        }\n        else if (from > -1 || newSel) {\n            if (from > -1) {\n                view.docView.markDirty(from, to);\n                checkCSS(view);\n            }\n            this.handleDOMChange(from, to, typeOver, added);\n            if (view.docView && view.docView.dirty)\n                view.updateState(view.state);\n            else if (!this.currentSelection.eq(sel))\n                selectionToDOM(view);\n            this.currentSelection.set(sel);\n        }\n    }\n    registerMutation(mut, added) {\n        // Ignore mutations inside nodes that were already noted as inserted\n        if (added.indexOf(mut.target) > -1)\n            return null;\n        let desc = this.view.docView.nearestDesc(mut.target);\n        if (mut.type == \"attributes\" &&\n            (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n                // Firefox sometimes fires spurious events for null/empty styles\n                (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n            return null;\n        if (!desc || desc.ignoreMutation(mut))\n            return null;\n        if (mut.type == \"childList\") {\n            for (let i = 0; i < mut.addedNodes.length; i++)\n                added.push(mut.addedNodes[i]);\n            if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n                return { from: desc.posBefore, to: desc.posAfter };\n            let prev = mut.previousSibling, next = mut.nextSibling;\n            if (ie && ie_version <= 11 && mut.addedNodes.length) {\n                // IE11 gives us incorrect next/prev siblings for some\n                // insertions, so if there are added nodes, recompute those\n                for (let i = 0; i < mut.addedNodes.length; i++) {\n                    let { previousSibling, nextSibling } = mut.addedNodes[i];\n                    if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0)\n                        prev = previousSibling;\n                    if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0)\n                        next = nextSibling;\n                }\n            }\n            let fromOffset = prev && prev.parentNode == mut.target\n                ? domIndex(prev) + 1 : 0;\n            let from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n            let toOffset = next && next.parentNode == mut.target\n                ? domIndex(next) : mut.target.childNodes.length;\n            let to = desc.localPosFromDOM(mut.target, toOffset, 1);\n            return { from, to };\n        }\n        else if (mut.type == \"attributes\") {\n            return { from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border };\n        }\n        else { // \"characterData\"\n            return {\n                from: desc.posAtStart,\n                to: desc.posAtEnd,\n                // An event was generated for a text change that didn't change\n                // any text. Mark the dom change to fall back to assuming the\n                // selection was typed over with an identical value if it can't\n                // find another change.\n                typeOver: mut.target.nodeValue == mut.oldValue\n            };\n        }\n    }\n}\nlet cssChecked = new WeakMap();\nlet cssCheckWarned = false;\nfunction checkCSS(view) {\n    if (cssChecked.has(view))\n        return;\n    cssChecked.set(view, null);\n    if (['normal', 'nowrap', 'pre-line'].indexOf(getComputedStyle(view.dom).whiteSpace) !== -1) {\n        view.requiresGeckoHackNode = gecko;\n        if (cssCheckWarned)\n            return;\n        console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\");\n        cssCheckWarned = true;\n    }\n}\n// Used to work around a Safari Selection/shadow DOM bug\n// Based on https://github.com/codemirror/dev/issues/414 fix\nfunction safariShadowSelectionRange(view) {\n    let found;\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    // Because Safari (at least in 2018-2022) doesn't provide regular\n    // access to the selection inside a shadowRoot, we have to perform a\n    // ridiculous hack to get at it—using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    view.dom.addEventListener(\"beforeinput\", read, true);\n    document.execCommand(\"indent\");\n    view.dom.removeEventListener(\"beforeinput\", read, true);\n    let anchorNode = found.startContainer, anchorOffset = found.startOffset;\n    let focusNode = found.endContainer, focusOffset = found.endOffset;\n    let currentAnchor = view.domAtPos(view.state.selection.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(currentAnchor.node, currentAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\nfunction parseBetween(view, from_, to_) {\n    let { node: parent, fromOffset, toOffset, from, to } = view.docView.parseRange(from_, to_);\n    let domSel = view.domSelectionRange();\n    let find;\n    let anchor = domSel.anchorNode;\n    if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n        find = [{ node: anchor, offset: domSel.anchorOffset }];\n        if (!selectionCollapsed(domSel))\n            find.push({ node: domSel.focusNode, offset: domSel.focusOffset });\n    }\n    // Work around issue in Chrome where backspacing sometimes replaces\n    // the deleted content with a random BR node (issues #799, #831)\n    if (chrome && view.input.lastKeyCode === 8) {\n        for (let off = toOffset; off > fromOffset; off--) {\n            let node = parent.childNodes[off - 1], desc = node.pmViewDesc;\n            if (node.nodeName == \"BR\" && !desc) {\n                toOffset = off;\n                break;\n            }\n            if (!desc || desc.size)\n                break;\n        }\n    }\n    let startDoc = view.state.doc;\n    let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    let $from = startDoc.resolve(from);\n    let sel = null, doc = parser.parse(parent, {\n        topNode: $from.parent,\n        topMatch: $from.parent.contentMatchAt($from.index()),\n        topOpen: true,\n        from: fromOffset,\n        to: toOffset,\n        preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n        findPositions: find,\n        ruleFromNode,\n        context: $from\n    });\n    if (find && find[0].pos != null) {\n        let anchor = find[0].pos, head = find[1] && find[1].pos;\n        if (head == null)\n            head = anchor;\n        sel = { anchor: anchor + from, head: head + from };\n    }\n    return { doc, sel, from, to };\n}\nfunction ruleFromNode(dom) {\n    let desc = dom.pmViewDesc;\n    if (desc) {\n        return desc.parseRule();\n    }\n    else if (dom.nodeName == \"BR\" && dom.parentNode) {\n        // Safari replaces the list item or table cell with a BR\n        // directly in the list node (?!) if you delete the last\n        // character in a list item or table cell (#708, #862)\n        if (safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n            let skip = document.createElement(\"div\");\n            skip.appendChild(document.createElement(\"li\"));\n            return { skip };\n        }\n        else if (dom.parentNode.lastChild == dom || safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n            return { ignore: true };\n        }\n    }\n    else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n        return { ignore: true };\n    }\n    return null;\n}\nconst isInline = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n    let compositionID = view.input.compositionPendingChanges || (view.composing ? view.input.compositionID : 0);\n    view.input.compositionPendingChanges = 0;\n    if (from < 0) {\n        let origin = view.input.lastSelectionTime > Date.now() - 50 ? view.input.lastSelectionOrigin : null;\n        let newSel = selectionFromDOM(view, origin);\n        if (newSel && !view.state.selection.eq(newSel)) {\n            if (chrome && android &&\n                view.input.lastKeyCode === 13 && Date.now() - 100 < view.input.lastKeyCodeTime &&\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\"))))\n                return;\n            let tr = view.state.tr.setSelection(newSel);\n            if (origin == \"pointer\")\n                tr.setMeta(\"pointer\", true);\n            else if (origin == \"key\")\n                tr.scrollIntoView();\n            if (compositionID)\n                tr.setMeta(\"composition\", compositionID);\n            view.dispatch(tr);\n        }\n        return;\n    }\n    let $before = view.state.doc.resolve(from);\n    let shared = $before.sharedDepth(to);\n    from = $before.before(shared + 1);\n    to = view.state.doc.resolve(to).after(shared + 1);\n    let sel = view.state.selection;\n    let parse = parseBetween(view, from, to);\n    let doc = view.state.doc, compare = doc.slice(parse.from, parse.to);\n    let preferredPos, preferredSide;\n    // Prefer anchoring to end when Backspace is pressed\n    if (view.input.lastKeyCode === 8 && Date.now() - 100 < view.input.lastKeyCodeTime) {\n        preferredPos = view.state.selection.to;\n        preferredSide = \"end\";\n    }\n    else {\n        preferredPos = view.state.selection.from;\n        preferredSide = \"start\";\n    }\n    view.input.lastKeyCode = null;\n    let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n    if ((ios && view.input.lastIOSEnter > Date.now() - 225 || android) &&\n        addedNodes.some(n => n.nodeType == 1 && !isInline.test(n.nodeName)) &&\n        (!change || change.endA >= change.endB) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    if (!change) {\n        if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n            !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n            change = { start: sel.from, endA: sel.to, endB: sel.to };\n        }\n        else {\n            if (parse.sel) {\n                let sel = resolveSelection(view, view.state.doc, parse.sel);\n                if (sel && !sel.eq(view.state.selection)) {\n                    let tr = view.state.tr.setSelection(sel);\n                    if (compositionID)\n                        tr.setMeta(\"composition\", compositionID);\n                    view.dispatch(tr);\n                }\n            }\n            return;\n        }\n    }\n    // Chrome sometimes leaves the cursor before the inserted text when\n    // composing after a cursor wrapper. This moves it forward.\n    if (chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from &&\n        parse.sel.head == parse.sel.anchor) {\n        let size = change.endB - change.start;\n        parse.sel = { anchor: parse.sel.anchor + size, head: parse.sel.anchor + size };\n    }\n    view.input.domChangeCount++;\n    // Handle the case where overwriting a selection by typing matches\n    // the start or end of the selected content, creating a change\n    // that's smaller than what was actually overwritten.\n    if (view.state.selection.from < view.state.selection.to &&\n        change.start == change.endB &&\n        view.state.selection instanceof TextSelection) {\n        if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2 &&\n            view.state.selection.from >= parse.from) {\n            change.start = view.state.selection.from;\n        }\n        else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2 &&\n            view.state.selection.to <= parse.to) {\n            change.endB += (view.state.selection.to - change.endA);\n            change.endA = view.state.selection.to;\n        }\n    }\n    // IE11 will insert a non-breaking space _ahead_ of the space after\n    // the cursor space when adding a space before another space. When\n    // that happened, adjust the change to cover the space instead.\n    if (ie && ie_version <= 11 && change.endB == change.start + 1 &&\n        change.endA == change.start && change.start > parse.from &&\n        parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n        change.start--;\n        change.endA--;\n        change.endB--;\n    }\n    let $from = parse.doc.resolveNoCache(change.start - parse.from);\n    let $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    let $fromA = doc.resolve(change.start);\n    let inlineChange = $from.sameParent($to) && $from.parent.inlineContent && $fromA.end() >= change.endA;\n    let nextSel;\n    // If this looks like the effect of pressing Enter (or was recorded\n    // as being an iOS enter press), just dispatch an Enter key instead.\n    if (((ios && view.input.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n        (!inlineChange && $from.pos < parse.doc.content.size && !$from.sameParent($to) &&\n            (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n            nextSel.head == $to.pos)) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    // Same for backspace\n    if (view.state.selection.anchor > change.start &&\n        looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n        if (android && chrome)\n            view.domObserver.suppressSelectionUpdates(); // #820\n        return;\n    }\n    // Chrome Android will occasionally, during composition, delete the\n    // entire composition and then immediately insert it again. This is\n    // used to detect that situation.\n    if (chrome && android && change.endB == change.start)\n        view.input.lastAndroidDelete = Date.now();\n    // This tries to detect Android virtual keyboard\n    // enter-and-pick-suggestion action. That sometimes (see issue\n    // #1059) first fires a DOM mutation, before moving the selection to\n    // the newly created block. And then, because ProseMirror cleans up\n    // the DOM selection, it gives up moving the selection entirely,\n    // leaving the cursor in the wrong place. When that happens, we drop\n    // the new paragraph from the initial change, and fire a simulated\n    // enter key afterwards.\n    if (android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n        parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n        change.endB -= 2;\n        $to = parse.doc.resolveNoCache(change.endB - parse.from);\n        setTimeout(() => {\n            view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n        }, 20);\n    }\n    let chFrom = change.start, chTo = change.endA;\n    let tr, storedMarks, markChange;\n    if (inlineChange) {\n        if ($from.pos == $to.pos) { // Deletion\n            // IE11 sometimes weirdly moves the DOM selection around after\n            // backspacing out the first element in a textblock\n            if (ie && ie_version <= 11 && $from.parentOffset == 0) {\n                view.domObserver.suppressSelectionUpdates();\n                setTimeout(() => selectionToDOM(view), 20);\n            }\n            tr = view.state.tr.delete(chFrom, chTo);\n            storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n        }\n        else if ( // Adding or removing a mark\n        change.endA == change.endB &&\n            (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset), $fromA.parent.content.cut($fromA.parentOffset, change.endA - $fromA.start())))) {\n            tr = view.state.tr;\n            if (markChange.type == \"add\")\n                tr.addMark(chFrom, chTo, markChange.mark);\n            else\n                tr.removeMark(chFrom, chTo, markChange.mark);\n        }\n        else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n            // Both positions in the same text node -- simply insert text\n            let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n            if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text)))\n                return;\n            tr = view.state.tr.insertText(text, chFrom, chTo);\n        }\n    }\n    if (!tr)\n        tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from));\n    if (parse.sel) {\n        let sel = resolveSelection(view, tr.doc, parse.sel);\n        // Chrome Android will sometimes, during composition, report the\n        // selection in the wrong place. If it looks like that is\n        // happening, don't update the selection.\n        // Edge just doesn't move the cursor forward when you start typing\n        // in an empty block or between br nodes.\n        if (sel && !(chrome && android && view.composing && sel.empty &&\n            (change.start != change.endB || view.input.lastAndroidDelete < Date.now() - 100) &&\n            (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n            ie && sel.empty && sel.head == chFrom))\n            tr.setSelection(sel);\n    }\n    if (storedMarks)\n        tr.ensureMarks(storedMarks);\n    if (compositionID)\n        tr.setMeta(\"composition\", compositionID);\n    view.dispatch(tr.scrollIntoView());\n}\nfunction resolveSelection(view, doc, parsedSel) {\n    if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size)\n        return null;\n    return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head));\n}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n    let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks;\n    let added = curMarks, removed = prevMarks, type, mark, update;\n    for (let i = 0; i < prevMarks.length; i++)\n        added = prevMarks[i].removeFromSet(added);\n    for (let i = 0; i < curMarks.length; i++)\n        removed = curMarks[i].removeFromSet(removed);\n    if (added.length == 1 && removed.length == 0) {\n        mark = added[0];\n        type = \"add\";\n        update = (node) => node.mark(mark.addToSet(node.marks));\n    }\n    else if (added.length == 0 && removed.length == 1) {\n        mark = removed[0];\n        type = \"remove\";\n        update = (node) => node.mark(mark.removeFromSet(node.marks));\n    }\n    else {\n        return null;\n    }\n    let updated = [];\n    for (let i = 0; i < prev.childCount; i++)\n        updated.push(update(prev.child(i)));\n    if (Fragment.from(updated).eq(cur))\n        return { mark, type };\n}\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n    if (!$newStart.parent.isTextblock ||\n        // The content must have shrunk\n        end - start <= $newEnd.pos - $newStart.pos ||\n        // newEnd must point directly at or after the end of the block that newStart points into\n        skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n        return false;\n    let $start = old.resolve(start);\n    // Start must be at the end of a block\n    if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n        return false;\n    let $next = old.resolve(skipClosingAndOpening($start, true, true));\n    // The next textblock must start before end and end near it\n    if (!$next.parent.isTextblock || $next.pos > end ||\n        skipClosingAndOpening($next, true, false) < end)\n        return false;\n    // The fragments after the join point must match\n    return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content);\n}\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n    let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos;\n    while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n        depth--;\n        end++;\n        fromEnd = false;\n    }\n    if (mayOpen) {\n        let next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n        while (next && !next.isLeaf) {\n            next = next.firstChild;\n            end++;\n        }\n    }\n    return end;\n}\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n    let start = a.findDiffStart(b, pos);\n    if (start == null)\n        return null;\n    let { a: endA, b: endB } = a.findDiffEnd(b, pos + a.size, pos + b.size);\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, start - Math.min(endA, endB));\n        preferredPos -= endA + adjust - start;\n    }\n    if (endA < start && a.size < b.size) {\n        let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < b.size && isSurrogatePair(b.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endB = start + (endB - endA);\n        endA = start;\n    }\n    else if (endB < start) {\n        let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < a.size && isSurrogatePair(a.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endA = start + (endA - endB);\n        endB = start;\n    }\n    return { start, endA, endB };\n}\nfunction isSurrogatePair(str) {\n    if (str.length != 2)\n        return false;\n    let a = str.charCodeAt(0), b = str.charCodeAt(1);\n    return a >= 0xDC00 && a <= 0xDFFF && b >= 0xD800 && b <= 0xDBFF;\n}\n\n/**\n@internal\n*/\nconst __serializeForClipboard = serializeForClipboard;\n/**\n@internal\n*/\nconst __parseFromClipboard = parseFromClipboard;\n/**\n@internal\n*/\nconst __endComposition = endComposition;\n/**\nAn editor view manages the DOM structure that represents an\neditable document. Its state and behavior are determined by its\n[props](https://prosemirror.net/docs/ref/#view.DirectEditorProps).\n*/\nclass EditorView {\n    /**\n    Create a view. `place` may be a DOM node that the editor should\n    be appended to, a function that will place it into the document,\n    or an object whose `mount` property holds the node to use as the\n    document container. If it is `null`, the editor will not be\n    added to the document.\n    */\n    constructor(place, props) {\n        this._root = null;\n        /**\n        @internal\n        */\n        this.focused = false;\n        /**\n        Kludge used to work around a Chrome bug @internal\n        */\n        this.trackWrites = null;\n        this.mounted = false;\n        /**\n        @internal\n        */\n        this.markCursor = null;\n        /**\n        @internal\n        */\n        this.cursorWrapper = null;\n        /**\n        @internal\n        */\n        this.lastSelectedViewDesc = undefined;\n        /**\n        @internal\n        */\n        this.input = new InputState;\n        this.prevDirectPlugins = [];\n        this.pluginViews = [];\n        /**\n        Holds `true` when a hack node is needed in Firefox to prevent the\n        [space is eaten issue](https://github.com/ProseMirror/prosemirror/issues/651)\n        @internal\n        */\n        this.requiresGeckoHackNode = false;\n        /**\n        When editor content is being dragged, this object contains\n        information about the dragged slice and whether it is being\n        copied or moved. At any other time, it is null.\n        */\n        this.dragging = null;\n        this._props = props;\n        this.state = props.state;\n        this.directPlugins = props.plugins || [];\n        this.directPlugins.forEach(checkStateComponent);\n        this.dispatch = this.dispatch.bind(this);\n        this.dom = (place && place.mount) || document.createElement(\"div\");\n        if (place) {\n            if (place.appendChild)\n                place.appendChild(this.dom);\n            else if (typeof place == \"function\")\n                place(this.dom);\n            else if (place.mount)\n                this.mounted = true;\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        this.nodeViews = buildNodeViews(this);\n        this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n        this.domObserver = new DOMObserver(this, (from, to, typeOver, added) => readDOMChange(this, from, to, typeOver, added));\n        this.domObserver.start();\n        initInput(this);\n        this.updatePluginViews();\n    }\n    /**\n    Holds `true` when a\n    [composition](https://w3c.github.io/uievents/#events-compositionevents)\n    is active.\n    */\n    get composing() { return this.input.composing; }\n    /**\n    The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).\n    */\n    get props() {\n        if (this._props.state != this.state) {\n            let prev = this._props;\n            this._props = {};\n            for (let name in prev)\n                this._props[name] = prev[name];\n            this._props.state = this.state;\n        }\n        return this._props;\n    }\n    /**\n    Update the view's props. Will immediately cause an update to\n    the DOM.\n    */\n    update(props) {\n        if (props.handleDOMEvents != this._props.handleDOMEvents)\n            ensureListeners(this);\n        let prevProps = this._props;\n        this._props = props;\n        if (props.plugins) {\n            props.plugins.forEach(checkStateComponent);\n            this.directPlugins = props.plugins;\n        }\n        this.updateStateInner(props.state, prevProps);\n    }\n    /**\n    Update the view by updating existing props object with the object\n    given as argument. Equivalent to `view.update(Object.assign({},\n    view.props, props))`.\n    */\n    setProps(props) {\n        let updated = {};\n        for (let name in this._props)\n            updated[name] = this._props[name];\n        updated.state = this.state;\n        for (let name in props)\n            updated[name] = props[name];\n        this.update(updated);\n    }\n    /**\n    Update the editor's `state` prop, without touching any of the\n    other props.\n    */\n    updateState(state) {\n        this.updateStateInner(state, this._props);\n    }\n    updateStateInner(state, prevProps) {\n        var _a;\n        let prev = this.state, redraw = false, updateSel = false;\n        // When stored marks are added, stop composition, so that they can\n        // be displayed.\n        if (state.storedMarks && this.composing) {\n            clearComposition(this);\n            updateSel = true;\n        }\n        this.state = state;\n        let pluginsChanged = prev.plugins != state.plugins || this._props.plugins != prevProps.plugins;\n        if (pluginsChanged || this._props.plugins != prevProps.plugins || this._props.nodeViews != prevProps.nodeViews) {\n            let nodeViews = buildNodeViews(this);\n            if (changedNodeViews(nodeViews, this.nodeViews)) {\n                this.nodeViews = nodeViews;\n                redraw = true;\n            }\n        }\n        if (pluginsChanged || prevProps.handleDOMEvents != this._props.handleDOMEvents) {\n            ensureListeners(this);\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this);\n        let scroll = prev.plugins != state.plugins && !prev.doc.eq(state.doc) ? \"reset\"\n            : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n        let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n        if (updateDoc || !state.selection.eq(prev.selection))\n            updateSel = true;\n        let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n        if (updateSel) {\n            this.domObserver.stop();\n            // Work around an issue in Chrome, IE, and Edge where changing\n            // the DOM around an active selection puts it into a broken\n            // state where the thing the user sees differs from the\n            // selection reported by the Selection object (#710, #973,\n            // #1011, #1013, #1035).\n            let forceSelUpdate = updateDoc && (ie || chrome) && !this.composing &&\n                !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n            if (updateDoc) {\n                // If the node that the selection points into is written to,\n                // Chrome sometimes starts misreporting the selection, so this\n                // tracks that and forces a selection reset when our update\n                // did write to the node.\n                let chromeKludge = chrome ? (this.trackWrites = this.domSelectionRange().focusNode) : null;\n                if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n                    this.docView.updateOuterDeco([]);\n                    this.docView.destroy();\n                    this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n                }\n                if (chromeKludge && !this.trackWrites)\n                    forceSelUpdate = true;\n            }\n            // Work around for an issue where an update arriving right between\n            // a DOM selection change and the \"selectionchange\" event for it\n            // can cause a spurious DOM selection update, disrupting mouse\n            // drag selection.\n            if (forceSelUpdate ||\n                !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) &&\n                    anchorInRightPlace(this))) {\n                selectionToDOM(this, forceSelUpdate);\n            }\n            else {\n                syncNodeSelection(this, state.selection);\n                this.domObserver.setCurSelection();\n            }\n            this.domObserver.start();\n        }\n        this.updatePluginViews(prev);\n        if (((_a = this.dragging) === null || _a === void 0 ? void 0 : _a.node) && !prev.doc.eq(state.doc))\n            this.updateDraggedNode(this.dragging, prev);\n        if (scroll == \"reset\") {\n            this.dom.scrollTop = 0;\n        }\n        else if (scroll == \"to selection\") {\n            this.scrollToSelection();\n        }\n        else if (oldScrollPos) {\n            resetScrollPos(oldScrollPos);\n        }\n    }\n    /**\n    @internal\n    */\n    scrollToSelection() {\n        let startDOM = this.domSelectionRange().focusNode;\n        if (this.someProp(\"handleScrollToSelection\", f => f(this))) ;\n        else if (this.state.selection instanceof NodeSelection) {\n            let target = this.docView.domAfterPos(this.state.selection.from);\n            if (target.nodeType == 1)\n                scrollRectIntoView(this, target.getBoundingClientRect(), startDOM);\n        }\n        else {\n            scrollRectIntoView(this, this.coordsAtPos(this.state.selection.head, 1), startDOM);\n        }\n    }\n    destroyPluginViews() {\n        let view;\n        while (view = this.pluginViews.pop())\n            if (view.destroy)\n                view.destroy();\n    }\n    updatePluginViews(prevState) {\n        if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n            this.prevDirectPlugins = this.directPlugins;\n            this.destroyPluginViews();\n            for (let i = 0; i < this.directPlugins.length; i++) {\n                let plugin = this.directPlugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n            for (let i = 0; i < this.state.plugins.length; i++) {\n                let plugin = this.state.plugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n        }\n        else {\n            for (let i = 0; i < this.pluginViews.length; i++) {\n                let pluginView = this.pluginViews[i];\n                if (pluginView.update)\n                    pluginView.update(this, prevState);\n            }\n        }\n    }\n    updateDraggedNode(dragging, prev) {\n        let sel = dragging.node, found = -1;\n        if (this.state.doc.nodeAt(sel.from) == sel.node) {\n            found = sel.from;\n        }\n        else {\n            let movedPos = sel.from + (this.state.doc.content.size - prev.doc.content.size);\n            let moved = movedPos > 0 && this.state.doc.nodeAt(movedPos);\n            if (moved == sel.node)\n                found = movedPos;\n        }\n        this.dragging = new Dragging(dragging.slice, dragging.move, found < 0 ? undefined : NodeSelection.create(this.state.doc, found));\n    }\n    someProp(propName, f) {\n        let prop = this._props && this._props[propName], value;\n        if (prop != null && (value = f ? f(prop) : prop))\n            return value;\n        for (let i = 0; i < this.directPlugins.length; i++) {\n            let prop = this.directPlugins[i].props[propName];\n            if (prop != null && (value = f ? f(prop) : prop))\n                return value;\n        }\n        let plugins = this.state.plugins;\n        if (plugins)\n            for (let i = 0; i < plugins.length; i++) {\n                let prop = plugins[i].props[propName];\n                if (prop != null && (value = f ? f(prop) : prop))\n                    return value;\n            }\n    }\n    /**\n    Query whether the view has focus.\n    */\n    hasFocus() {\n        // Work around IE not handling focus correctly if resize handles are shown.\n        // If the cursor is inside an element with resize handles, activeElement\n        // will be that element instead of this.dom.\n        if (ie) {\n            // If activeElement is within this.dom, and there are no other elements\n            // setting `contenteditable` to false in between, treat it as focused.\n            let node = this.root.activeElement;\n            if (node == this.dom)\n                return true;\n            if (!node || !this.dom.contains(node))\n                return false;\n            while (node && this.dom != node && this.dom.contains(node)) {\n                if (node.contentEditable == 'false')\n                    return false;\n                node = node.parentElement;\n            }\n            return true;\n        }\n        return this.root.activeElement == this.dom;\n    }\n    /**\n    Focus the editor.\n    */\n    focus() {\n        this.domObserver.stop();\n        if (this.editable)\n            focusPreventScroll(this.dom);\n        selectionToDOM(this);\n        this.domObserver.start();\n    }\n    /**\n    Get the document root in which the editor exists. This will\n    usually be the top-level `document`, but might be a [shadow\n    DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n    root if the editor is inside one.\n    */\n    get root() {\n        let cached = this._root;\n        if (cached == null)\n            for (let search = this.dom.parentNode; search; search = search.parentNode) {\n                if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n                    if (!search.getSelection)\n                        Object.getPrototypeOf(search).getSelection = () => search.ownerDocument.getSelection();\n                    return this._root = search;\n                }\n            }\n        return cached || document;\n    }\n    /**\n    When an existing editor view is moved to a new document or\n    shadow tree, call this to make it recompute its root.\n    */\n    updateRoot() {\n        this._root = null;\n    }\n    /**\n    Given a pair of viewport coordinates, return the document\n    position that corresponds to them. May return null if the given\n    coordinates aren't inside of the editor. When an object is\n    returned, its `pos` property is the position nearest to the\n    coordinates, and its `inside` property holds the position of the\n    inner node that the position falls inside of, or -1 if it is at\n    the top level, not in any node.\n    */\n    posAtCoords(coords) {\n        return posAtCoords(this, coords);\n    }\n    /**\n    Returns the viewport rectangle at a given document position.\n    `left` and `right` will be the same number, as this returns a\n    flat cursor-ish rectangle. If the position is between two things\n    that aren't directly adjacent, `side` determines which element\n    is used. When < 0, the element before the position is used,\n    otherwise the element after.\n    */\n    coordsAtPos(pos, side = 1) {\n        return coordsAtPos(this, pos, side);\n    }\n    /**\n    Find the DOM position that corresponds to the given document\n    position. When `side` is negative, find the position as close as\n    possible to the content before the position. When positive,\n    prefer positions close to the content after the position. When\n    zero, prefer as shallow a position as possible.\n    \n    Note that you should **not** mutate the editor's internal DOM,\n    only inspect it (and even that is usually not necessary).\n    */\n    domAtPos(pos, side = 0) {\n        return this.docView.domFromPos(pos, side);\n    }\n    /**\n    Find the DOM node that represents the document node after the\n    given position. May return `null` when the position doesn't point\n    in front of a node or if the node is inside an opaque node view.\n    \n    This is intended to be able to call things like\n    `getBoundingClientRect` on that DOM node. Do **not** mutate the\n    editor DOM directly, or add styling this way, since that will be\n    immediately overriden by the editor as it redraws the node.\n    */\n    nodeDOM(pos) {\n        let desc = this.docView.descAt(pos);\n        return desc ? desc.nodeDOM : null;\n    }\n    /**\n    Find the document position that corresponds to a given DOM\n    position. (Whenever possible, it is preferable to inspect the\n    document structure directly, rather than poking around in the\n    DOM, but sometimes—for example when interpreting an event\n    target—you don't have a choice.)\n    \n    The `bias` parameter can be used to influence which side of a DOM\n    node to use when the position is inside a leaf node.\n    */\n    posAtDOM(node, offset, bias = -1) {\n        let pos = this.docView.posFromDOM(node, offset, bias);\n        if (pos == null)\n            throw new RangeError(\"DOM position not inside the editor\");\n        return pos;\n    }\n    /**\n    Find out whether the selection is at the end of a textblock when\n    moving in a given direction. When, for example, given `\"left\"`,\n    it will return true if moving left from the current cursor\n    position would leave that position's parent textblock. Will apply\n    to the view's current state by default, but it is possible to\n    pass a different state.\n    */\n    endOfTextblock(dir, state) {\n        return endOfTextblock(this, state || this.state, dir);\n    }\n    /**\n    Run the editor's paste logic with the given HTML string. The\n    `event`, if given, will be passed to the\n    [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.\n    */\n    pasteHTML(html, event) {\n        return doPaste(this, \"\", html, false, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Run the editor's paste logic with the given plain-text input.\n    */\n    pasteText(text, event) {\n        return doPaste(this, text, null, true, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Removes the editor from the DOM and destroys all [node\n    views](https://prosemirror.net/docs/ref/#view.NodeView).\n    */\n    destroy() {\n        if (!this.docView)\n            return;\n        destroyInput(this);\n        this.destroyPluginViews();\n        if (this.mounted) {\n            this.docView.update(this.state.doc, [], viewDecorations(this), this);\n            this.dom.textContent = \"\";\n        }\n        else if (this.dom.parentNode) {\n            this.dom.parentNode.removeChild(this.dom);\n        }\n        this.docView.destroy();\n        this.docView = null;\n    }\n    /**\n    This is true when the view has been\n    [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be\n    used anymore).\n    */\n    get isDestroyed() {\n        return this.docView == null;\n    }\n    /**\n    Used for testing.\n    */\n    dispatchEvent(event) {\n        return dispatchEvent(this, event);\n    }\n    /**\n    Dispatch a transaction. Will call\n    [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)\n    when given, and otherwise defaults to applying the transaction to\n    the current state and calling\n    [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.\n    This method is bound to the view instance, so that it can be\n    easily passed around.\n    */\n    dispatch(tr) {\n        let dispatchTransaction = this._props.dispatchTransaction;\n        if (dispatchTransaction)\n            dispatchTransaction.call(this, tr);\n        else\n            this.updateState(this.state.apply(tr));\n    }\n    /**\n    @internal\n    */\n    domSelectionRange() {\n        return safari && this.root.nodeType === 11 && deepActiveElement(this.dom.ownerDocument) == this.dom\n            ? safariShadowSelectionRange(this) : this.domSelection();\n    }\n    /**\n    @internal\n    */\n    domSelection() {\n        return this.root.getSelection();\n    }\n}\nfunction computeDocDeco(view) {\n    let attrs = Object.create(null);\n    attrs.class = \"ProseMirror\";\n    attrs.contenteditable = String(view.editable);\n    view.someProp(\"attributes\", value => {\n        if (typeof value == \"function\")\n            value = value(view.state);\n        if (value)\n            for (let attr in value) {\n                if (attr == \"class\")\n                    attrs.class += \" \" + value[attr];\n                else if (attr == \"style\")\n                    attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];\n                else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n                    attrs[attr] = String(value[attr]);\n            }\n    });\n    if (!attrs.translate)\n        attrs.translate = \"no\";\n    return [Decoration.node(0, view.state.doc.content.size, attrs)];\n}\nfunction updateCursorWrapper(view) {\n    if (view.markCursor) {\n        let dom = document.createElement(\"img\");\n        dom.className = \"ProseMirror-separator\";\n        dom.setAttribute(\"mark-placeholder\", \"true\");\n        dom.setAttribute(\"alt\", \"\");\n        view.cursorWrapper = { dom, deco: Decoration.widget(view.state.selection.head, dom, { raw: true, marks: view.markCursor }) };\n    }\n    else {\n        view.cursorWrapper = null;\n    }\n}\nfunction getEditable(view) {\n    return !view.someProp(\"editable\", value => value(view.state) === false);\n}\nfunction selectionContextChanged(sel1, sel2) {\n    let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n    return sel1.$anchor.start(depth) != sel2.$anchor.start(depth);\n}\nfunction buildNodeViews(view) {\n    let result = Object.create(null);\n    function add(obj) {\n        for (let prop in obj)\n            if (!Object.prototype.hasOwnProperty.call(result, prop))\n                result[prop] = obj[prop];\n    }\n    view.someProp(\"nodeViews\", add);\n    view.someProp(\"markViews\", add);\n    return result;\n}\nfunction changedNodeViews(a, b) {\n    let nA = 0, nB = 0;\n    for (let prop in a) {\n        if (a[prop] != b[prop])\n            return true;\n        nA++;\n    }\n    for (let _ in b)\n        nB++;\n    return nA != nB;\n}\nfunction checkStateComponent(plugin) {\n    if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n        throw new RangeError(\"Plugins passed directly to the view must not have a state component\");\n}\n\nexport { Decoration, DecorationSet, EditorView, __endComposition, __parseFromClipboard, __serializeForClipboard };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}