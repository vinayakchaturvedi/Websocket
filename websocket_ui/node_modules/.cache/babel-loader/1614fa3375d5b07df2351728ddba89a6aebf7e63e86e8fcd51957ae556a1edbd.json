{"ast":null,"code":"import Stomp from 'stompjs';\nimport SockJs from 'sockjs-client';\nlet stompClient = null;\nconst WebsocketService = {\n  connect: async callback => {\n    const socket = await new SockJs(\"http://localhost:8080/websocket-demo\");\n    stompClient = await Stomp.over(socket);\n    stompClient.connect({}, function (frame) {\n      setTimeout(function () {\n        stompClient.subscribe(\"/topic/doc\", function (message) {\n          callback(JSON.parse(message.body));\n        });\n      }, 500);\n    });\n  },\n  sendMessage: async message => {\n    if (stompClient && stompClient.connected) {\n      await stompClient.send('/app/doc', {}, JSON.stringify(message));\n    } else {\n      console.error('WebSocket connection is not established.');\n    }\n  }\n};\nexport default WebsocketService;","map":{"version":3,"names":["Stomp","SockJs","stompClient","WebsocketService","connect","callback","socket","over","frame","setTimeout","subscribe","message","JSON","parse","body","sendMessage","connected","send","stringify","console","error"],"sources":["/home/vinayak/Projects/websocket/ui/websocket_ui/src/component/WebSocketService.js"],"sourcesContent":["import Stomp from 'stompjs';\nimport SockJs from 'sockjs-client';\n\nlet stompClient = null;\n\nconst WebsocketService = {\n    connect: async (callback) => {\n        const socket = await new SockJs(\"http://localhost:8080/websocket-demo\");\n        stompClient = await Stomp.over(socket);\n        stompClient.connect({}, function (frame) {\n            setTimeout(function () {\n                stompClient.subscribe(\"/topic/doc\", function (message) {\n                    callback(JSON.parse(message.body));\n                });\n            }, 500);\n        });\n    },\n    sendMessage: async (message) => {\n        if (stompClient && stompClient.connected) {\n            await stompClient.send('/app/doc', {}, JSON.stringify(message));\n        } else {\n            console.error('WebSocket connection is not established.');\n        }\n    }\n}\n\nexport default WebsocketService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,eAAe;AAElC,IAAIC,WAAW,GAAG,IAAI;AAEtB,MAAMC,gBAAgB,GAAG;EACrBC,OAAO,EAAE,MAAOC,QAAQ,IAAK;IACzB,MAAMC,MAAM,GAAG,MAAM,IAAIL,MAAM,CAAC,sCAAsC,CAAC;IACvEC,WAAW,GAAG,MAAMF,KAAK,CAACO,IAAI,CAACD,MAAM,CAAC;IACtCJ,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE,UAAUI,KAAK,EAAE;MACrCC,UAAU,CAAC,YAAY;QACnBP,WAAW,CAACQ,SAAS,CAAC,YAAY,EAAE,UAAUC,OAAO,EAAE;UACnDN,QAAQ,CAACO,IAAI,CAACC,KAAK,CAACF,OAAO,CAACG,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC;MACN,CAAC,EAAE,GAAG,CAAC;IACX,CAAC,CAAC;EACN,CAAC;EACDC,WAAW,EAAE,MAAOJ,OAAO,IAAK;IAC5B,IAAIT,WAAW,IAAIA,WAAW,CAACc,SAAS,EAAE;MACtC,MAAMd,WAAW,CAACe,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,EAAEL,IAAI,CAACM,SAAS,CAACP,OAAO,CAAC,CAAC;IACnE,CAAC,MAAM;MACHQ,OAAO,CAACC,KAAK,CAAC,0CAA0C,CAAC;IAC7D;EACJ;AACJ,CAAC;AAED,eAAejB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}